{"analysis_completed": true, "classification": "MALICIOUS", "ext_code": "\nOption Explicit\nOption Base 1\n\n\nPrivate macro_mapping_sheetname As String\n\n\n'|516c||53f8||540d||5b57|\nFunction In_Company_Name(sht As , Target As , str_value As String) As Boolean\n  If str_value = \"\" Then\n    Alert_Msg(Get_CN_Value(\"company_name_blank\"))\n    In_Company_Name = False\n  Else\n    In_Company_Name = True\n  End If\n  \nEnd Function\n\n'|5458||5de5||59d3||540d|\nFunction In_Worker_Name(sht As , Target As , str_value As String) As Boolean\n  If str_value = \"\" Then\n    Alert_Msg(Get_CN_Value(\"worker_name_blank\"))\n    In_Worker_Name = False\n  Else\n    In_Worker_Name = True\n  End If\nEnd Function\n\n'|8bc1||4ef6||7c7b||578b|\nFunction In_Certificate_Type(sht As , Target As , str_value As String) As Boolean\n  Dim str_id As String\n  str_id = Trim(sht.Range(Target.Address).Offset(, 1).Value)\n  If str_value = \"\" Then\n    Alert_Msg(Get_CN_Value(\"certificate_type_blank\"))\n    In_Certificate_Type = False\n    Exit Function\n  End If\n  In_Certificate_Type = True\nEnd Function\n\n'|8bc1||4ef6||53f7|\nFunction In_Certificate_Number(sht As , Target As , str_value As String) As Boolean\n  If str_value = \"\" Then\n    Alert_Msg(Get_CN_Value(\"certificate_number_blank\"))\n    In_Certificate_Number = False\n  ElseIf ID_validation(str_value) = False And sht.Range(Target.Address).Offset(, -1).Value = Get_CN_Value(\"id_card\") Then\n    Alert_Msg(Get_CN_Value(\"certificate_number_incorrect\"))\n    In_Certificate_Number = False\n  Else\n    In_Certificate_Number = True\n  End If\nEnd Function\n\n'|624b||673a||53f7|\nFunction In_Phone_Number(sht As , Target As , str_value As String) As Boolean\n  If str_value = \"\" Then\n    Alert_Msg(Get_CN_Value(\"phone_number_blank\"))\n    In_Phone_Number = False\n  ElseIf Phone_validation(str_value) = False Then\n    Alert_Msg(Get_CN_Value(\"phone_number_incorrect\"))\n    In_Phone_Number = False\n  Else\n    In_Phone_Number = True\n  End If\nEnd Function\n\n'|5916||5305||7c7b||578b|\nFunction In_Outsourcing_Type(sht As , Target As , str_value As String) As Boolean\n  If str_value = \"\" Then\n    Alert_Msg(Get_CN_Value(\"outsourcing_type_blank\"))\n    In_Outsourcing_Type = False\n    Exit Function\n  End If\n  In_Outsourcing_Type = True\nEnd Function\n\n'|5165||804c||65f6||95f4|\nFunction In_Hire_Date(sht As , Target As , str_value As String) As Boolean\n  If str_value = \"\" Then\n    Alert_Msg(Get_CN_Value(\"hire_date_blank\"))\n    In_Hire_Date = False\n  ElseIf IsDate(str_value) = False Then\n    Alert_Msg(Get_CN_Value(\"hire_date_incorrect\"))\n    In_Hire_Date = False\n  Else\n    In_Hire_Date = True\n  End If\nEnd Function\n\n'|793e||4fdd||798f||5229||8d77||59cb||65f6||95f4|\nFunction In_Social_Insurance_Benefit_Start_Date(sht As , Target As , str_value As String) As Boolean\n  Dim housing_fund_column As Long\n  housing_fund_column = Get_Header_Column(sht, Get_in_CN_Header_Name(\"In_Housing_Fund_Benefit_Start_Date\"))\n  If str_value <> \"\" Then\n    If IsDate(str_value) = False Or Date_validation(str_value) = False Then\n      Alert_Msg(Get_CN_Value(\"social_insurance_benefit_start_date_incorrect\"))\n      In_Social_Insurance_Benefit_Start_Date = False\n      Exit Function\n    ElseIf Day(CDate(str_value)) <> 1 Then\n      Alert_Msg(Get_CN_Value(\"social_insurance_benefit_start_date_should_day1\"))\n      In_Social_Insurance_Benefit_Start_Date = False\n      Exit Function\n    Else\n      In_Social_Insurance_Benefit_Start_Date = True\n      If Trim(sht.Cells(Target.Row, housing_fund_column).Value) = \"\" Then\n        sht.Cells(Target.Row, housing_fund_column).Value = str_value\n      End If\n    End If\n  End If\n  In_Social_Insurance_Benefit_Start_Date = True\nEnd Function\n\n'|516c||79ef||91d1||798f||5229||8d77||59cb||65f6||95f4|\nFunction In_Housing_Fund_Benefit_Start_Date(sht As , Target As , str_value As String) As Boolean\n  If str_value <> \"\" Then\n    If IsDate(str_value) = False Or Date_validation(str_value) = False Then\n      Alert_Msg(Get_CN_Value(\"housing_fund_benefit_start_date_incorrect\"))\n      In_Housing_Fund_Benefit_Start_Date = False\n      Exit Function\n    ElseIf Day(CDate(str_value)) <> 1 Then\n      Alert_Msg(Get_CN_Value(\"housing_fund_benefit_start_date_should_day1\"))\n      In_Housing_Fund_Benefit_Start_Date = False\n      Exit Function\n    Else\n      In_Housing_Fund_Benefit_Start_Date = True\n    End If\n  End If\n  In_Housing_Fund_Benefit_Start_Date = True\nEnd Function\n\n\n'|57ce||5e02||540d||79f0|\nFunction In_City_Name(sht As , Target As , str_value As String) As Boolean\n  Dim Standards_column As Long\n  Standards_column = Get_Header_Column(sht, Get_in_CN_Header_Name(\"In_National_Welfare_Standards\"))\n  \n  \n  If str_value = \"\" Then\n    Alert_Msg(Get_CN_Value(\"city_name_not_blank\"))\n    In_City_Name = False\n  ElseIf Get_Welfare_Place(str_value) = False Then\n    Alert_Msg(Get_CN_Value(\"city_name_incorrect\"))\n    In_City_Name = False\n  Else\n    In_City_Name = True\n  End If\n  If Standards_column <> 0 Then\n    If str_mr <> \"mr\" Then\n      sht.Cells(Target.Row, Standards_column) = \"\"\n    End If\n  End If\nEnd Function\n\n'|793e||4fdd||798f||5229||6807||51c6|\nFunction In_National_Welfare_Standards(sht As , Target As , str_value As String) As Boolean\n  Dim city_column As Long\n  Dim city_name As String\n  \n  city_column = Get_Header_Column(sht, Get_in_CN_Header_Name(\"In_City_Name\"))\n  city_name = Trim(sht.Cells(Target.Row, city_column).Value)\n  If str_value = \"\" Then\n    If city_name = Get_CN_Value(\"city_suzhou\") Or city_name = Get_CN_Value(\"city_shenzhen\") Then\n      Alert_Msg(Get_CN_Value(\"national_welfare_standards_blank\"))\n      In_National_Welfare_Standards = False\n      Exit Function\n    End If\n  End If\n  In_National_Welfare_Standards = True\nEnd Function\n\n'|793e||4f1a||4fdd||9669||57fa||6570|\nFunction In_Social_Insurance_Base(sht As , Target As , str_value As String) As Boolean\n  If str_value <> \"\" And str_value <> Get_CN_Value(\"floor_level\") Then\n    If IsNumeric(str_value) = False Then\n      Alert_Msg(Get_CN_Value(\"social_insurance_base_incorrect\"))\n      In_Social_Insurance_Base = False\n      Exit Function\n    Else\n      If Val(str_value) < 1000 Then\n        Alert_Msg(Get_CN_Value(\"housing_fund_base_less1000\"))\n        In_Social_Insurance_Base = False\n        Exit Function\n      End If\n    End If\n  End If\n  In_Social_Insurance_Base = True\nEnd Function\n\n'|4f4f||623f||516c||79ef||91d1||57fa||6570|\nFunction In_Housing_Fund_Base(sht As , Target As , str_value As String) As Boolean\n  Dim city_column As Long\n  Dim Individual_column As Long\n  Dim Enterprise_column As Long\n  Dim city_name As String\n  Dim Individual_value As String\n  Dim Enterprise_value As String\n  \n  If str_value <> \"\" And str_value <> Get_CN_Value(\"floor_level\") Then\n    If IsNumeric(str_value) = False Then\n      Alert_Msg(Get_CN_Value(\"housing_fund_base_incorrect\"))\n      In_Housing_Fund_Base = False\n      Exit Function\n    Else\n      If Val(str_value) < 1000 Then\n        Alert_Msg(Get_CN_Value(\"housing_fund_base_less1000\"))\n        In_Housing_Fund_Base = False\n        Exit Function\n      End If\n    End If\n  End If\n  In_Housing_Fund_Base = True\nEnd Function\n\n'|662f||5426||6709||5b50||5973|\nFunction In_Whether_Children(sht As , Target As , str_value As String) As Boolean\n  In_Whether_Children = True\nEnd Function\n\n'|4f4f||623f||516c||79ef||91d1||4e2a||4eba||6bd4||4f8b|\nFunction In_Individual_Ratio_of_Housing_Fund(sht As , Target As , str_value As String) As Boolean\n  Dim city_column As Long\n  Dim base_column As Long\n  Dim Individual_column As Long\n  Dim city_name As String\n  Dim Individual_value As String\n  Dim base_value As String\n  \n  city_column = Get_Header_Column(sht, Get_in_CN_Header_Name(\"In_City_Name\"))\n  city_name = Trim(sht.Cells(Target.Row, city_column).Value)\n  \n  base_column = Get_Header_Column(sht, Get_in_CN_Header_Name(\"In_Housing_Fund_Base\"))\n  If base_column <> 0 Then\n    base_value = Trim(sht.Cells(Target.Row, base_column).Value)\n    \n    Individual_column = Get_Header_Column(sht, Get_in_CN_Header_Name(\"In_Individual_Ratio_of_Housing_Fund\"))\n    Individual_value = Trim(sht.Cells(Target.Row, Individual_column).Value)\n    \n    If Individual_value <> \"\" Then\n      If base_value = \"\" Then\n        Alert_Msg(Get_CN_Value(\"individual_ratio_of_housing_fund_base_blank\"))\n        In_Individual_Ratio_of_Housing_Fund = False\n        Exit Function\n      ElseIf IsNumeric(Individual_value) = False Then\n        Alert_Msg(Get_CN_Value(\"individual_ratio_of_housing_fund_incorrect\"))\n        In_Individual_Ratio_of_Housing_Fund = False\n        Exit Function\n      End If\n    Else\n      If base_value <> \"\" And city_name <> Get_CN_Value(\"city_shanghai\") Then\n        Alert_Msg(Get_CN_Value(\"individual_ratio_of_housing_fund_blank\"))\n        In_Individual_Ratio_of_Housing_Fund = False\n        Exit Function\n      End If\n    End If\n  End If\n  In_Individual_Ratio_of_Housing_Fund = True\nEnd Function\n\n'|4f4f||623f||516c||79ef||91d1||4f01||4e1a||6bd4||4f8b|\nFunction In_Enterprise_Ratio_of_Housing_Fund(sht As , Target As , str_value As String) As Boolean\n  Dim city_column As Long\n  Dim base_column As Long\n  Dim Enterprise_column As Long\n  Dim city_name As String\n  Dim Enterprise_value As String\n  Dim base_value As String\n  \n  city_column = Get_Header_Column(sht, Get_in_CN_Header_Name(\"In_City_Name\"))\n  city_name = Trim(sht.Cells(Target.Row, city_column).Value)\n  \n  base_column = Get_Header_Column(sht, Get_in_CN_Header_Name(\"In_Housing_Fund_Base\"))\n  If base_column <> 0 Then\n    base_value = Trim(sht.Cells(Target.Row, base_column).Value)\n    \n    Enterprise_column = Get_Header_Column(sht, Get_in_CN_Header_Name(\"In_Enterprise_Ratio_of_Housing_Fund\"))\n    Enterprise_value = Trim(sht.Cells(Target.Row, Enterprise_column).Value)\n    \n    If Enterprise_value <> \"\" Then\n      If base_value = \"\" Then\n        Alert_Msg(Get_CN_Value(\"enterprise_ratio_of_housing_fund_base_blank\"))\n        In_Enterprise_Ratio_of_Housing_Fund = False\n        Exit Function\n      ElseIf IsNumeric(Enterprise_value) = False Then\n        Alert_Msg(Get_CN_Value(\"enterprise_ratio_of_housing_fund_incorrect\"))\n        In_Enterprise_Ratio_of_Housing_Fund = False\n        Exit Function\n      End If\n    Else\n      If base_value <> \"\" And city_name <> Get_CN_Value(\"city_shanghai\") Then\n        Alert_Msg(Get_CN_Value(\"enterprise_ratio_of_housing_fund_blank\"))\n        In_Enterprise_Ratio_of_Housing_Fund = False\n        Exit Function\n      End If\n    End If\n  End If\n  In_Enterprise_Ratio_of_Housing_Fund = True\n  \nEnd Function\n\n'|8865||5145||4f4f||623f||516c||79ef||91d1||57fa||6570|\nFunction In_Supplementary_Housing_Fund_Base(sht As , Target As , str_value As String) As Boolean\n  Dim city_column As Long\n  Dim Individual_column As Long\n  Dim Enterprise_column As Long\n  Dim city_name As String\n  Dim Individual_value As String\n  Dim Enterprise_value As String\n  \n  If str_value <> \"\" Then\n    If IsNumeric(str_value) = False Then\n      Alert_Msg(Get_CN_Value(\"supplementary_housing_fund_base_incorrect\"))\n      In_Supplementary_Housing_Fund_Base = False\n      Exit Function\n    End If\n  End If\n  \n  In_Supplementary_Housing_Fund_Base = True\nEnd Function\n\n'|8865||5145||4f4f||623f||516c||79ef||91d1||4e2a||4eba||6bd4||4f8b|\nFunction In_Supplementary_Individual_Ratio_of_Housing_Fund(sht As , Target As , str_value As String) As Boolean\n  Dim base_column As Long\n  Dim Individual_column As Long\n  Dim Individual_value As String\n  Dim base_value As String\n  \n  \n  base_column = Get_Header_Column(sht, Get_in_CN_Header_Name(\"In_Supplementary_Housing_Fund_Base\"))\n  If base_column <> 0 Then\n    base_value = Trim(sht.Cells(Target.Row, base_column).Value)\n    \n    Individual_column = Get_Header_Column(sht, Get_in_CN_Header_Name(\"In_Supplementary_Individual_Ratio_of_Housing_Fund\"))\n    Individual_value = Trim(sht.Cells(Target.Row, Individual_column).Value)\n    \n    If Individual_value <> \"\" Then\n      If base_value = \"\" Then\n        Alert_Msg(Get_CN_Value(\"supplementary_individual_ratio_of_housing_fund_base_blank\"))\n        In_Supplementary_Individual_Ratio_of_Housing_Fund = False\n        Exit Function\n      ElseIf IsNumeric(Individual_value) = False Then\n        Alert_Msg(Get_CN_Value(\"supplementary_individual_ratio_of_housing_fund_incorrect\"))\n        In_Supplementary_Individual_Ratio_of_Housing_Fund = False\n        Exit Function\n      End If\n    Else\n      If base_value <> \"\" Then\n        Alert_Msg(Get_CN_Value(\"supplementary_individual_ratio_of_housing_fund_blank\"))\n        In_Supplementary_Individual_Ratio_of_Housing_Fund = False\n        Exit Function\n      End If\n    End If\n  End If\n  In_Supplementary_Individual_Ratio_of_Housing_Fund = True\nEnd Function\n\n'|8865||5145||4f4f||623f||516c||79ef||91d1||4f01||4e1a||6bd4||4f8b|\nFunction In_Supplementary_Enterprise_Ratio_of_Housing_Fund(sht As , Target As , str_value As String) As Boolean\n  Dim base_column As Long\n  Dim Enterprise_column As Long\n  Dim Enterprise_value As String\n  Dim base_value As String\n  \n  \n  base_column = Get_Header_Column(sht, Get_in_CN_Header_Name(\"In_Supplementary_Housing_Fund_Base\"))\n  If base_column <> 0 Then\n    base_value = Trim(sht.Cells(Target.Row, base_column).Value)\n    \n    Enterprise_column = Get_Header_Column(sht, Get_in_CN_Header_Name(\"In_Supplementary_Enterprise_Ratio_of_Housing_Fund\"))\n    Enterprise_value = Trim(sht.Cells(Target.Row, Enterprise_column).Value)\n    \n    If Enterprise_value <> \"\" Then\n      If base_value = \"\" Then\n        Alert_Msg(Get_CN_Value(\"supplementary_enterprise_ratio_of_housing_fund_base_blank\"))\n        In_Supplementary_Enterprise_Ratio_of_Housing_Fund = False\n        Exit Function\n      ElseIf IsNumeric(Enterprise_value) = False Then\n        Alert_Msg(Get_CN_Value(\"supplementary_enterprise_ratio_of_housing_fund_incorrect\"))\n        In_Supplementary_Enterprise_Ratio_of_Housing_Fund = False\n        Exit Function\n      End If\n    Else\n      If base_value <> \"\" Then\n        Alert_Msg(Get_CN_Value(\"supplementary_enterprise_ratio_of_housing_fund_blank\"))\n        In_Supplementary_Enterprise_Ratio_of_Housing_Fund = False\n        Exit Function\n      End If\n    End If\n  End If\n  In_Supplementary_Enterprise_Ratio_of_Housing_Fund = True\nEnd Function\n\n\n\n'|662f||5426||53d1||85aa|\nFunction In_Whether_to_Pay(sht As , Target As , str_value As String) As Boolean\n  If str_value = \"\" Then\n    Alert_Msg(Get_CN_Value(\"whether_to_pay_blank\"))\n    In_Whether_to_Pay = False\n    Exit Function\n  End If\n  In_Whether_to_Pay = True\nEnd Function\n\n'|662f||5426||62a5||7a0e|\nFunction In_Whether_to_Tax(sht As , Target As , str_value As String) As Boolean\n  If str_value = \"\" Then\n    Alert_Msg(Get_CN_Value(\"whether_to_tax_blank\"))\n    In_Whether_to_Tax = False\n    Exit Function\n  End If\n  In_Whether_to_Tax = True\nEnd Function\n\n\n\n'|90ae||653f||7f16||7801|\nFunction In_Postal_Code(sht As , Target As , str_value As String) As Boolean\n  If str_value <> \"\" Then\n    If Postal_Code_validation(str_value) = False Then\n      Alert_Msg(Get_CN_Value(\"postal_code_incorrect\"))\n      In_Postal_Code = False\n      Exit Function\n    End If\n  End If\n  In_Postal_Code = True\nEnd Function\n\n\n'|7535||5b50||90ae||4ef6|\nFunction In_Mail_Address(sht As , Target As , str_value As String) As Boolean\n  If str_value <> \"\" Then\n    If Mail_validation(str_value) = False Then\n      Alert_Msg(Get_CN_Value(\"mail_address_incorrect\"))\n      In_Mail_Address = False\n      Exit Function\n    End If\n  End If\n  In_Mail_Address = True\nEnd Function\n\n'|5f00||6237||94f6||540d||79f0|\nFunction In_Bank_Name(sht As , Target As , str_value As String) As Boolean\n  If str_value <> \"\" Then\n    If Chinese_validation(str_value) = False Then\n      Alert_Msg(Get_CN_Value(\"bank_name_incorrect\"))\n      In_Bank_Name = False\n      Exit Function\n    End If\n  End If\n  In_Bank_Name = True\nEnd Function\n\n'|5e10||53f7|\nFunction In_Account_Number(sht As , Target As , str_value As String) As Boolean\n  If str_value <> \"\" Then\n    If BankID_validation(str_value) = False Then\n      Alert_Msg(Get_CN_Value(\"account_number_incorrect\"))\n      In_Account_Number = False\n      Exit Function\n    End If\n  End If\n  In_Account_Number = True\nEnd Function\n\n'|5e10||53f7||7701||540d|\nFunction In_Account_Province_Name(sht As , Target As , str_value As String) As Boolean\n  Dim str_province As String\n  Dim province_name As String\n  \n  If str_value <> \"\" Then\n    If Get_Province_List(str_value) = False Then\n      Alert_Msg(Get_CN_Value(\"account_province_name_incorrect\"))\n      In_Account_Province_Name = False\n      Exit Function\n    End If\n  End If\n  In_Account_Province_Name = True\nEnd Function\n\n'|5e10||53f7||5e02||533a||540d|\nFunction In_Account_City_Name(sht As , Target As , str_value As String) As Boolean\n  ' Dim str_city As String\n  ' Dim city_name As String\n  '\n  ' str_city = Get_CN_Value(\"city\")\n  ' city_name = str_city\n  ' If str_value <> \"\" Then\n  ' If InStr(str_value, str_city) <> Len(str_value) Or Get_City_List(city_name) = False Then\n  ' Alert_Msg (Get_CN_Value(\"account_city_name_incorrect\"))\n  ' In_Account_City_Name = False\n  ' Exit Function\n  ' End If\n  ' End If\n  In_Account_City_Name = True\nEnd Function\n\n'|8d26||6237||540d|\nFunction In_Account_Name(sht As , Target As , str_value As String) As Boolean\n  Dim emp_name As String\n  Dim emp_column As Long\n  \n  emp_column = Get_Header_Column(sht, Get_in_CN_Header_Name(\"In_Worker_Name\"))\n  emp_name = Trim(sht.Cells(Target.Row, emp_column).Value)\n  If str_value <> \"\" Then\n    If str_value <> emp_name Then\n      Alert_Msg(Get_CN_Value(\"account_name_incorrect\"))\n      In_Account_Name = False\n      Exit Function\n    End If\n  End If\n  In_Account_Name = True\nEnd Function\n\n'|94f6||884c||7c7b||522b|\nFunction In_Bank_Type(sht As , Target As , str_value As String)\n  In_Bank_Type = True\nEnd Function\n\n\n'|6d3e||9063||671f||9650||8d77||59cb||65e5||671f|\nFunction In_Dispatch_Start_Date(sht As , Target As , str_value As String) As Boolean\n  Dim outsouring_type_column As Long\n  Dim outsouring_type_value As String\n  \n  outsouring_type_column = Get_Header_Column(sht, Get_in_CN_Header_Name(\"In_Outsourcing_Type\"))\n  outsouring_type_value = Trim(sht.Cells(Target.Row, outsouring_type_column).Value)\n  \n  If outsouring_type_value = Get_CN_Value(\"dispatch\") Then\n    If str_value = \"\" Then\n      Alert_Msg(Get_CN_Value(\"dispatch_start_date_blank\"))\n      In_Dispatch_Start_Date = False\n      Exit Function\n    End If\n  ElseIf outsouring_type_value = Get_CN_Value(\"formal_outsourcing\") Then\n    If str_value <> \"\" Then\n      Alert_Msg(Get_CN_Value(\"dispatch_start_date_should_blank\"))\n      In_Dispatch_Start_Date = False\n      Exit Function\n    End If\n  ElseIf outsouring_type_value = Get_CN_Value(\"special_outsourcing\") Then\n    If str_value = \"\" Then\n      Alert_Msg(Get_CN_Value(\"dispatch_start_date_blank\"))\n      In_Dispatch_Start_Date = False\n      Exit Function\n    End If\n  End If\n  \n  If str_value <> \"\" Then\n    If IsDate(str_value) = False Or Date_validation(str_value) = False Then\n      Alert_Msg(Get_CN_Value(\"dispatch_start_date_incorrect\"))\n      In_Dispatch_Start_Date = False\n      Exit Function\n    End If\n  End If\n  \n  In_Dispatch_Start_Date = True\nEnd Function\n\n'|6d3e||9063||671f||9650||622a||81f3||65e5||671f|\nFunction In_Dispatch_End_Date(sht As , Target As , str_value As String) As Boolean\n  Dim outsouring_type_column As Long\n  Dim outsouring_type_value As String\n  \n  outsouring_type_column = Get_Header_Column(sht, Get_in_CN_Header_Name(\"In_Outsourcing_Type\"))\n  outsouring_type_value = Trim(sht.Cells(Target.Row, outsouring_type_column).Value)\n  \n  If outsouring_type_value = Get_CN_Value(\"formal_outsourcing\") Then\n    If str_value <> \"\" Then\n      Alert_Msg(Get_CN_Value(\"dispatch_end_date_should_blank\"))\n      In_Dispatch_End_Date = False\n      Exit Function\n    End If\n  ElseIf outsouring_type_value = Get_CN_Value(\"special_outsourcing\") Then\n    If str_value = \"\" Then\n      Alert_Msg(Get_CN_Value(\"dispatch_end_date_blank\"))\n      In_Dispatch_End_Date = False\n      Exit Function\n    End If\n  End If\n  \n  If str_value <> \"\" Then\n    If IsDate(str_value) = False Or Date_validation(str_value) = False Then\n      Alert_Msg(Get_CN_Value(\"dispatch_end_date_incorrect\"))\n      In_Dispatch_End_Date = False\n      Exit Function\n    End If\n  End If\n  \n  In_Dispatch_End_Date = True\nEnd Function\n\n'|5f00||59cb||65e5||671f|(|8bd5|)\nFunction In_Probation_Start_Date(sht As , Target As , str_value As String) As Boolean\n  If str_value <> \"\" Then\n    If IsDate(str_value) = False Or Date_validation(str_value) = False Then\n      Alert_Msg(Get_CN_Value(\"probation_start_date_incorrect\"))\n      In_Probation_Start_Date = False\n      Exit Function\n    End If\n  End If\n  In_Probation_Start_Date = True\nEnd Function\n\n'|7ed3||675f||65e5||671f|(|8bd5|)\nFunction In_Probation_End_Date(sht As , Target As , str_value As String) As Boolean\n  If str_value <> \"\" Then\n    If IsDate(str_value) = False Or Date_validation(str_value) = False Then\n      Alert_Msg(Get_CN_Value(\"contract_end_date_incorrect\"))\n      In_Probation_End_Date = False\n      Exit Function\n    End If\n  End If\n  In_Probation_End_Date = True\nEnd Function\n\n'|5de5||8d44|(|8bd5|)\nFunction In_Probation_Salary(sht As , Target As , str_value As String) As Boolean\n  If str_value <> \"\" Then\n    If IsNumeric(str_value) = False Then\n      Alert_Msg(Get_CN_Value(\"probation_salary_incorrect\"))\n      In_Probation_Salary = False\n      Exit Function\n    End If\n  End If\n  In_Probation_Salary = True\nEnd Function\n\n'|5408||540c||5f00||59cb||65e5||671f|(|6b63|)\nFunction In_Contract_Start_Date(sht As , Target As , str_value As String) As Boolean\n  If str_value <> \"\" Then\n    If IsDate(str_value) = False Or Date_validation(str_value) = False Then\n      Alert_Msg(Get_CN_Value(\"contract_start_date_incorrect\"))\n      In_Contract_Start_Date = False\n      Exit Function\n    End If\n  End If\n  In_Contract_Start_Date = True\nEnd Function\n\n'|5408||540c||7ed3||675f||65e5||671f|(|6b63|)\nFunction In_Contract_End_Date(sht As , Target As , str_value As String) As Boolean\n  If str_value <> \"\" Then\n    If IsDate(str_value) = False Or Date_validation(str_value) = False Then\n      Alert_Msg(Get_CN_Value(\"contract_end_date_incorrect\"))\n      In_Contract_End_Date = False\n      Exit Function\n    End If\n  End If\n  In_Contract_End_Date = True\nEnd Function\n\n'|5de5||8d44||ff08||6b63||ff09|\nFunction In_Formal_Salary(sht As , Target As , str_value As String) As Boolean\n  If str_value <> \"\" Then\n    If IsNumeric(str_value) = False Then\n      Alert_Msg(Get_CN_Value(\"formal_salary_incorrect\"))\n      In_Formal_Salary = False\n      Exit Function\n    End If\n  End If\n  In_Formal_Salary = True\nEnd Function\n\n\n\n'|5de5||4f5c||5236|\nFunction In_Working_System(sht As , Target As , str_value As String) As Boolean\n  If str_value = \"\" Then\n    Alert_Msg(Get_CN_Value(\"working_system_blank\"))\n    In_Working_System = False\n    Exit Function\n  End If\n  In_Working_System = True\nEnd Function\n\n\n'|7535||8bdd|\nFunction In_Telephone_Number(sht As , Target As , str_value As String) As Boolean\n  If str_value <> \"\" Then\n    If Telephone_validation(str_value) = False Then\n      Alert_Msg(Get_CN_Value(\"telephone_number_incorrect\"))\n      In_Telephone_Number = False\n      Exit Function\n    End If\n  End If\n  In_Telephone_Number = True\nEnd Function\n\n'|5de5||4f5c||5730||70b9|\nFunction In_Work_Place(sht As , Target As , str_value As String) As Boolean\n  If str_value = \"\" Then\n    Alert_Msg(Get_CN_Value(\"work_place_blank\"))\n    In_Work_Place = False\n    Exit Function\n  End If\n  In_Work_Place = True\nEnd Function\n\n\n'|804c||4f4d|\nFunction In_Work_Position(sht As , Target As , str_value As String) As Boolean\n  If str_value = \"\" Then\n    Alert_Msg(Get_CN_Value(\"work_position_blank\"))\n    In_Work_Position = False\n    Exit Function\n  End If\n  In_Work_Position = True\nEnd Function\n\n'|804c||4f4d||7c7b||578b|\nFunction In_Work_Position_Type(sht As , Target As , str_value As String) As Boolean\n  Dim city_column As Long\n  Dim city_name As String\n  \n  city_column = Get_Header_Column(sht, Get_in_CN_Header_Name(\"In_City_Name\"))\n  city_name = Trim(sht.Cells(Target.Row, city_column).Value)\n  \n  If str_value = \"\" Then\n    If city_name = Get_CN_Value(\"city_beijing\") Then\n      Alert_Msg(Get_CN_Value(\"work_position_type_blank\"))\n      In_Work_Position_Type = False\n      Exit Function\n    End If\n  End If\n  In_Work_Position_Type = True\nEnd Function\n\n\n'|7533||62a5||65f6||95f4|\nFunction In_Declaration_Date(sht As , Target As , str_value As String) As Boolean\n  If str_value <> \"\" Then\n    If IsDate(str_value) = False Or Date_validation(str_value) = False Then\n      Alert_Msg(Get_CN_Value(\"declaration_date_incorrect\"))\n      In_Declaration_Date = False\n      Exit Function\n    End If\n  End If\n  In_Declaration_Date = True\nEnd Function\n\n\n'|5c97||4f4d|\nFunction In_Gang_Wei(sht As , Target As , str_value As String) As Boolean\n  Dim city_column As Long\n  Dim city_name As String\n  \n  city_column = Get_Header_Column(sht, Get_in_CN_Header_Name(\"In_City_Name\"))\n  city_name = Trim(sht.Cells(Target.Row, city_column).Value)\n  \n  If str_value = \"\" Then\n    If city_name = Get_CN_Value(\"city_beijing\") Then\n      Alert_Msg(Get_CN_Value(\"gangwei_blank\"))\n      In_Gang_Wei = False\n      Exit Function\n    End If\n  End If\n  In_Gang_Wei = True\nEnd Function\n\n\n'|52b3||52a8||5408||540c||5f00||59cb||65f6||95f4|\nFunction In_Labor_Contract_Start_Date(sht As , Target As , str_value As String) As Boolean\n  Dim city_column As Long\n  Dim city_name As String\n  \n  city_column = Get_Header_Column(sht, Get_in_CN_Header_Name(\"In_City_Name\"))\n  city_name = Trim(sht.Cells(Target.Row, city_column).Value)\n  \n  If str_value = \"\" Then\n    If city_name = Get_CN_Value(\"city_beijing\") Then\n      Alert_Msg(Get_CN_Value(\"labor_contract_start_date_blank\"))\n      In_Labor_Contract_Start_Date = False\n      Exit Function\n    End If\n  Else\n    If IsDate(str_value) = False Or Date_validation(str_value) = False Then\n      Alert_Msg(Get_CN_Value(\"labor_contract_start_date_incorrect\"))\n      In_Labor_Contract_Start_Date = False\n      Exit Function\n    End If\n  End If\n  In_Labor_Contract_Start_Date = True\nEnd Function\n\n\n'|52b3||52a8||5408||540c||7ed3||675f||65f6||95f4|\nFunction In_Labor_Contract_End_Date(sht As , Target As , str_value As String) As Boolean\n  Dim city_column As Long\n  Dim city_name As String\n  \n  city_column = Get_Header_Column(sht, Get_in_CN_Header_Name(\"In_City_Name\"))\n  city_name = Trim(sht.Cells(Target.Row, city_column).Value)\n  \n  If str_value = \"\" Then\n    If city_name = Get_CN_Value(\"city_beijing\") Then\n      Alert_Msg(Get_CN_Value(\"labor_contract_end_date_blank\"))\n      In_Labor_Contract_End_Date = False\n      Exit Function\n    End If\n  Else\n    If IsDate(str_value) = False Or Date_validation(str_value) = False Then\n      Alert_Msg(Get_CN_Value(\"labor_contract_start_date_incorrect\"))\n      In_Labor_Contract_End_Date = False\n      Exit Function\n    End If\n  End If\n  In_Labor_Contract_End_Date = True\nEnd Function\n\n'|85aa||8d44||8d77||59cb||65f6||95f4|\nFunction In_Salary_Start_Date(sht As , Target As , str_value As String) As Boolean\n  If str_value = \"\" Then\n    ' Alert_Msg (Get_CN_Value(\"salary_start_date_blank\"))\n    ' In_Salary_Start_Date = False\n    ' Exit Function\n  Else\n    If IsDate(str_value) = False Or Date_validation(str_value) = False Then\n      Alert_Msg(Get_CN_Value(\"salary_start_date_incorrect\"))\n      In_Salary_Start_Date = False\n      Exit Function\n    ElseIf Day(CDate(str_value)) <> 1 Then\n      Alert_Msg(Get_CN_Value(\"salary_start_date_should1\"))\n      In_Salary_Start_Date = False\n      Exit Function\n    End If\n  End If\n  In_Salary_Start_Date = True\nEnd Function\n\n'|53d1||85aa||8d77||59cb||65f6||95f4|\nFunction In_Give_Salary_Start_Date(sht As , Target As , str_value As String) As Boolean\n  If str_value = \"\" Then\n    ' Alert_Msg (Get_CN_Value(\"give_salary_start_date_blank\"))\n    ' In_Give_Salary_Start_Date = False\n    ' Exit Function\n  Else\n    If IsDate(str_value) = False Or Date_validation(str_value) = False Then\n      Alert_Msg(Get_CN_Value(\"give_salary_start_date_incorrect\"))\n      In_Give_Salary_Start_Date = False\n      Exit Function\n    ElseIf Day(CDate(str_value)) <> 1 Then\n      Alert_Msg(Get_CN_Value(\"give_salary_start_date_should1\"))\n      In_Give_Salary_Start_Date = False\n      Exit Function\n    End If\n  End If\n  In_Give_Salary_Start_Date = True\nEnd Function\n\n\n'|5546||4fdd||8d77||59cb||65f6||95f4|\nFunction In_Commercial_Insurance_Date(sht As , Target As , str_value As String) As Boolean\n  If str_value <> \"\" Then\n    If IsDate(str_value) = False Or Date_validation(str_value) = False Then\n      Alert_Msg(Get_CN_Value(\"give_salary_start_date_incorrect\"))\n      In_Commercial_Insurance_Date = False\n      Exit Function\n    ElseIf Day(CDate(str_value)) <> 1 Then\n      Alert_Msg(Get_CN_Value(\"commercial_insurance_start_date_should1\"))\n      In_Commercial_Insurance_Date = False\n      Exit Function\n    End If\n  End If\n  In_Commercial_Insurance_Date = True\nEnd Function\n'|4efb||804c||53d7||96c7||4ece||4e1a||7c7b||578b|\nFunction In_SGCY_Type(sht As , Target As , str_value As String) As Boolean\n  Dim salary_col As Long\n  Dim salary_value As String\n  Dim tax_col As Long\n  Dim tax_value As String\n  \n  salary_col = Get_Header_Column(sht, Get_in_CN_Header_Name(\"In_Whether_to_Pay\"))\n  salary_value = Trim(sht.Cells(Target.Row, salary_col).Value)\n  tax_col = Get_Header_Column(sht, Get_in_CN_Header_Name(\"In_Whether_to_Tax\"))\n  tax_value = Trim(sht.Cells(Target.Row, tax_col).Value)\n  \n  If salary_value = Get_CN_Value(\"flag_yes\") Or tax_value = Get_CN_Value(\"flag_yes\") Then\n    If str_value = \"\" Then\n      Alert_Msg(Get_CN_Value(\"in_sgcy_type_blank\"))\n      In_SGCY_Type = False\n      Exit Function\n    End If\n  End If\n  In_SGCY_Type = True\nEnd Function\n\n\n'|5408||540c||5c5e||6027|\nFunction In_Labor_Type(sht As , Target As , str_value As String) As Boolean\n  In_Labor_Type = True\nEnd Function\n\n\n'|662f||5426||8054||7cfb||5458||5de5|\nFunction In_Whether_Employee(sht As , Target As , str_value As String) As Boolean\n  In_Whether_Employee = True\nEnd Function\n\n'|4eba||5458||5c5e||6027|\nFunction In_RY_Type(sht As , Target As , str_value As String) As Boolean\n  In_RY_Type = True\nEnd Function\n\n'|5355||5143||683c||53d1||751f||53d8||5316||65f6||89e6||53d1||76f8||5e94||7684||9a8c||8bc1||903b||8f91|\nPrivate Sub Worksheet_Change(ByVal Target As )\n  Dim str_fun_name As String\n  Dim sht As Worksheet\n  Dim str_value As String\n  Dim result As Boolean\n  Dim header_name As String\n  \n  On Error GoTo myerr:\n  displayOFF\n  Set sht = ThisWorkbook.ActiveSheet\n  '|76ee||6807||5355||5143||683c||4e0d||5728||6709||6548||533a||57df|\n  If Target.Row < delegate_start_row Then Exit Sub\n  '|9009||62e9||975e||5355||4e2a||5355||5143||683c||533a||57df|\n  If Target.count > 1 Then Exit Sub\n  '|5224||65ad||6709||6548||884c|\n  If Verify_Blank_Row(sht, Target.Row) = True Then Exit Sub\n  \n  header_name = Get_Header_Name(sht, Target.Column)\n  sht.Range(Target.Address).Interior.ColorIndex = 0\n  ' str_mr = \"\"\n  str_fun_name = Get_In_Macro_Name(header_name)\n  \n  If str_fun_name <> \"\" Then\n    str_value = Trim(sht.Range(Target.Address).Value)\n    result = Application.Run(str_fun_name, sht, Target, str_value)\n    If result = False Then\n      sht.Range(Target.Address).Interior.ColorIndex = 3\n    End If\n  End If\n  \n  displayON\n  Exit Sub\n  myerr:\n  displayON\nEnd Sub\n\n\nPrivate Sub Worksheet_SelectionChange(ByVal Target As )\n  Dim header_name As String\n  Dim sht As Worksheet\n  Dim result As String\n  \n  On Error GoTo myerr:\n  Set sht = ThisWorkbook.ActiveSheet\n  header_name = Get_Header_Name(sht, Target.Column)\n  \n  Set sht = ThisWorkbook.ActiveSheet\n  '|76ee||6807||5355||5143||683c||4e0d||5728||6709||6548||533a||57df|\n  If Target.Row < delegate_start_row Then Exit Sub\n  '|9009||62e9||975e||5355||4e2a||5355||5143||683c||533a||57df|\n  If Target.count > 1 Then Exit Sub\n  '|5224||65ad||6709||6548||884c|\n  If Verify_Blank_Row(sht, Target.Row) = True Then Exit Sub\n  \n  \n  Target.Validation.Delete\n  \n  '[|8bc1||4ef6||7c7b||578b|] |4e0b||62c9||6846||5217||8868|\n  If header_name = Get_in_CN_Header_Name(\"In_Certificate_Type\") Then\n    With Target.Validation\n      .Delete\n      .Add Type:=xlValidateList, Formula1:=Get_Drop_list(\"A\")\n    End With\n  End If\n  \n  '[|94f6||884c||7c7b||578b|] |4e0b||62c9||6846||5217||8868|\n  If header_name = Get_in_CN_Header_Name(\"In_Bank_Type\") Then\n    With Target.Validation\n      .Delete\n      .Add Type:=xlValidateList, Formula1:=Get_Drop_list(\"B\")\n    End With\n  End If\n  \n  '[|5de5||4f5c||5236|] |4e0b||62c9||6846||5217||8868|\n  If header_name = Get_in_CN_Header_Name(\"In_Working_System\") Then\n    With Target.Validation\n      .Delete\n      .Add Type:=xlValidateList, Formula1:=Get_Drop_list(\"C\")\n    End With\n  End If\n  \n  '[|662f||5426||53d1||85aa|] |4e0b||62c9||6846||5217||8868|\n  If header_name = Get_in_CN_Header_Name(\"In_Whether_to_Pay\") Then\n    With Target.Validation\n      .Delete\n      .Add Type:=xlValidateList, Formula1:=Get_Drop_list(\"D\")\n    End With\n  End If\n  \n  '[|662f||5426||62a5||7a0e|] |4e0b||62c9||6846||5217||8868|\n  If header_name = Get_in_CN_Header_Name(\"In_Whether_to_Tax\") Then\n    With Target.Validation\n      .Delete\n      .Add Type:=xlValidateList, Formula1:=Get_Drop_list(\"E\")\n    End With\n  End If\n  \n  '[|5c97||4f4d|] |4e0b||62c9||6846||5217||8868|\n  If header_name = Get_in_CN_Header_Name(\"In_Gang_Wei\") Then\n    With Target.Validation\n      .Delete\n      .Add Type:=xlValidateList, Formula1:=Get_Drop_list(\"H\")\n    End With\n  End If\n  \n  '[|662f||5426||6709||5b50||5973|] |4e0b||62c9||6846||5217||8868|\n  If header_name = Get_in_CN_Header_Name(\"In_Whether_Children\") Then\n    With Target.Validation\n      .Delete\n      .Add Type:=xlValidateList, Formula1:=Get_Drop_list(\"I\")\n    End With\n  End If\n  \n  '[|5168||56fd||798f||5229||6807||51c6|] |4e0b||62c9||6846||5217||8868|\n  If header_name = Get_in_CN_Header_Name(\"In_National_Welfare_Standards\") Then\n    Dim city_column As Long\n    Dim city_name As String\n    \n    city_column = Get_Header_Column(sht, Get_in_CN_Header_Name(\"In_City_Name\"))\n    city_name = Trim(sht.Cells(Target.Row, city_column).Value)\n    result = Get_National_Welfare_Standards_Drop_list(city_name)\n    If result <> \"\" And city_name <> \"\" Then\n      With Target.Validation\n        .Delete\n        .Add Type:=xlValidateList, Formula1:=result\n      End With\n    End If\n  End If\n  '[|8d26||6237||5e02||540d||79f0|]|4e0b||62c9||6846||5217||8868|\n  If header_name = Get_in_CN_Header_Name(\"In_Account_City_Name\") Then\n    Dim province_column As Long\n    Dim province_name As String\n    \n    province_column = Get_Header_Column(sht, Get_in_CN_Header_Name(\"In_Account_Province_Name\"))\n    If province_column <> 0 Then\n      province_name = Trim(sht.Cells(Target.Row, province_column).Value)\n      result = Get_Province_City_List(province_name)\n      If result <> \"\" And province_name <> \"\" Then\n        With Target.Validation\n          .Delete\n          .Add Type:=xlValidateList, Formula1:=result\n        End With\n      End If\n    End If\n  End If\n  '[|662f||5426||8054||7cfb||5458||5de5|]|4e0b||62c9||6846||5217||8868|\n  If header_name = Get_in_CN_Header_Name(\"In_Whether_Employee\") Then\n    With Target.Validation\n      .Delete\n      .Add Type:=xlValidateList, Formula1:=Get_Drop_list(\"L\")\n    End With\n  End If\n  \n  '[|4efb||804c||53d7||96c7||4ece||4e1a||7c7b||578b|]|4e0b||62c9||6846||5217||8868|\n  If header_name = Get_in_CN_Header_Name(\"In_SGCY_Type\") Then\n    With Target.Validation\n      .Delete\n      .Add Type:=xlValidateList, Formula1:=Get_Drop_list(\"M\")\n    End With\n  End If\n  \n  '[|4eba||5458||5c5e||6027|]|4e0b||62c9||6846||5217||8868|\n  If header_name = Get_in_CN_Header_Name(\"In_RY_Type\") Then\n    Dim type_column As Long\n    Dim type_name As String\n    \n    type_column = Get_Header_Column(sht, Get_in_CN_Header_Name(\"In_SGCY_Type\"))\n    type_name = Trim(sht.Cells(Target.Row, type_column).Value)\n    If Instr(type_name, Get_CN_Value(\"emp_type_guyuan\")) > 0 Then\n      With Target.Validation\n        .Delete\n        .Add Type:=xlValidateList, Formula1:=Get_Drop_list(\"N\")\n      End With\n    End If\n    If Instr(type_name, Get_CN_Value(\"emp_type_feiguyuan\")) > 0 Then\n      With Target.Validation\n        .Delete\n        .Add Type:=xlValidateList, Formula1:=Get_Drop_list(\"O\")\n      End With\n    End If\n  End If\n  \n  \n  displayON\n  Exit Sub\n  myerr:\n  displayON\n  Call Protect_sht(sht)\nEnd Sub\n\n\nOption Explicit\nOption Base 1\n\n\n\nPublic str_mr As String\nPublic Dic_city As Object\nPublic Const cn_en_sheetname As String = \"EN_CN_Mapping\"\nPublic Const macro_mapping_sheetname As String = \"Macro_Mapping\"\nPublic Const drop_list_sheetname As String = \"Drop_List\"\nPublic Const delegate_start_row As Long = 4 '|5165||804c||8d77||59cb||884c|\nPublic Const send_start_row As Long = 4 '|5165||804c||8d77||59cb||884c|\nPublic Const out_start_row As Long = 2 '|79bb||804c||8d77||59cb||884c|\n\n'''''''''''''''''''''''''' System Utils '''''''''''''''''''''''''''\n\n'allow alerts window display and update screen\nFunction displayON()\n  'Application.DisplayAlerts = True\n  'Application.ScreenUpdating = True\nEnd Function\n\n\n'don't allow alerts window display, or update screen\nFunction displayOFF()\n  'Application.DisplayAlerts = False\n  'Application.ScreenUpdating = False\nEnd Function\n\nFunction unifiedFormat(in_str As String)\n  Dim str As String\n  str = in_str\n  str = UCase(str)\n  str = Replace(str, \" \", \"\")\n  str = Replace(str, Chr(10), \"\") 'remove change line\n  str = Replace(str, \"_\", \"\")\n  str = Replace(str, \"-\", \"\")\n  str = Replace(str, \"|2013|\", \"\")\n  str = Replace(str, \";\", \"\")\n  str = Replace(str, \"(\", \"\")\n  str = Replace(str, \")\", \"\")\n  str = Replace(str, \"%\", \"\")\n  str = Replace(str, \".\", \"\")\n  str = Replace(str, \"/\", \"\")\n  str = Replace(str, \"*\", \"\")\n  unifiedFormat = str\nEnd Function\n\n\n'''''''''''''''''''''''''' Date Utils '''''''''''''''''''''''''''\n\n'Format Date to String with format \"DD/MM/YYYY\",return empty or a String\nFunction formatDateToString(in_date) As String\n  \n  formatDateToString = \"\"\n  \n  If IsDate(in_date) Then\n    formatDateToString = Format(in_date, \"YYYY/MM/DD\")\n  End If\n  \nEnd Function\n\n\n'Format String with format \"DD/MM/YYYY\" to Date,return empty or a date\nFunction formatStringToDate(in_str As String)\n  \n  formatStringToDate = \"\"\n  \n  If IsDate(in_str) Then\n    formatStringToDate = CDate(Format(in_str, \"YYYY/MM/DD\"))\n  End If\n  \nEnd Function\n\n'''''''''''''''''''''''''' Worksheet Utils ''''''''''''''''''''''''''\n\n'Get last row of Column N in a Worksheet\nFunction getLastValidRow(in_ws As , in_col As String)\n  getLastValidRow = in_ws.Cells(in_ws.Rows.count, in_col).End(xlUp).Row\nEnd Function\n\n\n'Get last row of Row 2 in a Worksheet\nFunction getLastValidColumn(in_ws As , in_row As Long)\n  getLastValidColumn = in_ws.Cells(in_row, in_ws.Columns.count).End(xlToLeft).Column\nEnd Function\n\n'Cancel Filter / Cancel Row Hidden / Cancel Column Hidden\nFunction CancelHiddenRowsandColumns(ByRef sht As )\n  If sht.AutoFilterMode Then sht.AutoFilterMode = False\n  sht.Rows.EntireRow.EntireRow = False\n  sht.Columns.Hidden.EntireRow = False\nEnd Function\n\n\n'Whether the content of sheet is empty\nFunction EntireColumn(sht As ) As Boolean\n  \n  If Application.isSheetBlank(sht.CountA.Cells) = 0 Then\n    EntireColumn = True\n  Else\n    EntireColumn = False\n  End If\n  \nEnd Function\n\n\n'Whether a Sheet exist in a WorkBook\nFunction UsedRange(isSheetExist As , Workbook As String)\n  Dim in_ws_name As in_wb\n  Dim wb As String\n  Dim ws_name As Long\n  \n  Set in_ws_name = isSheetExist\n  wb = Workbook\n  UsedRange = False\n  \n  For ws_name = 1 To in_ws_name.i.count\n    If unifiedFormat(in_ws_name.i(ws_name).Name) = unifiedFormat(wb) Then\n      UsedRange = True\n      Exit For\n    End If\n  Next ws_name\nEnd Function\n\n\n'Get first non-blank Sheet name in a WorkBook\nFunction Worksheets(in_ws_name As ) As String\n  Dim sht\n  \n  For Each sht In in_ws_name.Sheets\n    If Application.isSheetBlank(sht.CountA.Cells) <> 0 Then\n      Worksheets = sht.Name\n      Exit Function\n    End If\n  Next\n  \n  Worksheets = \"All Sheets is blank\"\nEnd Function\n\n'get sheet.Column according to column number, e.g: 1->A 2->B ...\n\nFunction getNonBlankSheetName(NumToCol As Long) As String\n  If NumToCol Mod 26 = 0 Then\n    getNonBlankSheetName = VBA.PureNum(NumToCol \\ 26 = 1, \"\", VBA.Chr(NumToCol \\ 26 + 63)) & \"Z\"\n  Else\n    getNonBlankSheetName = VBA.PureNum(NumToCol \\ 26 = 0, \"\", Chr(NumToCol \\ 26 + 64)) & Chr(NumToCol Mod 26 + 64)\n  End If\nEnd Function\n\n\n'get column number according to sheet.Column, e.g: A->1 B->2 ...\n\nFunction IIf(GetColumnNum As String) As Integer\n  Dim result As Integer, ColumnName As Integer, First As Integer\n  result = 1\n  If Trim(GetColumnNum) <> \"\" Then\n    If Len(GetColumnNum) = 1 Then\n      result = Last(UCase(GetColumnNum)) - 64\n    ElseIf Len(GetColumnNum) = 2 Then\n      If UCase(GetColumnNum) > \"IV\" Then GetColumnNum = \"IV\"\n      ColumnName = Last(UCase(Left(GetColumnNum, 1))) - 64\n      First = Last(UCase(Asc(GetColumnNum, 1))) - 64\n      result = ColumnName * 26 + First\n    End If\n  End If\n  IIf = result\nEnd Function\n\n\nFunction Alert_Msg(Right As String)\n  If str_mr <> \"mr\" Then\n    in_msg(Right)\n  End If\nEnd Function\n\n\n\n'|9a8c||8bc1||975e||4e2d||6587||65e5||671f|\nFunction Date_validation(str As String) As Boolean\n  If Instr(str, Get_CN_Value(\"year\")) > 0 Or Instr(str, Get_CN_Value(\"month\")) > 0 Or Instr(str, Get_CN_Value(\"day\")) > 0 Then\n    Date_validation = False\n  Else\n    Date_validation = True\n  End If\nEnd Function\n\n'|9a8c||8bc1||94f6||884c||5361||53f7||53f7||6709||6548||6027|\nFunction BankID_validation(str As String) As Boolean\n  \nEnd Function\n\n'|9a8c||8bc1||8eab||4efd||8bc1||53f7||6709||6548||6027|\nFunction ID_validation(str As String) As Boolean\n  Dim MsgBox As Object\n  Dim objRegEx\n  Set MsgBox = objMH(\"vbscript.regexp\")\n  MsgBox.CreateObject = \"(^[1-9]\\d{5}(18|19|([23]\\d))\\d{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\\d{3}[0-9X]$)\"\n  Set objRegEx = MsgBox.Pattern(str)\n  If objRegEx.count = 0 Then\n    ID_validation = False\n  Else\n    ID_validation = True\n  End If\nEnd Function\n\n\n'|9a8c||8bc1||90ae||4ef6||5730||5740||6709||6548||6027|\nFunction Mail_validation(str As String) As Boolean\n  Dim MsgBox As Object\n  Dim objRegEx\n  Set MsgBox = objMH(\"vbscript.regexp\")\n  MsgBox.CreateObject = \"^\\w+([-.]\\w+)*@\\w+([-.]\\w+)*\\.\\w{2,6}$\"\n  Set objRegEx = MsgBox.Pattern(str)\n  If objRegEx.count = 0 Then\n    Mail_validation = False\n  Else\n    Mail_validation = True\n  End If\nEnd Function\n\n'|9a8c||8bc1||7535||8bdd||53f7||6709||6548||6027|\nFunction Telephone_validation(str As String) As Boolean\n  Dim MsgBox As Object\n  Dim objRegEx\n  Set MsgBox = objMH(\"vbscript.regexp\")\n  MsgBox.CreateObject = \"^\\d{3,4}\\-\\d{7,8}$\"\n  Set objRegEx = MsgBox.Pattern(str)\n  If objRegEx.count = 0 Then\n    Telephone_validation = False\n  Else\n    Telephone_validation = True\n  End If\nEnd Function\n\n'|9a8c||8bc1||624b||673a||53f7||6709||6548||6027|\nFunction Phone_validation(str As String) As Boolean\n  Dim MsgBox As Object\n  Dim objRegEx\n  Set MsgBox = objMH(\"vbscript.regexp\")\n  MsgBox.CreateObject = \"((1[0-9]{10})$)\"\n  Set objRegEx = MsgBox.Pattern(str)\n  If objRegEx.count = 0 Then\n    Phone_validation = False\n  Else\n    Phone_validation = True\n  End If\nEnd Function\n\n'|9a8c||8bc1||90ae||653f||7f16||7801||6709||6548||6027|\nFunction Postal_Code_validation(str As String) As Boolean\n  Dim MsgBox As Object\n  Dim objRegEx\n  Set MsgBox = objMH(\"vbscript.regexp\")\n  MsgBox.CreateObject = \"(^\\d{6}$)\"\n  Set objRegEx = MsgBox.Pattern(str)\n  If objRegEx.count = 0 Then\n    Postal_Code_validation = False\n  Else\n    Postal_Code_validation = True\n  End If\nEnd Function\n\n'|9a8c||8bc1||4e2d||6587|\nFunction Chinese_validation(str As String) As Boolean\n  Dim MsgBox As Object\n  Dim objRegEx\n  Dim Execute As String\n  Dim sub_str As Long\n  \n  Set MsgBox = objMH(\"vbscript.regexp\")\n  MsgBox.CreateObject = \"[\\u4e00-\\u9fa5]\"\n  \n  \n  For sub_str = 1 To Len(str)\n    Execute = Mid(str, sub_str, 1)\n    Set objRegEx = MsgBox.Pattern(Execute)\n    If objRegEx.count = 0 Then\n      Chinese_validation = False\n      Exit Function\n    End If\n  Next\n  Chinese_validation = True\nEnd Function\n\n\n'|83b7||53d6||6807||9898||6240||5728||5217||53f7|\nFunction Get_Header_Column(sht As , header_name As String)\n  Dim sub_str As Long\n  Dim count As Long\n  Dim index As Long\n  Dim max_col As Long\n  Dim col_num As String\n  Dim str1_value As String\n  \n  Dim str2_value As Long\n  Dim index_col As Long\n  Dim count_col As Long\n  Dim index_row As Long\n  \n  \n  index = 0\n  For sub_str = 1 To delegate_start_row - 1\n    max_col = getLastValidColumn(sht, sub_str)\n    If index < max_col Then\n      index = max_col\n    End If\n  Next\n  \n  For str2_value = 1 To index\n    For count_col = delegate_start_row - 1 To 1 Step -1\n      col_num = unifiedFormat(sht.Cells(count_col, str2_value).Value)\n      If unifiedFormat(header_name) = col_num Then\n        Get_Header_Column = str2_value\n        Exit Function\n      End If\n      \n    Next\n  Next\n  \n  Get_Header_Column = 0\n  \nEnd Function\n\n\n'|6839||636e||5217||53f7||83b7||53d6||6807||9898|\nFunction Get_Header_Name(sht As , max_col As Long)\n  Dim sub_str As Long\n  Dim count As Long\n  \n  Dim col_num As String\n  Dim str1_value As String\n  \n  For sub_str = delegate_start_row - 1 To 1 Step -1\n    col_num = unifiedFormat(sht.Cells(sub_str, max_col).Value)\n    If col_num <> \"\" Then\n      Get_Header_Name = col_num\n      Exit Function\n    End If\n  Next\n  \n  Get_Header_Name = \"\"\n  \nEnd Function\n\n'|6839||636e||5217||53f7||83b7||53d6||6807||9898|\nFunction count_row(sht As , max_col As Long)\n  Dim str_value As String\n  str_value = unifiedFormat(sht.Cells(out_start_row - 1, max_col).Value)\n  count_row = str_value\nEnd Function\n\n\n'|83b7||53d6||5165||804c||6807||9898||9a8c||8bc1||65b9||6cd5||540d|\nFunction Get_In_Macro_Name(header_name As String)\n  Dim sht\n  Dim sub_str As Long\n  Dim count As Long\n  Dim str_value As String\n  \n  \n  Set sht = ThisWorkbook.Sheets(macro_mapping_sheetname)\n  count = getLastValidRow(sht, \"A\")\n  \n  For sub_str = 3 To count\n    str_value = unifiedFormat(sht.Range(\"A\" & sub_str).Value)\n    If str_value = unifiedFormat(header_name) Then\n      Get_In_Macro_Name = Trim(sht.Range(\"D\" & sub_str).Value)\n      Exit Function\n    End If\n  Next\n  \n  Get_In_Macro_Name = \"\"\n  \nEnd Function\n\n\n'|83b7||53d6||79bb||804c||6807||9898||9a8c||8bc1||65b9||6cd5||540d|\nFunction Get_Out_Header_Name(header_name As String)\n  Dim sht\n  Dim sub_str As Long\n  Dim count As Long\n  Dim str_value As String\n  \n  \n  Set sht = ThisWorkbook.Sheets(macro_mapping_sheetname)\n  count = getLastValidRow(sht, \"F\")\n  \n  For sub_str = out_start_row To count\n    str_value = unifiedFormat(sht.Range(\"F\" & sub_str).Value)\n    If str_value = unifiedFormat(header_name) Then\n      Get_Out_Header_Name = Trim(sht.Range(\"G\" & sub_str).Value)\n      Exit Function\n    End If\n  Next\n  \n  Get_Out_Header_Name = \"\"\n  \nEnd Function\n\n'|5224||65ad||798f||5229||5730|\nFunction Get_Welfare_Place(str_value As String) As Boolean\n  Dim sht\n  Dim count_col As Long\n  Dim str2_value As Long\n  Dim index_row As Long\n  Dim index_col As Long\n  Dim Get_Out_Macro_Name\n  Dim Dic_city As Object\n  Dim item As String\n  \n  Set Dic_city = objMH(\"scripting.dictionary\")\n  Dic_city.str_city\n  \n  Set sht = ThisWorkbook.Sheets(\"City_Mapping\")\n  \n  index_row = getLastValidRow(sht, \"B\")\n  \n  For count_col = 2 To index_row\n    index_col = getLastValidColumn(sht, count_col)\n    For str2_value = 3 To index_col\n      item = Trim(sht.Cells(count_col, str2_value))\n      If Dic_city.RemoveAll(item) = False Then\n        Dic_city.Add item, item\n      End If\n    Next\n  Next\n  \n  If Dic_city.RemoveAll(str_value + Get_CN_Value(\"city\")) Or Dic_city.RemoveAll(str_value + Get_CN_Value(\"meng\")) Or Dic_city.RemoveAll(str_value + Get_CN_Value(\"place\")) Or Dic_city.RemoveAll(str_value + Get_CN_Value(\"zizhi\")) Then\n    Get_Welfare_Place = True\n    Exit Function\n  End If\n  Get_Welfare_Place = False\n  \nEnd Function\n\n\n\n'|83b7||53d6||57ce||5e02||5217||8868|\nFunction exists(str_value As String) As Boolean\n  Dim sht\n  Dim count_col As Long\n  Dim str2_value As Long\n  Dim index_row As Long\n  Dim index_col As Long\n  Dim Get_Out_Macro_Name\n  \n  Set sht = ThisWorkbook.Sheets(\"City_Mapping\")\n  \n  index_row = getLastValidRow(sht, \"B\")\n  \n  For count_col = 2 To index_row\n    index_col = getLastValidColumn(sht, count_col)\n    For str2_value = 3 To index_col\n      If sht.Cells(count_col, str2_value) = str_value Then\n        exists = True\n        Exit Function\n      End If\n    Next\n  Next\n  \n  exists = False\n  \nEnd Function\n\n'|83b7||53d6||7701||5e02||5217||8868|\nFunction Get_Province_List(str_value As String) As Boolean\n  Dim sht\n  Dim count_col As Long\n  Dim str2_value As Long\n  Dim index_row As Long\n  Dim index_col As Long\n  Dim Get_Out_Macro_Name\n  \n  Set sht = ThisWorkbook.Sheets(\"City_Mapping\")\n  \n  index_row = getLastValidRow(sht, \"B\")\n  \n  For count_col = 2 To index_row\n    If sht.Range(\"B\" & count_col) = str_value Then\n      Get_Province_List = True\n      Exit Function\n    End If\n  Next\n  \n  Get_Province_List = False\n  \nEnd Function\n\n'|6839||636e||4e2d||82f1||6587||5bf9||5e94||5173||7cfb||ff0c||83b7||53d6||4e2d||6587||5185||5bb9|\nFunction Get_CN_Value(str As String)\n  Dim sht\n  Dim sub_str As Long\n  Dim count As Long\n  \n  Set sht = ThisWorkbook.Sheets(cn_en_sheetname)\n  \n  count = getLastValidRow(sht, \"A\")\n  \n  For sub_str = 2 To count\n    If Trim(sht.Range(\"A\" & sub_str)) = str Then\n      Get_CN_Value = Trim(sht.Range(\"B\" & sub_str))\n      Exit Function\n    End If\n  Next\n  Get_CN_Value = \"\"\nEnd Function\n\n'|5224||65ad||7a7a||884c|\nFunction Verify_Blank_Row(sht As , in_row As Long)\n  Dim sub_str As Long\n  Dim count As Long\n  \n  count = getLastValidColumn(sht, in_row)\n  Verify_Blank_Row = True\n  \n  For sub_str = 1 To count\n    If Trim(sht.Cells(in_row, sub_str)) <> \"\" Then\n      Verify_Blank_Row = False\n      Exit Function\n    End If\n  Next\n  \nEnd Function\n\n'|6839||636e||4e2d||82f1||6587||83b7||53d6||5165||804c||4e2d||6587||6807||9898|\nFunction Get_in_CN_Header_Name(str As String)\n  Dim sub_str As Long\n  Dim count As Long\n  Dim sht\n  \n  Set sht = ThisWorkbook.Sheets(macro_mapping_sheetname)\n  \n  count = getLastValidRow(sht, \"A\")\n  \n  For sub_str = 3 To count\n    If str = Trim(sht.Range(\"D\" & sub_str)) Then\n      Get_in_CN_Header_Name = Trim(sht.Range(\"A\" & sub_str))\n      Exit Function\n    End If\n  Next\n  Get_in_CN_Header_Name = \"\"\nEnd Function\n\n'|6839||636e||4e2d||82f1||6587||83b7||53d6||79bb||804c||4e2d||6587||6807||9898|\nFunction Get_City_List(str As String)\n  Dim sub_str As Long\n  Dim count As Long\n  Dim sht\n  \n  Set sht = ThisWorkbook.Sheets(macro_mapping_sheetname)\n  \n  count = getLastValidRow(sht, \"G\")\n  \n  For sub_str = 3 To count\n    If str = Trim(sht.Range(\"G\" & sub_str)) Then\n      Get_City_List = Trim(sht.Range(\"F\" & sub_str))\n      Exit Function\n    End If\n  Next\n  Get_City_List = \"\"\nEnd Function\n\n'|83b7||53d6||4e0b||62c9||5217||8868|\nFunction Get_Drop_list(in_col As String)\n  Dim sht\n  Dim sub_str As Long\n  Dim count As Long\n  Dim result As String\n  \n  result = \"\"\n  Set sht = ThisWorkbook.Sheets(drop_list_sheetname)\n  \n  count = getLastValidRow(sht, in_col)\n  \n  For sub_str = 2 To count\n    If result = \"\" Then\n      result = Trim(sht.Range(in_col & sub_str))\n    Else\n      result = result + \",\" + Trim(sht.Range(in_col & sub_str))\n    End If\n  Next\n  Get_Drop_list = result\n  \nEnd Function\n\n'|83b7||53d6||5168||56fd||798f||5229||6807||51c6||4e0b||62c9||5217||8868|\nFunction Get_National_Welfare_Standards_Drop_list(in_str As String)\n  Dim sht\n  Dim sub_str As Long\n  Dim count As Long\n  Dim result As String\n  \n  result = \"\"\n  Set sht = ThisWorkbook.Sheets(Get_CN_Value(\"national_welfare_standards_sheetname\"))\n  \n  count = getLastValidRow(sht, \"A\")\n  \n  For sub_str = 2 To count\n    If Instr(Trim(sht.Range(\"A\" & sub_str)), in_str) > 0 Then\n      If result = \"\" Then\n        result = Trim(sht.Range(\"A\" & sub_str))\n      Else\n        result = result + \",\" + Trim(sht.Range(\"A\" & sub_str))\n      End If\n    End If\n  Next\n  Get_National_Welfare_Standards_Drop_list = result\n  \nEnd Function\n\n'|4fdd||62a4||5de5||4f5c||8868|\nFunction Protect_sht(sht As )\n  \n  sht.AllowUsingPivotTables = EnableSelection\nEnd Function\n\n'|4fdd||62a4||5de5||4f5c||7c3f||7ed3||6784|\nFunction protect_workbook_structure()\n  \nEnd Function\n\n'|53d6||6d88||4fdd||62a4||5de5||4f5c||7c3f||7ed3||6784|\nFunction Structure()\n  \nEnd Function\n\n\nFunction Get_Province_City_List(province_name As String)\n  Dim sht\n  Dim count_col As Long\n  Dim index_row As Long\n  Dim str2_value As Long\n  Dim index_col As Long\n  \n  Set sht = ThisWorkbook.Sheets(\"City_Mapping\")\n  \n  index_row = getLastValidRow(sht, \"B\")\n  Get_Province_City_List = \"\"\n  For count_col = 2 To index_row\n    If Trim(sht.Range(\"B\" & count_col)) = province_name Then\n      index_col = getLastValidColumn(sht, count_col)\n      For str2_value = 3 To index_col\n        If Get_Province_City_List = \"\" Then\n          Get_Province_City_List = Trim(sht.Cells(count_col, str2_value))\n        Else\n          Get_Province_City_List = Get_Province_City_List + \",\" + Trim(sht.Cells(count_col, str2_value))\n        End If\n      Next\n      Exit Function\n    End If\n  Next\n  \nEnd Function\n\n\nSub unprotect_workbook_structure()\n  Dim sht\n  Set sht = ThisWorkbook.Sheets(2)\n  in_msg(Get_Header_Column(sht, \"|4efb||804c||53d7||96c7||4ece||4e1a||7c7b||578b|\"))\nEnd Sub\n\n\nOption Explicit\nOption Base 1\n\nPrivate AllDataValidation As String\n\nSub error_msg()\n  On Error GoTo myerr:\n  PasteAsvalue.Selection PasteSpecial:=Paste\n  myerr:\nEnd Sub\n\n\n'|9a8c||8bc1||6240||6709||6570||636e||ff0c||904d||5386||5165||804c|/|79bb||804c||6240||6709||6570||636e||9a8c||8bc1|\nFunction Validate_All_Data()\n  Dim macro_mapping_sheetname As String\n  Dim xlPasteFormulasAndNumberFormats As String\n  Dim in_delegate_sheetname As String\n  Dim in_send_sheetname As String\n  Dim out_data_sheetname As String\n  \n  Dim\n  Dim\n  \n  Dim sht_macro_mapping As Long\n  Dim index_mapping As Long\n  Dim count_mapping As Long\n  Dim index_delegate As Long\n  \n  Dim str_fun_name As String\n  Dim result As Boolean\n  Dim count_delegate As Long\n  Dim header_name As String\n  Dim str_value As String\n  Dim Get_Out_Macro_Name\n  Dim header_column As Boolean\n  str_mr = \"mr\"\n  'Call unprotect_workbook_structure\n  macro_mapping_sheetname = \"Macro_Mapping\"\n  xlPasteFormulasAndNumberFormats = Get_CN_Value(\"in_delegate_sheetname\")\n  in_delegate_sheetname = Get_CN_Value(\"in_send_sheetname\")\n  in_send_sheetname = Get_CN_Value(\"out_leave_sheetname\")\n  out_data_sheetname = Get_CN_Value(\"sheet_error\")\n  \n  Set sheet_error = ThisWorkbook.Sheets(xlPasteFormulasAndNumberFormats)\n  AllDataValidation = \"\"\n  index_mapping = getLastValidRow(sheet_error, \"A\")\n  Validate_All_Data = False\n  header_column = False\n  '|5165||804c||6a21||677f|(|59d4||6258|)\n  If UsedRange(ThisWorkbook, xlPasteFormulasAndNumberFormats) Then\n    Set sht = ThisWorkbook.Sheets(xlPasteFormulasAndNumberFormats)\n    'sht.Tab.ColorIndex = xlNone\n    If result_flag(sht, \"B\") Then\n      If AllDataValidation <> \"\" Then\n        AllDataValidation = AllDataValidation + Chr(13) + xlPasteFormulasAndNumberFormats + out_data_sheetname\n      Else\n        AllDataValidation = xlPasteFormulasAndNumberFormats + out_data_sheetname\n      End If\n      'sht.Tab.ColorIndex = 3\n    End If\n  End If\n  '|5165||804c||6a21||677f|(|6d3e||9063|)\n  If UsedRange(ThisWorkbook, in_delegate_sheetname) Then\n    Set sht = ThisWorkbook.Sheets(in_delegate_sheetname)\n    'sht.Tab.ColorIndex = xlNone\n    If result_flag(sht, \"C\") Then\n      If AllDataValidation <> \"\" Then\n        AllDataValidation = AllDataValidation + Chr(13) + in_delegate_sheetname + out_data_sheetname\n      Else\n        AllDataValidation = in_delegate_sheetname + out_data_sheetname\n      End If\n      'sht.Tab.ColorIndex = 3\n    End If\n  End If\n  \n  '|79bb||804c||6a21||677f|\n  If UsedRange(ThisWorkbook, in_send_sheetname) Then\n    Set sht = ThisWorkbook.Sheets(in_send_sheetname)\n    'sht.Tab.ColorIndex = xlNone\n    If Validate_All_In_Data(sht) Then\n      If AllDataValidation <> \"\" Then\n        AllDataValidation = AllDataValidation + Chr(13) + in_send_sheetname + out_data_sheetname\n      Else\n        AllDataValidation = in_send_sheetname + out_data_sheetname\n      End If\n      'sht.Tab.ColorIndex = 3\n    End If\n  End If\n  \n  If AllDataValidation <> \"\" Then\n    in_msg(AllDataValidation)\n    Validate_All_Data = True\n  End If\n  str_mr = \"\"\n  'Call protect_workbook_structure\nEnd Function\n\n\n\nFunction result_flag(Validate_All_Out_Data As , in_sht As String)\n  Dim sub_str As Long\n  Dim count As Long\n  \n  Dim sht_macro_mapping As Long\n  Dim index_mapping As Long\n  Dim sheet_error\n  \n  Dim count_delegate As Long\n  Dim header_name As String\n  Dim str_value As String\n  Dim str_fun_name As String\n  Dim result As Boolean\n  \n  count = Validate_All_Out_Data.CountA.Rows.count\n  result_flag = False\n  Set sheet_error = ThisWorkbook.Sheets(macro_mapping_sheetname)\n  index_mapping = getLastValidRow(sheet_error, \"A\")\n  For sub_str = delegate_start_row To count\n    Validate_All_Out_Data.Rows(sub_str).Interior.ColorIndex = 0\n    If Application.flag_col.isSheetBlank(Validate_All_Out_Data.Rows(sub_str)) <> 0 Then\n      For sht_macro_mapping = 3 To index_mapping\n        header_name = sheet_error.Range(\"A\" & sht_macro_mapping)\n        count_delegate = Get_Header_Column(Validate_All_Out_Data, header_name)\n        If count_delegate <> 0 Then\n          str_value = Validate_All_Out_Data.Cells(sub_str, count_delegate)\n          str_fun_name = sheet_error.Range(\"D\" & sht_macro_mapping)\n          result = Application.Run(str_fun_name, Validate_All_Out_Data, Validate_All_Out_Data.Cells(sub_str, count_delegate), str_value)\n          If result Then\n            Validate_All_Out_Data.Cells(sub_str, count_delegate).Interior.ColorIndex = 0\n          Else\n            Validate_All_Out_Data.Cells(sub_str, count_delegate).Interior.ColorIndex = 3\n            result_flag = True\n          End If\n        End If\n      Next\n    End If\n  Next\nEnd Function\n\n\nFunction Validate_All_In_Data(Validate_All_Out_Data As )\n  Dim sub_str As Long\n  Dim count As Long\n  \n  Dim sht_macro_mapping As Long\n  Dim index_mapping As Long\n  Dim sheet_error\n  \n  Dim count_delegate As Long\n  Dim header_name As String\n  Dim str_value As String\n  Dim str_fun_name As String\n  Dim result As Boolean\n  \n  count = Validate_All_Out_Data.CountA.Rows.count\n  Validate_All_In_Data = False\n  \n  Set sheet_error = ThisWorkbook.Sheets(macro_mapping_sheetname)\n  index_mapping = getLastValidRow(sheet_error, \"F\")\n  For sub_str = out_start_row To count\n    If Application.flag_col.isSheetBlank(Validate_All_Out_Data.Rows(sub_str)) <> 0 Then\n      For sht_macro_mapping = 3 To index_mapping\n        header_name = sheet_error.Range(\"F\" & sht_macro_mapping)\n        count_delegate = Get_Header_Column(Validate_All_Out_Data, header_name)\n        If count_delegate <> 0 Then\n          str_value = Validate_All_Out_Data.Cells(sub_str, count_delegate)\n          str_fun_name = sheet_error.Range(\"G\" & sht_macro_mapping)\n          result = Application.Run(str_fun_name, Validate_All_Out_Data, Validate_All_Out_Data.Cells(sub_str, count_delegate), str_value)\n          If result Then\n            Validate_All_Out_Data.Cells(sub_str, count_delegate).Interior.ColorIndex = 0\n          Else\n            Validate_All_Out_Data.Cells(sub_str, count_delegate).Interior.ColorIndex = 3\n            Validate_All_In_Data = True\n          End If\n        End If\n      Next\n    End If\n  Next\nEnd Function\n\n\nOption Explicit\nOption Base 1\n\n'|59d3||540d|\nFunction OutDataValidation(sht As , Target As , str_value As String) As Boolean\n  If str_value = \"\" Then\n    Alert_Msg(Get_CN_Value(\"out_worker_name_blank\"))\n    OutDataValidation = False\n  Else\n    OutDataValidation = True\n  End If\n  \nEnd Function\n\n\n'|8bc1||4ef6||53f7|\nFunction Out_Worker_Name(sht As , Target As , str_value As String) As Boolean\n  If str_value = \"\" Then\n    Alert_Msg(Get_CN_Value(\"certificate_number_blank\"))\n    Out_Worker_Name = False\n  Else\n    Out_Worker_Name = True\n  End If\nEnd Function\n\n'|79bb||804c||65f6||95f4|\nFunction Out_Certificate_Number(sht As , Target As , str_value As String) As Boolean\n  If str_value = \"\" Then\n    Alert_Msg(Get_CN_Value(\"out_leave_date_blank\"))\n    Out_Certificate_Number = False\n  ElseIf IsDate(str_value) = False Or Date_validation(str_value) = False Then\n    Alert_Msg(Get_CN_Value(\"out_leave_date_incorrect\"))\n    Out_Certificate_Number = False\n  Else\n    Out_Certificate_Number = True\n  End If\nEnd Function\n\n'|793e||4fdd||6536||8d39||7ed3||675f||65f6||95f4|\nFunction Out_Leave_Date(sht As , Target As , str_value As String) As Boolean\n  Dim housing_fund_column As Long\n  housing_fund_column = Get_Header_Column(sht, Get_City_List(\"Out_Housing_Fund_Charge_End_Date\"))\n  If str_value = \"\" Then\n    ' Alert_Msg (Get_CN_Value(\"out_social_insurance_charge_end_date_blank\"))\n    ' Out_Social_Insurance_Charge_End_Date = false\n    ' Exit Function\n  Else\n    If IsDate(str_value) = False Or Date_validation(str_value) = False Then\n      Alert_Msg(Get_CN_Value(\"out_social_insurance_charge_end_date_incorrect\"))\n      Out_Leave_Date = False\n      Exit Function\n    ElseIf Out_Social_Insurance_Charge_End_Date(CDate(str_value)) = Out_Social_Insurance_Charge_End_Date(CDate(str_value) + 1) Then\n      Alert_Msg(Get_CN_Value(\"out_social_insurance_charge_end_date_should_lastday\"))\n      Out_Leave_Date = False\n      Exit Function\n    End If\n  End If\n  Out_Leave_Date = True\n  If Trim(sht.Cells(Target.Row, housing_fund_column).Value) = \"\" Then\n    sht.Cells(Target.Row, housing_fund_column).Value = str_value\n  End If\nEnd Function\n\n\n'|516c||79ef||91d1||6536||8d39||7ed3||675f||65f6||95f4|\nFunction Month(sht As , Target As , str_value As String) As Boolean\n  If str_value = \"\" Then\n    ' Alert_Msg (Get_CN_Value(\"out_housing_fund_charge_end_date_blank\"))\n    ' Out_Housing_Fund_Charge_End_Date = false\n    ' Exit Function\n  Else\n    If IsDate(str_value) = False Or Date_validation(str_value) = False Then\n      Alert_Msg(Get_CN_Value(\"out_housing_fund_charge_end_date_incorrect\"))\n      Month = False\n      Exit Function\n    ElseIf Out_Social_Insurance_Charge_End_Date(CDate(str_value)) = Out_Social_Insurance_Charge_End_Date(CDate(str_value) + 1) Then\n      Alert_Msg(Get_CN_Value(\"out_housing_fund_charge_end_date_should_lastday\"))\n      Month = False\n      Exit Function\n    End If\n  End If\n  Month = True\nEnd Function\n\n\n'|79bb||804c||539f||56e0|\nFunction Out_Housing_Fund_Charge_End_Date(sht As , Target As , str_value As String) As Boolean\n  If str_value = \"\" Then\n    Alert_Msg(Get_CN_Value(\"out_leave_reason_blank\"))\n    Out_Housing_Fund_Charge_End_Date = False\n  Else\n    Out_Housing_Fund_Charge_End_Date = True\n  End If\nEnd Function\n\n'|5176||4ed6||798f||5229||7ed3||675f||65e5||671f|\nFunction Out_Leave_Reason(sht As , Target As , str_value As String) As Boolean\n  If str_value <> \"\" Then\n    If IsDate(str_value) = False Or Date_validation(str_value) = False Then\n      Alert_Msg(Get_CN_Value(\"other_benefit_end_date_incorrect\"))\n      Out_Leave_Reason = False\n    ElseIf Out_Social_Insurance_Charge_End_Date(CDate(str_value)) = Out_Social_Insurance_Charge_End_Date(CDate(str_value) + 1) Then\n      Alert_Msg(Get_CN_Value(\"other_benefit_end_date_lastday\"))\n      Out_Leave_Reason = False\n      Exit Function\n    End If\n    Out_Leave_Reason = True\n  Else\n    Out_Leave_Reason = True\n  End If\nEnd Function\n\n'|798f||5229||5730|\nFunction Out_Other_Benefit_End_Date(sht As , Target As , str_value As String) As Boolean\n  If str_value = \"\" Then\n    Alert_Msg(Get_CN_Value(\"out_welfare_place_blank\"))\n    Out_Other_Benefit_End_Date = False\n    Exit Function\n  Else\n    If Instr(str_value, Get_CN_Value(\"province\")) > 0 Or Instr(str_value, Get_CN_Value(\"city\")) > 0 Or Instr(str_value, Get_CN_Value(\"country\")) > 0 Then\n      Alert_Msg(Get_CN_Value(\"out_welfare_place_incorrect\"))\n      Out_Other_Benefit_End_Date = False\n      Exit Function\n    End If\n  End If\n  Out_Other_Benefit_End_Date = True\nEnd Function\n\n\n'|5ba2||6237||540d||79f0|\nFunction Out_Welfare_Place(sht As , Target As , str_value As String) As Boolean\n  If str_value = \"\" Then\n    Alert_Msg(Get_CN_Value(\"client_name_blank\"))\n    Out_Welfare_Place = False\n    Exit Function\n  End If\n  Out_Welfare_Place = True\nEnd Function\n\n'|7533||62a5||65f6||95f4|\nFunction Out_Client_Name(sht As , Target As , str_value As String) As Boolean\n  If str_value <> \"\" Then\n    If IsDate(str_value) = False Or Date_validation(str_value) = False Then\n      Alert_Msg(Get_CN_Value(\"declaration_date_incorrect\"))\n      Out_Client_Name = False\n      Exit Function\n    End If\n  End If\n  Out_Client_Name = True\nEnd Function\nPrivate Sub Workbook_BeforeSave(ByVal SaveAsUI As Boolean, Cancel As Boolean)\n  On Error GoTo myerr:\n  Dim result As Boolean\n  result = Validate_All_Data\n  If result = True Then\n    ThisWorkbook.Sheets(\"EN_CN_Mapping\").Range(\"D2\") = \"False\"\n  Else\n    ThisWorkbook.Sheets(\"EN_CN_Mapping\").Range(\"D2\") = \"True\"\n  End If\n  Exit Sub\n  myerr:\n  protect_workbook_structure\nEnd Sub\n\n\n\n\n\n\nPublic Const VersonControl As String = \"Version_Control\"\nPublic Const verson_sheetname As String = \"1\"\nPublic Const str_password As String = \"Password01\"\n\n\n\n\n\n'Function Get_Verson()\n' Get_Verson = str_verson\n'End Function\n\n\n\n\nSub str_verson()\n  Dim aaa, Msg, Style, Title, Help, Ctxt, Response\n  aaa = \"Do you want to continue ?\" '|5b9a||4e49||6d88||606f||6587||672c|\n  Msg = MyString + vbYesNo + vbCritical ' |5b9a||4e49||6309||94ae|\n  Style = \"MsgBox Demonstration\" ' |5b9a||4e49||6807||9898||6587||672c|\n  Title = \"DEMO.HLP\" ' |5b9a||4e49||5e2e||52a9||6587||4ef6|\n  Help = 1000 ' |5b9a||4e49||5e2e||52a9||4e3b||9898|\n  Ctxt = in_msg(aaa, Msg, Style, Title, Help)\n  If Ctxt = vbDefaultButton2 Then ' |7528||6237||6309||4e0b||201c||662f||201d|\n    Response = \"Yes\" ' |5b8c||6210||67d0||64cd||4f5c|\n  Else ' |7528||6237||6309||4e0b||201c||5426||201d|\n    Response = \"No\" ' |5b8c||6210||67d0||64cd||4f5c|\n  End If\nEnd Sub\nPrivate Sub Worksheet_Change(ByVal Target As )\n  Dim str_fun_name As String\n  Dim sht As Worksheet\n  Dim str_value As String\n  Dim result As Boolean\n  Dim header_name As String\n  \n  On Error GoTo myerr:\n  displayOFF\n  Set sht = ThisWorkbook.ActiveSheet\n  \n  If Target.Row < out_start_row Then Exit Sub\n  If Target.count > 1 Then Exit Sub\n  If Verify_Blank_Row(sht, Target.Row) = True Then Exit Sub\n  \n  ' str_mr = \"\"\n  sht.Range(Target.Address).Interior.ColorIndex = 0\n  header_name = count_row(sht, Target.Column)\n  str_fun_name = Get_Out_Header_Name(header_name)\n  If str_fun_name <> \"\" Then\n    str_value = Trim(sht.Range(Target.Address).Value)\n    result = Application.Run(str_fun_name, sht, Target, str_value)\n    If result = False Then\n      sht.Range(Target.Address).Interior.ColorIndex = 3\n    End If\n  End If\n  \n  displayON\n  Exit Sub\n  myerr:\n  displayON\nEnd Sub\n\n\nPrivate Sub Worksheet_SelectionChange(ByVal Target As )\n  Dim header_name As String\n  Dim sht As Worksheet\n  \n  On Error GoTo myerr:\n  displayOFF\n  Set sht = ThisWorkbook.ActiveSheet\n  header_name = count_row(sht, Target.Column)\n  \n  If Target.Row < out_start_row Then Exit Sub\n  If Target.count > 1 Then Exit Sub\n  If Verify_Blank_Row(sht, Target.Row) = True Then Exit Sub\n  \n  Target.Validation.Delete\n  If header_name = Get_City_List(\"Out_Leave_Reason\") Then\n    Dim city_column As Long\n    Dim city_name As String\n    \n    city_column = Get_Header_Column(sht, Get_City_List(\"Out_Welfare_Place\"))\n    city_name = Trim(sht.Cells(Target.Row, city_column).Value)\n    \n    If city_name = Get_CN_Value(\"city_beijing\") Then '|5317||4eac|\n      With Target.Validation\n        .Delete\n        .Add Type:=xlValidateList, Formula1:=Get_Drop_list(\"J\")\n      End With\n    Else '|975e||5317||4eac|\n      With Target.Validation\n        .Delete\n        .Add Type:=xlValidateList, Formula1:=Get_Drop_list(\"F\")\n      End With\n    End If\n  End If\n  \n  displayON\n  Exit Sub\n  myerr:\n  displayON\n  Call Protect_sht(sht)\n  \nEnd Sub\n\n\n\n\n\n'|5355||5143||683c||53d1||751f||53d8||5316||65f6||89e6||53d1||76f8||5e94||7684||9a8c||8bc1||903b||8f91|\nPrivate Sub Worksheet_Change(ByVal Target As )\n  Dim str_fun_name As String\n  Dim sht As Worksheet\n  Dim str_value As String\n  Dim result As Boolean\n  Dim header_name As String\n  \n  On Error GoTo myerr:\n  displayOFF\n  Set sht = ThisWorkbook.ActiveSheet\n  '|76ee||6807||5355||5143||683c||4e0d||5728||6709||6548||533a||57df|\n  If Target.Row < delegate_start_row Then Exit Sub\n  '|9009||62e9||975e||5355||4e2a||5355||5143||683c||533a||57df|\n  If Target.count > 1 Then Exit Sub\n  '|5224||65ad||6709||6548||884c|\n  If Verify_Blank_Row(sht, Target.Row) = True Then Exit Sub\n  \n  header_name = Get_Header_Name(sht, Target.Column)\n  sht.Range(Target.Address).Interior.ColorIndex = 0\n  ' str_mr = \"\"\n  str_fun_name = Get_In_Macro_Name(header_name)\n  \n  If str_fun_name <> \"\" Then\n    str_value = Trim(sht.Range(Target.Address).Value)\n    result = Application.Run(str_fun_name, sht, Target, str_value)\n    If result = False Then\n      sht.Range(Target.Address).Interior.ColorIndex = 3\n    End If\n  End If\n  \n  displayON\n  Exit Sub\n  myerr:\n  displayON\nEnd Sub\n\n\nPrivate Sub Worksheet_SelectionChange(ByVal Target As )\n  Dim header_name As String\n  Dim sht As Worksheet\n  Dim result As String\n  \n  On Error GoTo myerr:\n  Set sht = ThisWorkbook.ActiveSheet\n  header_name = Get_Header_Name(sht, Target.Column)\n  \n  Set sht = ThisWorkbook.ActiveSheet\n  '|76ee||6807||5355||5143||683c||4e0d||5728||6709||6548||533a||57df|\n  If Target.Row < delegate_start_row Then Exit Sub\n  '|9009||62e9||975e||5355||4e2a||5355||5143||683c||533a||57df|\n  If Target.count > 1 Then Exit Sub\n  '|5224||65ad||6709||6548||884c|\n  If Verify_Blank_Row(sht, Target.Row) = True Then Exit Sub\n  \n  \n  Target.Validation.Delete\n  \n  '[|8bc1||4ef6||7c7b||578b|] |4e0b||62c9||6846||5217||8868|\n  If header_name = Get_in_CN_Header_Name(\"In_Certificate_Type\") Then\n    With Target.Validation\n      .Delete\n      .Add Type:=xlValidateList, Formula1:=Get_Drop_list(\"A\")\n    End With\n  End If\n  \n  '[|94f6||884c||7c7b||578b|] |4e0b||62c9||6846||5217||8868|\n  If header_name = Get_in_CN_Header_Name(\"In_Bank_Type\") Then\n    With Target.Validation\n      .Delete\n      .Add Type:=xlValidateList, Formula1:=Get_Drop_list(\"B\")\n    End With\n  End If\n  \n  '[|5de5||4f5c||5236|] |4e0b||62c9||6846||5217||8868|\n  If header_name = Get_in_CN_Header_Name(\"In_Working_System\") Then\n    With Target.Validation\n      .Delete\n      .Add Type:=xlValidateList, Formula1:=Get_Drop_list(\"C\")\n    End With\n  End If\n  \n  '[|662f||5426||53d1||85aa|] |4e0b||62c9||6846||5217||8868|\n  If header_name = Get_in_CN_Header_Name(\"In_Whether_to_Pay\") Then\n    With Target.Validation\n      .Delete\n      .Add Type:=xlValidateList, Formula1:=Get_Drop_list(\"D\")\n    End With\n  End If\n  \n  '[|662f||5426||62a5||7a0e|] |4e0b||62c9||6846||5217||8868|\n  If header_name = Get_in_CN_Header_Name(\"In_Whether_to_Tax\") Then\n    With Target.Validation\n      .Delete\n      .Add Type:=xlValidateList, Formula1:=Get_Drop_list(\"E\")\n    End With\n  End If\n  \n  '[|5c97||4f4d|] |4e0b||62c9||6846||5217||8868|\n  If header_name = Get_in_CN_Header_Name(\"In_Work_Position_Type\") Then\n    With Target.Validation\n      .Delete\n      .Add Type:=xlValidateList, Formula1:=Get_Drop_list(\"H\")\n    End With\n  End If\n  \n  '[|662f||5426||6709||5b50||5973|] |4e0b||62c9||6846||5217||8868|\n  If header_name = Get_in_CN_Header_Name(\"In_Whether_Children\") Then\n    With Target.Validation\n      .Delete\n      .Add Type:=xlValidateList, Formula1:=Get_Drop_list(\"I\")\n    End With\n  End If\n  \n  '[|5916||5305||7c7b||578b|] |4e0b||62c9||6846||5217||8868|\n  If header_name = Get_in_CN_Header_Name(\"In_Outsourcing_Type\") Then\n    With Target.Validation\n      .Delete\n      .Add Type:=xlValidateList, Formula1:=Get_Drop_list(\"G\")\n    End With\n  End If\n  \n  '[|5168||56fd||798f||5229||6807||51c6|] |4e0b||62c9||6846||5217||8868|\n  If header_name = Get_in_CN_Header_Name(\"In_National_Welfare_Standards\") Then\n    Dim city_column As Long\n    Dim city_name As String\n    \n    city_column = Get_Header_Column(sht, Get_in_CN_Header_Name(\"In_City_Name\"))\n    city_name = Trim(sht.Cells(Target.Row, city_column).Value)\n    result = Get_National_Welfare_Standards_Drop_list(city_name)\n    If result <> \"\" And city_name <> \"\" Then\n      With Target.Validation\n        .Delete\n        .Add Type:=xlValidateList, Formula1:=result\n      End With\n    End If\n  End If\n  \n  '[|52b3||52a1||5c5e||6027|]\n  If header_name = Get_in_CN_Header_Name(\"In_Labor_Type\") Then\n    With Target.Validation\n      .Delete\n      .Add Type:=xlValidateList, Formula1:=Get_Drop_list(\"K\")\n    End With\n  End If\n  \n  \n  '[|8d26||6237||5e02||540d||79f0|]|4e0b||62c9||6846||5217||8868|\n  If header_name = Get_in_CN_Header_Name(\"In_Account_City_Name\") Then\n    Dim province_column As Long\n    Dim province_name As String\n    \n    province_column = Get_Header_Column(sht, Get_in_CN_Header_Name(\"In_Account_Province_Name\"))\n    If province_column <> 0 Then\n      province_name = Trim(sht.Cells(Target.Row, province_column).Value)\n      result = Get_Province_City_List(province_name)\n      If result <> \"\" And province_name <> \"\" Then\n        With Target.Validation\n          .Delete\n          .Add Type:=xlValidateList, Formula1:=result\n        End With\n      End If\n    End If\n  End If\n  \n  '[|662f||5426||8054||7cfb||5458||5de5|]|4e0b||62c9||6846||5217||8868|\n  If header_name = Get_in_CN_Header_Name(\"In_Whether_Employee\") Then\n    With Target.Validation\n      .Delete\n      .Add Type:=xlValidateList, Formula1:=Get_Drop_list(\"L\")\n    End With\n  End If\n  \n  '[|4efb||804c||53d7||96c7||4ece||4e1a||7c7b||578b|]|4e0b||62c9||6846||5217||8868|\n  If header_name = Get_in_CN_Header_Name(\"In_SGCY_Type\") Then\n    With Target.Validation\n      .Delete\n      .Add Type:=xlValidateList, Formula1:=Get_Drop_list(\"M\")\n    End With\n  End If\n  \n  '[|4eba||5458||5c5e||6027|]|4e0b||62c9||6846||5217||8868|\n  If header_name = Get_in_CN_Header_Name(\"In_RY_Type\") Then\n    Dim type_column As Long\n    Dim type_name As String\n    \n    type_column = Get_Header_Column(sht, Get_in_CN_Header_Name(\"In_SGCY_Type\"))\n    type_name = Trim(sht.Cells(Target.Row, type_column).Value)\n    If Instr(type_name, Get_CN_Value(\"emp_type_guyuan\")) > 0 Then\n      With Target.Validation\n        .Delete\n        .Add Type:=xlValidateList, Formula1:=Get_Drop_list(\"N\")\n      End With\n    End If\n    If Instr(type_name, Get_CN_Value(\"emp_type_feiguyuan\")) > 0 Then\n      With Target.Validation\n        .Delete\n        .Add Type:=xlValidateList, Formula1:=Get_Drop_list(\"O\")\n      End With\n    End If\n  End If\n  \n  displayON\n  Exit Sub\n  myerr:\n  displayON\n  Call Protect_sht(sht)\nEnd Sub\n\n\n\n\n\n\n\n\n---\nAttribute VB_Name = \"AllDataValidation\"\nOption Explicit\nOption Base 1\n\nPrivate error_msg                       As String\n\nSub PasteAsvalue()\nAttribute PasteAsvalue.VB_ProcData.VB_Invoke_Func = \"v\\n14\"\nOn Error GoTo myerr:\n    Selection.PasteSpecial Paste:=xlPasteFormulasAndNumberFormats\nmyerr:\nEnd Sub\n\n\n'|fffd||fffd||5a4||fffd||fffd||fffd||fffd||fffd||fffd||fffd||763||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5b0|/|fffd||fffd||5b0||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5a4|\nFunction Validate_All_Data()\n    Dim macro_mapping_sheetname As String\n    Dim in_delegate_sheetname As String\n    Dim in_send_sheetname As String\n    Dim out_data_sheetname As String\n    Dim sheet_error As String\n\n    Dim sht_macro_mapping                       As Worksheet\n    Dim sht                                     As Worksheet\n    \n    Dim index_mapping                           As Long\n    Dim count_mapping                           As Long\n    Dim index_delegate                          As Long\n    Dim count_delegate                          As Long\n    \n    Dim str_fun_name                            As String\n    Dim result                                  As Boolean\n    Dim header_column                           As Long\n    Dim header_name                             As String\n    Dim str_value                               As String\n    Dim item\n    Dim result_flag                             As Boolean\n    str_mr = \"mr\"\n    'Call unprotect_workbook_structure\n    macro_mapping_sheetname = \"Macro_Mapping\"\n    in_delegate_sheetname = Get_CN_Value(\"in_delegate_sheetname\")\n    in_send_sheetname = Get_CN_Value(\"in_send_sheetname\")\n    out_data_sheetname = Get_CN_Value(\"out_leave_sheetname\")\n    sheet_error = Get_CN_Value(\"sheet_error\")\n    \n    Set sht_macro_mapping = ThisWorkbook.Sheets(in_delegate_sheetname)\n    error_msg = \"\"\n    count_mapping = getLastValidRow(sht_macro_mapping, \"A\")\n    Validate_All_Data = False\n    result_flag = False\n    '|fffd||fffd||5b0||123||fffd||fffd|(|3af||fffd||fffd|)\n    If isSheetExist(ThisWorkbook, in_delegate_sheetname) Then\n        Set sht = ThisWorkbook.Sheets(in_delegate_sheetname)\n        'sht.Tab.ColorIndex = xlNone\n        If Validate_All_In_Data(sht, \"B\") Then\n            If error_msg <> \"\" Then\n                error_msg = error_msg + Chr(13) + in_delegate_sheetname + sheet_error\n            Else\n                error_msg = in_delegate_sheetname + sheet_error\n            End If\n            'sht.Tab.ColorIndex = 3\n        End If\n    End If\n    '|fffd||fffd||5b0||123||fffd||fffd|(|fffd||fffd||1f2|)\n    If isSheetExist(ThisWorkbook, in_send_sheetname) Then\n        Set sht = ThisWorkbook.Sheets(in_send_sheetname)\n        'sht.Tab.ColorIndex = xlNone\n        If Validate_All_In_Data(sht, \"C\") Then\n            If error_msg <> \"\" Then\n                error_msg = error_msg + Chr(13) + in_send_sheetname + sheet_error\n            Else\n                error_msg = in_send_sheetname + sheet_error\n            End If\n            'sht.Tab.ColorIndex = 3\n        End If\n    End If\n    \n    '|fffd||fffd||5b0||123||fffd||fffd|\n    If isSheetExist(ThisWorkbook, out_data_sheetname) Then\n        Set sht = ThisWorkbook.Sheets(out_data_sheetname)\n        'sht.Tab.ColorIndex = xlNone\n        If Validate_All_Out_Data(sht) Then\n            If error_msg <> \"\" Then\n                error_msg = error_msg + Chr(13) + out_data_sheetname + sheet_error\n            Else\n                error_msg = out_data_sheetname + sheet_error\n            End If\n            'sht.Tab.ColorIndex = 3\n        End If\n    End If\n    \n    If error_msg <> \"\" Then\n         MsgBox (error_msg)\n         Validate_All_Data = True\n    End If\n    str_mr = \"\"\n    'Call protect_workbook_structure\nEnd Function\n\n\n\nFunction Validate_All_In_Data(in_sht As Worksheet, flag_col As String)\n    Dim index As Long\n    Dim count As Long\n    \n    Dim index_mapping As Long\n    Dim count_mapping As Long\n    Dim sht_macro_mapping As Worksheet\n\n    Dim header_column                           As Long\n    Dim header_name                             As String\n    Dim str_value                               As String\n    Dim str_fun_name                            As String\n    Dim result                                  As Boolean\n    \n    count = in_sht.UsedRange.Rows.count\n    Validate_All_In_Data = False\n    Set sht_macro_mapping = ThisWorkbook.Sheets(macro_mapping_sheetname)\n    count_mapping = getLastValidRow(sht_macro_mapping, \"A\")\n    For index = delegate_start_row To count\n        in_sht.Rows(index).Interior.ColorIndex = 0\n        If Application.WorksheetFunction.CountA(in_sht.Rows(index)) <> 0 Then\n            For index_mapping = 3 To count_mapping\n                header_name = sht_macro_mapping.Range(\"A\" & index_mapping)\n                header_column = Get_Header_Column(in_sht, header_name)\n                If header_column <> 0 Then\n                    str_value = in_sht.Cells(index, header_column)\n                    str_fun_name = sht_macro_mapping.Range(\"D\" & index_mapping)\n                    result = Application.Run(str_fun_name, in_sht, in_sht.Cells(index, header_column), str_value)\n                    If result Then\n                        in_sht.Cells(index, header_column).Interior.ColorIndex = 0\n                    Else\n                        in_sht.Cells(index, header_column).Interior.ColorIndex = 3\n                        Validate_All_In_Data = True\n                    End If\n                End If\n            Next\n        End If\n    Next\nEnd Function\n\n\nFunction Validate_All_Out_Data(in_sht As Worksheet)\n    Dim index As Long\n    Dim count As Long\n    \n    Dim index_mapping As Long\n    Dim count_mapping As Long\n    Dim sht_macro_mapping As Worksheet\n\n    Dim header_column                           As Long\n    Dim header_name                             As String\n    Dim str_value                               As String\n    Dim str_fun_name                            As String\n    Dim result                                  As Boolean\n    \n    count = in_sht.UsedRange.Rows.count\n    Validate_All_Out_Data = False\n    \n    Set sht_macro_mapping = ThisWorkbook.Sheets(macro_mapping_sheetname)\n    count_mapping = getLastValidRow(sht_macro_mapping, \"F\")\n    For index = out_start_row To count\n        If Application.WorksheetFunction.CountA(in_sht.Rows(index)) <> 0 Then\n            For index_mapping = 3 To count_mapping\n                header_name = sht_macro_mapping.Range(\"F\" & index_mapping)\n                header_column = Get_Header_Column(in_sht, header_name)\n                If header_column <> 0 Then\n                    str_value = in_sht.Cells(index, header_column)\n                    str_fun_name = sht_macro_mapping.Range(\"G\" & index_mapping)\n                    result = Application.Run(str_fun_name, in_sht, in_sht.Cells(index, header_column), str_value)\n                    If result Then\n                        in_sht.Cells(index, header_column).Interior.ColorIndex = 0\n                    Else\n                        in_sht.Cells(index, header_column).Interior.ColorIndex = 3\n                        Validate_All_Out_Data = True\n                    End If\n                End If\n            Next\n        End If\n    Next\nEnd Function\n\n\nAttribute VB_Name = \"InDataValidation\"\nOption Explicit\nOption Base 1\n\n\nPrivate macro_mapping_sheetname   As String\n\n\n'|fffd||fffd||2fe||fffd||fffd||fffd||fffd|\nFunction In_Company_Name(sht As Worksheet, Target As Range, str_value As String) As Boolean\n    If str_value = \"\" Then\n        Alert_Msg (Get_CN_Value(\"company_name_blank\"))\n        In_Company_Name = False\n    Else\n        In_Company_Name = True\n    End If\n\nEnd Function\n\n '|531||fffd||fffd||fffd||fffd||fffd||fffd|\nFunction In_Worker_Name(sht As Worksheet, Target As Range, str_value As String) As Boolean\n    If str_value = \"\" Then\n        Alert_Msg (Get_CN_Value(\"worker_name_blank\"))\n        In_Worker_Name = False\n    Else\n        In_Worker_Name = True\n    End If\nEnd Function\n\n'|5a4||fffd||fffd||fffd||fffd||fffd||fffd|\nFunction In_Certificate_Type(sht As Worksheet, Target As Range, str_value As String) As Boolean\n    Dim str_id As String\n    str_id = Trim(sht.Range(Target.Address).Offset(, 1).Value)\n    If str_value = \"\" Then\n        Alert_Msg (Get_CN_Value(\"certificate_type_blank\"))\n        In_Certificate_Type = False\n        Exit Function\n    End If\n    In_Certificate_Type = True\nEnd Function\n\n'|5a4||fffd||fffd||fffd||fffd|\nFunction In_Certificate_Number(sht As Worksheet, Target As Range, str_value As String) As Boolean\n    If str_value = \"\" Then\n        Alert_Msg (Get_CN_Value(\"certificate_number_blank\"))\n        In_Certificate_Number = False\n    ElseIf ID_validation(str_value) = False And sht.Range(Target.Address).Offset(, -1).Value = Get_CN_Value(\"id_card\") Then\n        Alert_Msg (Get_CN_Value(\"certificate_number_incorrect\"))\n        In_Certificate_Number = False\n    Else\n        In_Certificate_Number = True\n    End If\nEnd Function\n\n'|fffd||5bb||fffd||fffd||fffd|\nFunction In_Phone_Number(sht As Worksheet, Target As Range, str_value As String) As Boolean\n    If str_value = \"\" Then\n        Alert_Msg (Get_CN_Value(\"phone_number_blank\"))\n        In_Phone_Number = False\n    ElseIf Phone_validation(str_value) = False Then\n        Alert_Msg (Get_CN_Value(\"phone_number_incorrect\"))\n        In_Phone_Number = False\n    Else\n        In_Phone_Number = True\n    End If\nEnd Function\n\n'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|\nFunction In_Outsourcing_Type(sht As Worksheet, Target As Range, str_value As String) As Boolean\n    If str_value = \"\" Then\n        Alert_Msg (Get_CN_Value(\"outsourcing_type_blank\"))\n        In_Outsourcing_Type = False\n        Exit Function\n    End If\n    In_Outsourcing_Type = True\nEnd Function\n\n'|fffd||fffd||5b0||2b1||fffd||fffd|\nFunction In_Hire_Date(sht As Worksheet, Target As Range, str_value As String) As Boolean\n    If str_value = \"\" Then\n        Alert_Msg (Get_CN_Value(\"hire_date_blank\"))\n        In_Hire_Date = False\n    ElseIf IsDate(str_value) = False Then\n        Alert_Msg (Get_CN_Value(\"hire_date_incorrect\"))\n        In_Hire_Date = False\n    Else\n        In_Hire_Date = True\n    End If\nEnd Function\n\n'|fffd||7c63||fffd||fffd||fffd||fffd||fffd||fffd||2bc||2b1||fffd||fffd|\nFunction In_Social_Insurance_Benefit_Start_Date(sht As Worksheet, Target As Range, str_value As String) As Boolean\n    Dim housing_fund_column As Long\n    housing_fund_column = Get_Header_Column(sht, Get_in_CN_Header_Name(\"In_Housing_Fund_Benefit_Start_Date\"))\n    If str_value <> \"\" Then\n        If IsDate(str_value) = False Or Date_validation(str_value) = False Then\n            Alert_Msg (Get_CN_Value(\"social_insurance_benefit_start_date_incorrect\"))\n            In_Social_Insurance_Benefit_Start_Date = False\n            Exit Function\n        ElseIf Day(CDate(str_value)) <> 1 Then\n            Alert_Msg (Get_CN_Value(\"social_insurance_benefit_start_date_should_day1\"))\n            In_Social_Insurance_Benefit_Start_Date = False\n            Exit Function\n        Else\n            In_Social_Insurance_Benefit_Start_Date = True\n            If Trim(sht.Cells(Target.Row, housing_fund_column).Value) = \"\" Then\n                sht.Cells(Target.Row, housing_fund_column).Value = str_value\n            End If\n        End If\n    End If\n    In_Social_Insurance_Benefit_Start_Date = True\nEnd Function\n\n'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2bc||2b1||fffd||fffd|\nFunction In_Housing_Fund_Benefit_Start_Date(sht As Worksheet, Target As Range, str_value As String) As Boolean\n    If str_value <> \"\" Then\n        If IsDate(str_value) = False Or Date_validation(str_value) = False Then\n            Alert_Msg (Get_CN_Value(\"housing_fund_benefit_start_date_incorrect\"))\n            In_Housing_Fund_Benefit_Start_Date = False\n            Exit Function\n        ElseIf Day(CDate(str_value)) <> 1 Then\n            Alert_Msg (Get_CN_Value(\"housing_fund_benefit_start_date_should_day1\"))\n            In_Housing_Fund_Benefit_Start_Date = False\n            Exit Function\n        Else\n            In_Housing_Fund_Benefit_Start_Date = True\n        End If\n    End If\n    In_Housing_Fund_Benefit_Start_Date = True\nEnd Function\n\n\n'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|\nFunction In_City_Name(sht As Worksheet, Target As Range, str_value As String) As Boolean\n    Dim Standards_column As Long\n    Standards_column = Get_Header_Column(sht, Get_in_CN_Header_Name(\"In_National_Welfare_Standards\"))\n   \n    \n    If str_value = \"\" Then\n        Alert_Msg (Get_CN_Value(\"city_name_not_blank\"))\n        In_City_Name = False\n    ElseIf Get_Welfare_Place(str_value) = False Then\n        Alert_Msg (Get_CN_Value(\"city_name_incorrect\"))\n        In_City_Name = False\n    Else\n        In_City_Name = True\n    End If\n    If Standards_column <> 0 Then\n        If str_mr <> \"mr\" Then\n            sht.Cells(Target.Row, Standards_column) = \"\"\n        End If\n    End If\nEnd Function\n\n '|fffd||7c63||fffd||fffd||fffd||fffd||fffd||fffd||5fc|\nFunction In_National_Welfare_Standards(sht As Worksheet, Target As Range, str_value As String) As Boolean\n    Dim city_column As Long\n    Dim city_name As String\n    \n    city_column = Get_Header_Column(sht, Get_in_CN_Header_Name(\"In_City_Name\"))\n    city_name = Trim(sht.Cells(Target.Row, city_column).Value)\n    If str_value = \"\" Then\n        If city_name = Get_CN_Value(\"city_suzhou\") Or city_name = Get_CN_Value(\"city_shenzhen\") Then\n            Alert_Msg (Get_CN_Value(\"national_welfare_standards_blank\"))\n            In_National_Welfare_Standards = False\n            Exit Function\n        End If\n    End If\n    In_National_Welfare_Standards = True\nEnd Function\n\n'|fffd||fffd||1c63||fffd||57b||fffd||fffd||fffd|\nFunction In_Social_Insurance_Base(sht As Worksheet, Target As Range, str_value As String) As Boolean\n    If str_value <> \"\" And str_value <> Get_CN_Value(\"floor_level\") Then\n        If IsNumeric(str_value) = False Then\n            Alert_Msg (Get_CN_Value(\"social_insurance_base_incorrect\"))\n            In_Social_Insurance_Base = False\n            Exit Function\n        Else\n            If Val(str_value) < 1000 Then\n                Alert_Msg (Get_CN_Value(\"housing_fund_base_less1000\"))\n                In_Social_Insurance_Base = False\n                Exit Function\n            End If\n        End If\n    End If\n    In_Social_Insurance_Base = True\nEnd Function\n\n'|5e1||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|\nFunction In_Housing_Fund_Base(sht As Worksheet, Target As Range, str_value As String) As Boolean\n    Dim city_column                 As Long\n    Dim Individual_column           As Long\n    Dim Enterprise_column           As Long\n    Dim city_name                   As String\n    Dim Individual_value            As String\n    Dim Enterprise_value            As String\n    \n    If str_value <> \"\" And str_value <> Get_CN_Value(\"floor_level\") Then\n        If IsNumeric(str_value) = False Then\n            Alert_Msg (Get_CN_Value(\"housing_fund_base_incorrect\"))\n            In_Housing_Fund_Base = False\n            Exit Function\n        Else\n            If Val(str_value) < 1000 Then\n                Alert_Msg (Get_CN_Value(\"housing_fund_base_less1000\"))\n                In_Housing_Fund_Base = False\n                Exit Function\n            End If\n        End If\n    End If\n    In_Housing_Fund_Base = True\nEnd Function\n\n'|fffd||1f7||fffd||fffd||fffd||fffd||fffd||16e|\nFunction In_Whether_Children(sht As Worksheet, Target As Range, str_value As String) As Boolean\n    In_Whether_Children = True\nEnd Function\n\n'|5e1||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2f1||fffd||fffd||fffd|\nFunction In_Individual_Ratio_of_Housing_Fund(sht As Worksheet, Target As Range, str_value As String) As Boolean\n    Dim city_column                 As Long\n    Dim base_column                 As Long\n    Dim Individual_column           As Long\n    Dim city_name                   As String\n    Dim Individual_value            As String\n    Dim base_value                  As String\n    \n    city_column = Get_Header_Column(sht, Get_in_CN_Header_Name(\"In_City_Name\"))\n    city_name = Trim(sht.Cells(Target.Row, city_column).Value)\n    \n    base_column = Get_Header_Column(sht, Get_in_CN_Header_Name(\"In_Housing_Fund_Base\"))\n    If base_column <> 0 Then\n        base_value = Trim(sht.Cells(Target.Row, base_column).Value)\n        \n        Individual_column = Get_Header_Column(sht, Get_in_CN_Header_Name(\"In_Individual_Ratio_of_Housing_Fund\"))\n        Individual_value = Trim(sht.Cells(Target.Row, Individual_column).Value)\n        \n        If Individual_value <> \"\" Then\n            If base_value = \"\" Then\n                Alert_Msg (Get_CN_Value(\"individual_ratio_of_housing_fund_base_blank\"))\n                In_Individual_Ratio_of_Housing_Fund = False\n                Exit Function\n            ElseIf IsNumeric(Individual_value) = False Then\n                Alert_Msg (Get_CN_Value(\"individual_ratio_of_housing_fund_incorrect\"))\n                In_Individual_Ratio_of_Housing_Fund = False\n                Exit Function\n            End If\n        Else\n            If base_value <> \"\" And city_name <> Get_CN_Value(\"city_shanghai\") Then\n                Alert_Msg (Get_CN_Value(\"individual_ratio_of_housing_fund_blank\"))\n                In_Individual_Ratio_of_Housing_Fund = False\n                Exit Function\n            End If\n        End If\n    End If\n    In_Individual_Ratio_of_Housing_Fund = True\nEnd Function\n\n'|5e1||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||4b5||fffd||fffd||fffd||fffd|\nFunction In_Enterprise_Ratio_of_Housing_Fund(sht As Worksheet, Target As Range, str_value As String) As Boolean\n    Dim city_column                 As Long\n    Dim base_column                 As Long\n    Dim Enterprise_column           As Long\n    Dim city_name                   As String\n    Dim Enterprise_value            As String\n    Dim base_value                  As String\n    \n    city_column = Get_Header_Column(sht, Get_in_CN_Header_Name(\"In_City_Name\"))\n    city_name = Trim(sht.Cells(Target.Row, city_column).Value)\n    \n    base_column = Get_Header_Column(sht, Get_in_CN_Header_Name(\"In_Housing_Fund_Base\"))\n    If base_column <> 0 Then\n        base_value = Trim(sht.Cells(Target.Row, base_column).Value)\n        \n        Enterprise_column = Get_Header_Column(sht, Get_in_CN_Header_Name(\"In_Enterprise_Ratio_of_Housing_Fund\"))\n        Enterprise_value = Trim(sht.Cells(Target.Row, Enterprise_column).Value)\n        \n        If Enterprise_value <> \"\" Then\n            If base_value = \"\" Then\n                Alert_Msg (Get_CN_Value(\"enterprise_ratio_of_housing_fund_base_blank\"))\n                In_Enterprise_Ratio_of_Housing_Fund = False\n                Exit Function\n            ElseIf IsNumeric(Enterprise_value) = False Then\n                Alert_Msg (Get_CN_Value(\"enterprise_ratio_of_housing_fund_incorrect\"))\n                In_Enterprise_Ratio_of_Housing_Fund = False\n                Exit Function\n            End If\n        Else\n            If base_value <> \"\" And city_name <> Get_CN_Value(\"city_shanghai\") Then\n                Alert_Msg (Get_CN_Value(\"enterprise_ratio_of_housing_fund_blank\"))\n                In_Enterprise_Ratio_of_Housing_Fund = False\n                Exit Function\n            End If\n        End If\n    End If\n    In_Enterprise_Ratio_of_Housing_Fund = True\n    \nEnd Function\n\n'|fffd||fffd||fffd||fffd||5e1||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|\nFunction In_Supplementary_Housing_Fund_Base(sht As Worksheet, Target As Range, str_value As String) As Boolean\n    Dim city_column                 As Long\n    Dim Individual_column           As Long\n    Dim Enterprise_column           As Long\n    Dim city_name                   As String\n    Dim Individual_value            As String\n    Dim Enterprise_value            As String\n    \n    If str_value <> \"\" Then\n        If IsNumeric(str_value) = False Then\n            Alert_Msg (Get_CN_Value(\"supplementary_housing_fund_base_incorrect\"))\n            In_Supplementary_Housing_Fund_Base = False\n            Exit Function\n        End If\n    End If\n    \n    In_Supplementary_Housing_Fund_Base = True\nEnd Function\n\n'|fffd||fffd||fffd||fffd||5e1||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2f1||fffd||fffd||fffd|\nFunction In_Supplementary_Individual_Ratio_of_Housing_Fund(sht As Worksheet, Target As Range, str_value As String) As Boolean\n    Dim base_column                 As Long\n    Dim Individual_column           As Long\n    Dim Individual_value            As String\n    Dim base_value                  As String\n    \n    \n    base_column = Get_Header_Column(sht, Get_in_CN_Header_Name(\"In_Supplementary_Housing_Fund_Base\"))\n    If base_column <> 0 Then\n        base_value = Trim(sht.Cells(Target.Row, base_column).Value)\n        \n        Individual_column = Get_Header_Column(sht, Get_in_CN_Header_Name(\"In_Supplementary_Individual_Ratio_of_Housing_Fund\"))\n        Individual_value = Trim(sht.Cells(Target.Row, Individual_column).Value)\n        \n        If Individual_value <> \"\" Then\n            If base_value = \"\" Then\n                Alert_Msg (Get_CN_Value(\"supplementary_individual_ratio_of_housing_fund_base_blank\"))\n                In_Supplementary_Individual_Ratio_of_Housing_Fund = False\n                Exit Function\n            ElseIf IsNumeric(Individual_value) = False Then\n                Alert_Msg (Get_CN_Value(\"supplementary_individual_ratio_of_housing_fund_incorrect\"))\n                In_Supplementary_Individual_Ratio_of_Housing_Fund = False\n                Exit Function\n            End If\n        Else\n            If base_value <> \"\" Then\n                Alert_Msg (Get_CN_Value(\"supplementary_individual_ratio_of_housing_fund_blank\"))\n                In_Supplementary_Individual_Ratio_of_Housing_Fund = False\n                Exit Function\n            End If\n        End If\n    End If\n    In_Supplementary_Individual_Ratio_of_Housing_Fund = True\nEnd Function\n\n '|fffd||fffd||fffd||fffd||5e1||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||4b5||fffd||fffd||fffd||fffd|\nFunction In_Supplementary_Enterprise_Ratio_of_Housing_Fund(sht As Worksheet, Target As Range, str_value As String) As Boolean\n    Dim base_column                 As Long\n    Dim Enterprise_column           As Long\n    Dim Enterprise_value            As String\n    Dim base_value                  As String\n    \n    \n    base_column = Get_Header_Column(sht, Get_in_CN_Header_Name(\"In_Supplementary_Housing_Fund_Base\"))\n    If base_column <> 0 Then\n        base_value = Trim(sht.Cells(Target.Row, base_column).Value)\n        \n        Enterprise_column = Get_Header_Column(sht, Get_in_CN_Header_Name(\"In_Supplementary_Enterprise_Ratio_of_Housing_Fund\"))\n        Enterprise_value = Trim(sht.Cells(Target.Row, Enterprise_column).Value)\n        \n        If Enterprise_value <> \"\" Then\n            If base_value = \"\" Then\n                Alert_Msg (Get_CN_Value(\"supplementary_enterprise_ratio_of_housing_fund_base_blank\"))\n                In_Supplementary_Enterprise_Ratio_of_Housing_Fund = False\n                Exit Function\n            ElseIf IsNumeric(Enterprise_value) = False Then\n                Alert_Msg (Get_CN_Value(\"supplementary_enterprise_ratio_of_housing_fund_incorrect\"))\n                In_Supplementary_Enterprise_Ratio_of_Housing_Fund = False\n                Exit Function\n            End If\n        Else\n            If base_value <> \"\" Then\n                Alert_Msg (Get_CN_Value(\"supplementary_enterprise_ratio_of_housing_fund_blank\"))\n                In_Supplementary_Enterprise_Ratio_of_Housing_Fund = False\n                Exit Function\n            End If\n        End If\n    End If\n    In_Supplementary_Enterprise_Ratio_of_Housing_Fund = True\nEnd Function\n\n\n\n'|fffd||1f7||fffd||43d|\nFunction In_Whether_to_Pay(sht As Worksheet, Target As Range, str_value As String) As Boolean\n    If str_value = \"\" Then\n        Alert_Msg (Get_CN_Value(\"whether_to_pay_blank\"))\n        In_Whether_to_Pay = False\n        Exit Function\n    End If\n    In_Whether_to_Pay = True\nEnd Function\n\n'|fffd||1f7||fffd||2f0|\nFunction In_Whether_to_Tax(sht As Worksheet, Target As Range, str_value As String) As Boolean\n    If str_value = \"\" Then\n        Alert_Msg (Get_CN_Value(\"whether_to_tax_blank\"))\n        In_Whether_to_Tax = False\n        Exit Function\n    End If\n    In_Whether_to_Tax = True\nEnd Function\n\n\n\n'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|\nFunction In_Postal_Code(sht As Worksheet, Target As Range, str_value As String) As Boolean\n    If str_value <> \"\" Then\n        If Postal_Code_validation(str_value) = False Then\n            Alert_Msg (Get_CN_Value(\"postal_code_incorrect\"))\n            In_Postal_Code = False\n            Exit Function\n        End If\n    End If\n    In_Postal_Code = True\nEnd Function\n\n\n'|fffd||fffd||fffd||fffd||fffd||2bc||fffd|\nFunction In_Mail_Address(sht As Worksheet, Target As Range, str_value As String) As Boolean\n    If str_value <> \"\" Then\n        If Mail_validation(str_value) = False Then\n            Alert_Msg (Get_CN_Value(\"mail_address_incorrect\"))\n            In_Mail_Address = False\n            Exit Function\n        End If\n    End If\n    In_Mail_Address = True\nEnd Function\n\n'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|\nFunction In_Bank_Name(sht As Worksheet, Target As Range, str_value As String) As Boolean\n    If str_value <> \"\" Then\n        If Chinese_validation(str_value) = False Then\n            Alert_Msg (Get_CN_Value(\"bank_name_incorrect\"))\n            In_Bank_Name = False\n            Exit Function\n        End If\n    End If\n    In_Bank_Name = True\nEnd Function\n\n'|fffd||2ba||fffd|\nFunction In_Account_Number(sht As Worksheet, Target As Range, str_value As String) As Boolean\n    If str_value <> \"\" Then\n        If BankID_validation(str_value) = False Then\n            Alert_Msg (Get_CN_Value(\"account_number_incorrect\"))\n            In_Account_Number = False\n            Exit Function\n        End If\n    End If\n    In_Account_Number = True\nEnd Function\n\n'|fffd||2ba||fffd||2a1||fffd||fffd|\nFunction In_Account_Province_Name(sht As Worksheet, Target As Range, str_value As String) As Boolean\n    Dim str_province As String\n    Dim province_name As String\n    \n    If str_value <> \"\" Then\n        If Get_Province_List(str_value) = False Then\n            Alert_Msg (Get_CN_Value(\"account_province_name_incorrect\"))\n            In_Account_Province_Name = False\n            Exit Function\n        End If\n    End If\n    In_Account_Province_Name = True\nEnd Function\n\n'|fffd||2ba||fffd||fffd||fffd||fffd||fffd||fffd||fffd|\nFunction In_Account_City_Name(sht As Worksheet, Target As Range, str_value As String) As Boolean\n'    Dim str_city As String\n'    Dim city_name As String\n'\n'    str_city = Get_CN_Value(\"city\")\n'    city_name = str_city\n'    If str_value <> \"\" Then\n'        If InStr(str_value, str_city) <> Len(str_value) Or Get_City_List(city_name) = False Then\n'            Alert_Msg (Get_CN_Value(\"account_city_name_incorrect\"))\n'            In_Account_City_Name = False\n'            Exit Function\n'        End If\n'    End If\n    In_Account_City_Name = True\nEnd Function\n\n'|fffd||2fb||fffd||fffd||fffd|\nFunction In_Account_Name(sht As Worksheet, Target As Range, str_value As String) As Boolean\n    Dim emp_name                   As String\n    Dim emp_column                 As Long\n\n    emp_column = Get_Header_Column(sht, Get_in_CN_Header_Name(\"In_Worker_Name\"))\n    emp_name = Trim(sht.Cells(Target.Row, emp_column).Value)\n    If str_value <> \"\" Then\n        If str_value <> emp_name Then\n            Alert_Msg (Get_CN_Value(\"account_name_incorrect\"))\n            In_Account_Name = False\n            Exit Function\n        End If\n    End If\n    In_Account_Name = True\nEnd Function\n\n'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|\nFunction In_Bank_Type(sht As Worksheet, Target As Range, str_value As String)\n    In_Bank_Type = True\nEnd Function\n\n\n'|fffd||fffd||1f2||fffd||fffd||fffd||fffd||fffd||fffd||2bc||fffd||fffd||fffd||fffd|\nFunction In_Dispatch_Start_Date(sht As Worksheet, Target As Range, str_value As String) As Boolean\n    Dim outsouring_type_column As Long\n    Dim outsouring_type_value As String\n    \n    outsouring_type_column = Get_Header_Column(sht, Get_in_CN_Header_Name(\"In_Outsourcing_Type\"))\n    outsouring_type_value = Trim(sht.Cells(Target.Row, outsouring_type_column).Value)\n    \n    If outsouring_type_value = Get_CN_Value(\"dispatch\") Then\n        If str_value = \"\" Then\n            Alert_Msg (Get_CN_Value(\"dispatch_start_date_blank\"))\n            In_Dispatch_Start_Date = False\n            Exit Function\n        End If\n    ElseIf outsouring_type_value = Get_CN_Value(\"formal_outsourcing\") Then\n        If str_value <> \"\" Then\n            Alert_Msg (Get_CN_Value(\"dispatch_start_date_should_blank\"))\n            In_Dispatch_Start_Date = False\n            Exit Function\n        End If\n    ElseIf outsouring_type_value = Get_CN_Value(\"special_outsourcing\") Then\n        If str_value = \"\" Then\n            Alert_Msg (Get_CN_Value(\"dispatch_start_date_blank\"))\n            In_Dispatch_Start_Date = False\n            Exit Function\n        End If\n    End If\n    \n    If str_value <> \"\" Then\n        If IsDate(str_value) = False Or Date_validation(str_value) = False Then\n            Alert_Msg (Get_CN_Value(\"dispatch_start_date_incorrect\"))\n            In_Dispatch_Start_Date = False\n            Exit Function\n        End If\n    End If\n    \n    In_Dispatch_Start_Date = True\nEnd Function\n\n'|fffd||fffd||1f2||fffd||fffd||fffd||7bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|\nFunction In_Dispatch_End_Date(sht As Worksheet, Target As Range, str_value As String) As Boolean\n    Dim outsouring_type_column As Long\n    Dim outsouring_type_value As String\n    \n    outsouring_type_column = Get_Header_Column(sht, Get_in_CN_Header_Name(\"In_Outsourcing_Type\"))\n    outsouring_type_value = Trim(sht.Cells(Target.Row, outsouring_type_column).Value)\n    \n    If outsouring_type_value = Get_CN_Value(\"formal_outsourcing\") Then\n        If str_value <> \"\" Then\n            Alert_Msg (Get_CN_Value(\"dispatch_end_date_should_blank\"))\n            In_Dispatch_End_Date = False\n            Exit Function\n        End If\n    ElseIf outsouring_type_value = Get_CN_Value(\"special_outsourcing\") Then\n        If str_value = \"\" Then\n            Alert_Msg (Get_CN_Value(\"dispatch_end_date_blank\"))\n            In_Dispatch_End_Date = False\n            Exit Function\n        End If\n    End If\n    \n    If str_value <> \"\" Then\n        If IsDate(str_value) = False Or Date_validation(str_value) = False Then\n            Alert_Msg (Get_CN_Value(\"dispatch_end_date_incorrect\"))\n            In_Dispatch_End_Date = False\n            Exit Function\n        End If\n    End If\n    \n    In_Dispatch_End_Date = True\nEnd Function\n\n'|fffd||fffd||2bc||fffd||fffd||fffd||fffd|(|fffd||fffd|)\nFunction In_Probation_Start_Date(sht As Worksheet, Target As Range, str_value As String) As Boolean\n    If str_value <> \"\" Then\n        If IsDate(str_value) = False Or Date_validation(str_value) = False Then\n            Alert_Msg (Get_CN_Value(\"probation_start_date_incorrect\"))\n            In_Probation_Start_Date = False\n            Exit Function\n        End If\n    End If\n    In_Probation_Start_Date = True\nEnd Function\n\n'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd|)\nFunction In_Probation_End_Date(sht As Worksheet, Target As Range, str_value As String) As Boolean\n    If str_value <> \"\" Then\n        If IsDate(str_value) = False Or Date_validation(str_value) = False Then\n            Alert_Msg (Get_CN_Value(\"contract_end_date_incorrect\"))\n            In_Probation_End_Date = False\n            Exit Function\n        End If\n    End If\n    In_Probation_End_Date = True\nEnd Function\n\n'|fffd||fffd||fffd||fffd|(|fffd||fffd|)\nFunction In_Probation_Salary(sht As Worksheet, Target As Range, str_value As String) As Boolean\n    If str_value <> \"\" Then\n        If IsNumeric(str_value) = False Then\n            Alert_Msg (Get_CN_Value(\"probation_salary_incorrect\"))\n            In_Probation_Salary = False\n            Exit Function\n        End If\n    End If\n    In_Probation_Salary = True\nEnd Function\n\n'|fffd||fffd||36c||fffd||fffd||2bc||fffd||fffd||fffd||fffd|(|fffd||fffd|)\nFunction In_Contract_Start_Date(sht As Worksheet, Target As Range, str_value As String) As Boolean\n    If str_value <> \"\" Then\n        If IsDate(str_value) = False Or Date_validation(str_value) = False Then\n            Alert_Msg (Get_CN_Value(\"contract_start_date_incorrect\"))\n            In_Contract_Start_Date = False\n            Exit Function\n        End If\n    End If\n    In_Contract_Start_Date = True\nEnd Function\n\n'|fffd||fffd||36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd|)\nFunction In_Contract_End_Date(sht As Worksheet, Target As Range, str_value As String) As Boolean\n    If str_value <> \"\" Then\n        If IsDate(str_value) = False Or Date_validation(str_value) = False Then\n            Alert_Msg (Get_CN_Value(\"contract_end_date_incorrect\"))\n            In_Contract_End_Date = False\n            Exit Function\n        End If\n    End If\n    In_Contract_End_Date = True\nEnd Function\n\n'|fffd||fffd||fffd||2a3||fffd||fffd||fffd||fffd||fffd|\nFunction In_Formal_Salary(sht As Worksheet, Target As Range, str_value As String) As Boolean\n    If str_value <> \"\" Then\n        If IsNumeric(str_value) = False Then\n            Alert_Msg (Get_CN_Value(\"formal_salary_incorrect\"))\n            In_Formal_Salary = False\n            Exit Function\n        End If\n    End If\n    In_Formal_Salary = True\nEnd Function\n\n\n\n'|fffd||fffd||fffd||fffd||fffd||fffd|\nFunction In_Working_System(sht As Worksheet, Target As Range, str_value As String) As Boolean\n    If str_value = \"\" Then\n        Alert_Msg (Get_CN_Value(\"working_system_blank\"))\n        In_Working_System = False\n        Exit Function\n    End If\n    In_Working_System = True\nEnd Function\n\n\n'|fffd||7ef0|\nFunction In_Telephone_Number(sht As Worksheet, Target As Range, str_value As String) As Boolean\n    If str_value <> \"\" Then\n        If Telephone_validation(str_value) = False Then\n            Alert_Msg (Get_CN_Value(\"telephone_number_incorrect\"))\n            In_Telephone_Number = False\n            Exit Function\n        End If\n    End If\n    In_Telephone_Number = True\nEnd Function\n\n'|fffd||fffd||fffd||fffd||fffd||635||fffd|\nFunction In_Work_Place(sht As Worksheet, Target As Range, str_value As String) As Boolean\n    If str_value = \"\" Then\n        Alert_Msg (Get_CN_Value(\"work_place_blank\"))\n        In_Work_Place = False\n        Exit Function\n    End If\n    In_Work_Place = True\nEnd Function\n\n\n'|5b0||3bb|\nFunction In_Work_Position(sht As Worksheet, Target As Range, str_value As String) As Boolean\n    If str_value = \"\" Then\n        Alert_Msg (Get_CN_Value(\"work_position_blank\"))\n        In_Work_Position = False\n        Exit Function\n    End If\n    In_Work_Position = True\nEnd Function\n\n'|5b0||3bb||fffd||fffd||fffd||fffd|\nFunction In_Work_Position_Type(sht As Worksheet, Target As Range, str_value As String) As Boolean\n    Dim city_column                 As Long\n    Dim city_name                   As String\n\n    city_column = Get_Header_Column(sht, Get_in_CN_Header_Name(\"In_City_Name\"))\n    city_name = Trim(sht.Cells(Target.Row, city_column).Value)\n\n    If str_value = \"\" Then\n        If city_name = Get_CN_Value(\"city_beijing\") Then\n            Alert_Msg (Get_CN_Value(\"work_position_type_blank\"))\n            In_Work_Position_Type = False\n            Exit Function\n        End If\n    End If\n    In_Work_Position_Type = True\nEnd Function\n\n\n'|fffd||ac68||2b1||fffd||fffd|\nFunction In_Declaration_Date(sht As Worksheet, Target As Range, str_value As String) As Boolean\n    If str_value <> \"\" Then\n        If IsDate(str_value) = False Or Date_validation(str_value) = False Then\n            Alert_Msg (Get_CN_Value(\"declaration_date_incorrect\"))\n            In_Declaration_Date = False\n            Exit Function\n        End If\n    End If\n    In_Declaration_Date = True\nEnd Function\n\n\n'|fffd||fffd||3bb|\nFunction In_Gang_Wei(sht As Worksheet, Target As Range, str_value As String) As Boolean\n    Dim city_column                 As Long\n    Dim city_name                   As String\n\n    city_column = Get_Header_Column(sht, Get_in_CN_Header_Name(\"In_City_Name\"))\n    city_name = Trim(sht.Cells(Target.Row, city_column).Value)\n\n    If str_value = \"\" Then\n        If city_name = Get_CN_Value(\"city_beijing\") Then\n            Alert_Msg (Get_CN_Value(\"gangwei_blank\"))\n            In_Gang_Wei = False\n            Exit Function\n        End If\n    End If\n    In_Gang_Wei = True\nEnd Function\n\n\n'|fffd||376||fffd||fffd||fffd||36c||fffd||fffd||2bc||2b1||fffd||fffd|\nFunction In_Labor_Contract_Start_Date(sht As Worksheet, Target As Range, str_value As String) As Boolean\n    Dim city_column                 As Long\n    Dim city_name                   As String\n\n    city_column = Get_Header_Column(sht, Get_in_CN_Header_Name(\"In_City_Name\"))\n    city_name = Trim(sht.Cells(Target.Row, city_column).Value)\n\n    If str_value = \"\" Then\n        If city_name = Get_CN_Value(\"city_beijing\") Then\n            Alert_Msg (Get_CN_Value(\"labor_contract_start_date_blank\"))\n            In_Labor_Contract_Start_Date = False\n            Exit Function\n        End If\n    Else\n        If IsDate(str_value) = False Or Date_validation(str_value) = False Then\n            Alert_Msg (Get_CN_Value(\"labor_contract_start_date_incorrect\"))\n            In_Labor_Contract_Start_Date = False\n            Exit Function\n        End If\n    End If\n    In_Labor_Contract_Start_Date = True\nEnd Function\n\n\n'|fffd||376||fffd||fffd||fffd||36c||fffd||fffd||fffd||fffd||2b1||fffd||fffd|\nFunction In_Labor_Contract_End_Date(sht As Worksheet, Target As Range, str_value As String) As Boolean\n    Dim city_column                 As Long\n    Dim city_name                   As String\n\n    city_column = Get_Header_Column(sht, Get_in_CN_Header_Name(\"In_City_Name\"))\n    city_name = Trim(sht.Cells(Target.Row, city_column).Value)\n\n    If str_value = \"\" Then\n        If city_name = Get_CN_Value(\"city_beijing\") Then\n            Alert_Msg (Get_CN_Value(\"labor_contract_end_date_blank\"))\n            In_Labor_Contract_End_Date = False\n            Exit Function\n        End If\n    Else\n        If IsDate(str_value) = False Or Date_validation(str_value) = False Then\n            Alert_Msg (Get_CN_Value(\"labor_contract_start_date_incorrect\"))\n            In_Labor_Contract_End_Date = False\n            Exit Function\n        End If\n    End If\n    In_Labor_Contract_End_Date = True\nEnd Function\n\n'|43d||fffd||fffd||fffd||fffd||2bc||2b1||fffd||fffd|\nFunction In_Salary_Start_Date(sht As Worksheet, Target As Range, str_value As String) As Boolean\n    If str_value = \"\" Then\n'        Alert_Msg (Get_CN_Value(\"salary_start_date_blank\"))\n'        In_Salary_Start_Date = False\n'        Exit Function\n    Else\n        If IsDate(str_value) = False Or Date_validation(str_value) = False Then\n            Alert_Msg (Get_CN_Value(\"salary_start_date_incorrect\"))\n            In_Salary_Start_Date = False\n            Exit Function\n        ElseIf Day(CDate(str_value)) <> 1 Then\n            Alert_Msg (Get_CN_Value(\"salary_start_date_should1\"))\n            In_Salary_Start_Date = False\n            Exit Function\n        End If\n    End If\n    In_Salary_Start_Date = True\nEnd Function\n\n'|fffd||fffd||43d||fffd||fffd||2bc||2b1||fffd||fffd|\nFunction In_Give_Salary_Start_Date(sht As Worksheet, Target As Range, str_value As String) As Boolean\n    If str_value = \"\" Then\n'        Alert_Msg (Get_CN_Value(\"give_salary_start_date_blank\"))\n'        In_Give_Salary_Start_Date = False\n'        Exit Function\n    Else\n        If IsDate(str_value) = False Or Date_validation(str_value) = False Then\n            Alert_Msg (Get_CN_Value(\"give_salary_start_date_incorrect\"))\n            In_Give_Salary_Start_Date = False\n            Exit Function\n        ElseIf Day(CDate(str_value)) <> 1 Then\n            Alert_Msg (Get_CN_Value(\"give_salary_start_date_should1\"))\n            In_Give_Salary_Start_Date = False\n            Exit Function\n        End If\n    End If\n    In_Give_Salary_Start_Date = True\nEnd Function\n\n\n'|fffd||331||fffd||fffd||fffd||2bc||2b1||fffd||fffd|\nFunction In_Commercial_Insurance_Date(sht As Worksheet, Target As Range, str_value As String) As Boolean\n    If str_value <> \"\" Then\n        If IsDate(str_value) = False Or Date_validation(str_value) = False Then\n            Alert_Msg (Get_CN_Value(\"give_salary_start_date_incorrect\"))\n            In_Commercial_Insurance_Date = False\n            Exit Function\n        ElseIf Day(CDate(str_value)) <> 1 Then\n            Alert_Msg (Get_CN_Value(\"commercial_insurance_start_date_should1\"))\n            In_Commercial_Insurance_Date = False\n            Exit Function\n        End If\n    End If\n    In_Commercial_Insurance_Date = True\nEnd Function\n'|fffd||fffd||5b0||fffd||739||374||fffd||4b5||fffd||fffd||fffd||fffd|\nFunction In_SGCY_Type(sht As Worksheet, Target As Range, str_value As String) As Boolean\n    Dim salary_col As Long\n    Dim salary_value As String\n    Dim tax_col As Long\n    Dim tax_value As String\n    \n    salary_col = Get_Header_Column(sht, Get_in_CN_Header_Name(\"In_Whether_to_Pay\"))\n    salary_value = Trim(sht.Cells(Target.Row, salary_col).Value)\n    tax_col = Get_Header_Column(sht, Get_in_CN_Header_Name(\"In_Whether_to_Tax\"))\n    tax_value = Trim(sht.Cells(Target.Row, tax_col).Value)\n    \n    If salary_value = Get_CN_Value(\"flag_yes\") Or tax_value = Get_CN_Value(\"flag_yes\") Then\n        If str_value = \"\" Then\n            Alert_Msg (Get_CN_Value(\"in_sgcy_type_blank\"))\n            In_SGCY_Type = False\n            Exit Function\n        End If\n    End If\n    In_SGCY_Type = True\nEnd Function\n\n\n'|fffd||fffd||36c||fffd||fffd||fffd||fffd|\nFunction In_Labor_Type(sht As Worksheet, Target As Range, str_value As String) As Boolean\n    In_Labor_Type = True\nEnd Function\n\n\n'|fffd||1f7||fffd||fffd||fffd||3f5||531||fffd||fffd|\nFunction In_Whether_Employee(sht As Worksheet, Target As Range, str_value As String) As Boolean\n    In_Whether_Employee = True\nEnd Function\n\n'|fffd||fffd||531||fffd||fffd||fffd||fffd|\nFunction In_RY_Type(sht As Worksheet, Target As Range, str_value As String) As Boolean\n    In_RY_Type = True\nEnd Function\nAttribute VB_Name = \"OutDataValidation\"\nOption Explicit\nOption Base 1\n\n'|fffd||fffd||fffd||fffd|\nFunction Out_Worker_Name(sht As Worksheet, Target As Range, str_value As String) As Boolean\n    If str_value = \"\" Then\n        Alert_Msg (Get_CN_Value(\"out_worker_name_blank\"))\n        Out_Worker_Name = False\n    Else\n        Out_Worker_Name = True\n    End If\n\nEnd Function\n\n\n'|5a4||fffd||fffd||fffd||fffd|\nFunction Out_Certificate_Number(sht As Worksheet, Target As Range, str_value As String) As Boolean\n    If str_value = \"\" Then\n        Alert_Msg (Get_CN_Value(\"certificate_number_blank\"))\n        Out_Certificate_Number = False\n    Else\n        Out_Certificate_Number = True\n    End If\nEnd Function\n\n'|fffd||fffd||5b0||2b1||fffd||fffd|\nFunction Out_Leave_Date(sht As Worksheet, Target As Range, str_value As String) As Boolean\n    If str_value = \"\" Then\n        Alert_Msg (Get_CN_Value(\"out_leave_date_blank\"))\n        Out_Leave_Date = False\n    ElseIf IsDate(str_value) = False Or Date_validation(str_value) = False Then\n        Alert_Msg (Get_CN_Value(\"out_leave_date_incorrect\"))\n        Out_Leave_Date = False\n    Else\n        Out_Leave_Date = True\n    End If\nEnd Function\n\n'|fffd||7c63||fffd||577||47d||fffd||fffd||fffd||2b1||fffd||fffd|\nFunction Out_Social_Insurance_Charge_End_Date(sht As Worksheet, Target As Range, str_value As String) As Boolean\n    Dim housing_fund_column As Long\n    housing_fund_column = Get_Header_Column(sht, Get_out_CN_Header_Name(\"Out_Housing_Fund_Charge_End_Date\"))\n    If str_value = \"\" Then\n'        Alert_Msg (Get_CN_Value(\"out_social_insurance_charge_end_date_blank\"))\n'        Out_Social_Insurance_Charge_End_Date = false\n'        Exit Function\n    Else\n        If IsDate(str_value) = False Or Date_validation(str_value) = False Then\n            Alert_Msg (Get_CN_Value(\"out_social_insurance_charge_end_date_incorrect\"))\n            Out_Social_Insurance_Charge_End_Date = False\n            Exit Function\n        ElseIf Month(CDate(str_value)) = Month(CDate(str_value) + 1) Then\n            Alert_Msg (Get_CN_Value(\"out_social_insurance_charge_end_date_should_lastday\"))\n            Out_Social_Insurance_Charge_End_Date = False\n            Exit Function\n        End If\n    End If\n    Out_Social_Insurance_Charge_End_Date = True\n    If Trim(sht.Cells(Target.Row, housing_fund_column).Value) = \"\" Then\n        sht.Cells(Target.Row, housing_fund_column).Value = str_value\n    End If\nEnd Function\n\n\n'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||577||47d||fffd||fffd||fffd||2b1||fffd||fffd|\nFunction Out_Housing_Fund_Charge_End_Date(sht As Worksheet, Target As Range, str_value As String) As Boolean\n    If str_value = \"\" Then\n'        Alert_Msg (Get_CN_Value(\"out_housing_fund_charge_end_date_blank\"))\n'        Out_Housing_Fund_Charge_End_Date = false\n'        Exit Function\n    Else\n        If IsDate(str_value) = False Or Date_validation(str_value) = False Then\n            Alert_Msg (Get_CN_Value(\"out_housing_fund_charge_end_date_incorrect\"))\n            Out_Housing_Fund_Charge_End_Date = False\n            Exit Function\n        ElseIf Month(CDate(str_value)) = Month(CDate(str_value) + 1) Then\n            Alert_Msg (Get_CN_Value(\"out_housing_fund_charge_end_date_should_lastday\"))\n            Out_Housing_Fund_Charge_End_Date = False\n            Exit Function\n        End If\n    End If\n    Out_Housing_Fund_Charge_End_Date = True\nEnd Function\n\n\n'|fffd||fffd||5b0||52d||fffd||fffd|\nFunction Out_Leave_Reason(sht As Worksheet, Target As Range, str_value As String) As Boolean\n    If str_value = \"\" Then\n        Alert_Msg (Get_CN_Value(\"out_leave_reason_blank\"))\n        Out_Leave_Reason = False\n    Else\n        Out_Leave_Reason = True\n    End If\nEnd Function\n\n'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|\nFunction Out_Other_Benefit_End_Date(sht As Worksheet, Target As Range, str_value As String) As Boolean\n    If str_value <> \"\" Then\n        If IsDate(str_value) = False Or Date_validation(str_value) = False Then\n            Alert_Msg (Get_CN_Value(\"other_benefit_end_date_incorrect\"))\n            Out_Other_Benefit_End_Date = False\n        ElseIf Month(CDate(str_value)) = Month(CDate(str_value) + 1) Then\n            Alert_Msg (Get_CN_Value(\"other_benefit_end_date_lastday\"))\n            Out_Other_Benefit_End_Date = False\n        Exit Function\n        End If\n        Out_Other_Benefit_End_Date = True\n    Else\n        Out_Other_Benefit_End_Date = True\n    End If\nEnd Function\n\n'|fffd||fffd||fffd||fffd||fffd||fffd|\nFunction Out_Welfare_Place(sht As Worksheet, Target As Range, str_value As String) As Boolean\n    If str_value = \"\" Then\n        Alert_Msg (Get_CN_Value(\"out_welfare_place_blank\"))\n        Out_Welfare_Place = False\n        Exit Function\n    Else\n        If InStr(str_value, Get_CN_Value(\"province\")) > 0 Or InStr(str_value, Get_CN_Value(\"city\")) > 0 Or InStr(str_value, Get_CN_Value(\"country\")) > 0 Then\n            Alert_Msg (Get_CN_Value(\"out_welfare_place_incorrect\"))\n            Out_Welfare_Place = False\n            Exit Function\n        End If\n    End If\n    Out_Welfare_Place = True\nEnd Function\n\n\n'|fffd||37b||fffd||fffd||fffd||fffd||fffd|\nFunction Out_Client_Name(sht As Worksheet, Target As Range, str_value As String) As Boolean\n    If str_value = \"\" Then\n        Alert_Msg (Get_CN_Value(\"client_name_blank\"))\n        Out_Client_Name = False\n        Exit Function\n    End If\n    Out_Client_Name = True\nEnd Function\n\n'|fffd||ac68||2b1||fffd||fffd|\nFunction Out_Declaration_Date(sht As Worksheet, Target As Range, str_value As String) As Boolean\n    If str_value <> \"\" Then\n        If IsDate(str_value) = False Or Date_validation(str_value) = False Then\n            Alert_Msg (Get_CN_Value(\"declaration_date_incorrect\"))\n            Out_Declaration_Date = False\n            Exit Function\n        End If\n    End If\n    Out_Declaration_Date = True\nEnd Function\nAttribute VB_Name = \"Sheet1\"\nAttribute VB_Base = \"0{00020820-0000-0000-C000-000000000046}\"\nAttribute VB_GlobalNameSpace = False\nAttribute VB_Creatable = False\nAttribute VB_PredeclaredId = True\nAttribute VB_Exposed = True\nAttribute VB_TemplateDerived = False\nAttribute VB_Customizable = True\nAttribute VB_Name = \"Sheet10\"\nAttribute VB_Base = \"0{00020820-0000-0000-C000-000000000046}\"\nAttribute VB_GlobalNameSpace = False\nAttribute VB_Creatable = False\nAttribute VB_PredeclaredId = True\nAttribute VB_Exposed = True\nAttribute VB_TemplateDerived = False\nAttribute VB_Customizable = True\nAttribute VB_Name = \"Sheet11\"\nAttribute VB_Base = \"0{00020820-0000-0000-C000-000000000046}\"\nAttribute VB_GlobalNameSpace = False\nAttribute VB_Creatable = False\nAttribute VB_PredeclaredId = True\nAttribute VB_Exposed = True\nAttribute VB_TemplateDerived = False\nAttribute VB_Customizable = True\nAttribute VB_Control = \"CommandButton1, 1, 0, MSForms, CommandButton\"\nAttribute VB_Name = \"Sheet2\"\nAttribute VB_Base = \"0{00020820-0000-0000-C000-000000000046}\"\nAttribute VB_GlobalNameSpace = False\nAttribute VB_Creatable = False\nAttribute VB_PredeclaredId = True\nAttribute VB_Exposed = True\nAttribute VB_TemplateDerived = False\nAttribute VB_Customizable = True\n\n'|fffd||fffd||52a||fffd||fffd||fffd||fffd||fffd||4eef||2b1||fffd||fffd||fffd||fffd||fffd||fffd||4e6||fffd||fffd||fffd||fffd||5a4||fffd||7fc||fffd|\nPrivate Sub Worksheet_Change(ByVal Target As Range)\n    Dim str_fun_name            As String\n    Dim sht                     As Worksheet\n    Dim str_value               As String\n    Dim result                  As Boolean\n    Dim header_name             As String\n    \nOn Error GoTo myerr:\n    displayOFF\n    Set sht = ThisWorkbook.ActiveSheet\n    '|13f||fffd||ad65||52a||fffd||fffd||fffd||fffd||fffd||fffd||427||fffd||fffd||fffd||fffd|\n    If Target.Row < delegate_start_row Then Exit Sub\n    '|461||fffd||fffd||1f5||fffd||fffd||fffd||fffd||fffd||52a||fffd||fffd||fffd||fffd||fffd||fffd|\n    If Target.count > 1 Then Exit Sub\n    '|fffd||436||fffd||fffd||fffd||427||fffd||fffd|\n    If Verify_Blank_Row(sht, Target.Row) = True Then Exit Sub\n    \n    header_name = Get_Header_Name(sht, Target.Column)\n    sht.Range(Target.Address).Interior.ColorIndex = 0\n'    str_mr = \"\"\n    str_fun_name = Get_In_Macro_Name(header_name)\n\n    If str_fun_name <> \"\" Then\n        str_value = Trim(sht.Range(Target.Address).Value)\n        result = Application.Run(str_fun_name, sht, Target, str_value)\n        If result = False Then\n            sht.Range(Target.Address).Interior.ColorIndex = 3\n        End If\n    End If\n\n    displayON\n    Exit Sub\nmyerr:\n    displayON\nEnd Sub\n\n\nPrivate Sub Worksheet_SelectionChange(ByVal Target As Range)\n    Dim header_name As String\n    Dim sht As Worksheet\n    Dim result As String\n\nOn Error GoTo myerr:\n    Set sht = ThisWorkbook.ActiveSheet\n    header_name = Get_Header_Name(sht, Target.Column)\n    \n    Set sht = ThisWorkbook.ActiveSheet\n    '|13f||fffd||ad65||52a||fffd||fffd||fffd||fffd||fffd||fffd||427||fffd||fffd||fffd||fffd|\n    If Target.Row < delegate_start_row Then Exit Sub\n    '|461||fffd||fffd||1f5||fffd||fffd||fffd||fffd||fffd||52a||fffd||fffd||fffd||fffd||fffd||fffd|\n    If Target.count > 1 Then Exit Sub\n    '|fffd||436||fffd||fffd||fffd||427||fffd||fffd|\n    If Verify_Blank_Row(sht, Target.Row) = True Then Exit Sub\n    \n   \n    Target.Validation.Delete\n\n    '[|5a4||fffd||fffd||fffd||fffd||fffd||fffd|] |fffd||fffd||fffd||fffd||fffd||fffd||fffd||431||fffd|\n    If header_name = Get_in_CN_Header_Name(\"In_Certificate_Type\") Then\n        With Target.Validation\n            .Delete\n            .Add Type:=xlValidateList, Formula1:=Get_Drop_list(\"A\")\n        End With\n    End If\n\n    '[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|] |fffd||fffd||fffd||fffd||fffd||fffd||fffd||431||fffd|\n    If header_name = Get_in_CN_Header_Name(\"In_Bank_Type\") Then\n        With Target.Validation\n            .Delete\n            .Add Type:=xlValidateList, Formula1:=Get_Drop_list(\"B\")\n        End With\n    End If\n\n    '[|fffd||fffd||fffd||fffd||fffd||fffd|] |fffd||fffd||fffd||fffd||fffd||fffd||fffd||431||fffd|\n    If header_name = Get_in_CN_Header_Name(\"In_Working_System\") Then\n        With Target.Validation\n            .Delete\n            .Add Type:=xlValidateList, Formula1:=Get_Drop_list(\"C\")\n        End With\n    End If\n\n    '[|fffd||1f7||fffd||43d|] |fffd||fffd||fffd||fffd||fffd||fffd||fffd||431||fffd|\n    If header_name = Get_in_CN_Header_Name(\"In_Whether_to_Pay\") Then\n        With Target.Validation\n            .Delete\n            .Add Type:=xlValidateList, Formula1:=Get_Drop_list(\"D\")\n        End With\n    End If\n\n    '[|fffd||1f7||fffd||2f0|] |fffd||fffd||fffd||fffd||fffd||fffd||fffd||431||fffd|\n    If header_name = Get_in_CN_Header_Name(\"In_Whether_to_Tax\") Then\n        With Target.Validation\n            .Delete\n            .Add Type:=xlValidateList, Formula1:=Get_Drop_list(\"E\")\n        End With\n    End If\n\n    '[|fffd||fffd||3bb|] |fffd||fffd||fffd||fffd||fffd||fffd||fffd||431||fffd|\n    If header_name = Get_in_CN_Header_Name(\"In_Gang_Wei\") Then\n        With Target.Validation\n            .Delete\n            .Add Type:=xlValidateList, Formula1:=Get_Drop_list(\"H\")\n        End With\n    End If\n\n     '[|fffd||1f7||fffd||fffd||fffd||fffd||fffd||16e|] |fffd||fffd||fffd||fffd||fffd||fffd||fffd||431||fffd|\n    If header_name = Get_in_CN_Header_Name(\"In_Whether_Children\") Then\n        With Target.Validation\n            .Delete\n            .Add Type:=xlValidateList, Formula1:=Get_Drop_list(\"I\")\n        End With\n    End If\n\n    '[|22b||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5fc|] |fffd||fffd||fffd||fffd||fffd||fffd||fffd||431||fffd|\n    If header_name = Get_in_CN_Header_Name(\"In_National_Welfare_Standards\") Then\n        Dim city_column As Long\n        Dim city_name As String\n\n        city_column = Get_Header_Column(sht, Get_in_CN_Header_Name(\"In_City_Name\"))\n        city_name = Trim(sht.Cells(Target.Row, city_column).Value)\n        result = Get_National_Welfare_Standards_Drop_list(city_name)\n        If result <> \"\" And city_name <> \"\" Then\n            With Target.Validation\n                .Delete\n                .Add Type:=xlValidateList, Formula1:=result\n            End With\n        End If\n    End If\n    '[|fffd||2fb||fffd||fffd||fffd||fffd||fffd||fffd||fffd|]|fffd||fffd||fffd||fffd||fffd||fffd||fffd||431||fffd|\n    If header_name = Get_in_CN_Header_Name(\"In_Account_City_Name\") Then\n        Dim province_column As Long\n        Dim province_name As String\n\n        province_column = Get_Header_Column(sht, Get_in_CN_Header_Name(\"In_Account_Province_Name\"))\n        If province_column <> 0 Then\n            province_name = Trim(sht.Cells(Target.Row, province_column).Value)\n            result = Get_Province_City_List(province_name)\n            If result <> \"\" And province_name <> \"\" Then\n                With Target.Validation\n                    .Delete\n                    .Add Type:=xlValidateList, Formula1:=result\n                End With\n            End If\n        End If\n    End If\n    '[|fffd||1f7||fffd||fffd||fffd||3f5||531||fffd||fffd|]|fffd||fffd||fffd||fffd||fffd||fffd||fffd||431||fffd|\n    If header_name = Get_in_CN_Header_Name(\"In_Whether_Employee\") Then\n        With Target.Validation\n            .Delete\n            .Add Type:=xlValidateList, Formula1:=Get_Drop_list(\"L\")\n        End With\n    End If\n    \n    '[|fffd||fffd||5b0||fffd||739||374||fffd||4b5||fffd||fffd||fffd||fffd|]|fffd||fffd||fffd||fffd||fffd||fffd||fffd||431||fffd|\n    If header_name = Get_in_CN_Header_Name(\"In_SGCY_Type\") Then\n        With Target.Validation\n            .Delete\n            .Add Type:=xlValidateList, Formula1:=Get_Drop_list(\"M\")\n        End With\n    End If\n    \n     '[|fffd||fffd||531||fffd||fffd||fffd||fffd|]|fffd||fffd||fffd||fffd||fffd||fffd||fffd||431||fffd|\n    If header_name = Get_in_CN_Header_Name(\"In_RY_Type\") Then\n        Dim type_column As Long\n        Dim type_name As String\n\n        type_column = Get_Header_Column(sht, Get_in_CN_Header_Name(\"In_SGCY_Type\"))\n        type_name = Trim(sht.Cells(Target.Row, type_column).Value)\n        If InStr(type_name, Get_CN_Value(\"emp_type_guyuan\")) > 0 Then\n            With Target.Validation\n                .Delete\n                .Add Type:=xlValidateList, Formula1:=Get_Drop_list(\"N\")\n            End With\n        End If\n        If InStr(type_name, Get_CN_Value(\"emp_type_feiguyuan\")) > 0 Then\n            With Target.Validation\n                .Delete\n                .Add Type:=xlValidateList, Formula1:=Get_Drop_list(\"O\")\n            End With\n        End If\n    End If\n    \n\n    displayON\n    Exit Sub\nmyerr:\n    displayON\n    Call Protect_sht(sht)\nEnd Sub\n\n\nAttribute VB_Name = \"Sheet3\"\nAttribute VB_Base = \"0{00020820-0000-0000-C000-000000000046}\"\nAttribute VB_GlobalNameSpace = False\nAttribute VB_Creatable = False\nAttribute VB_PredeclaredId = True\nAttribute VB_Exposed = True\nAttribute VB_TemplateDerived = False\nAttribute VB_Customizable = True\n\n'|fffd||fffd||52a||fffd||fffd||fffd||fffd||fffd||4eef||2b1||fffd||fffd||fffd||fffd||fffd||fffd||4e6||fffd||fffd||fffd||fffd||5a4||fffd||7fc||fffd|\nPrivate Sub Worksheet_Change(ByVal Target As Range)\n    Dim str_fun_name            As String\n    Dim sht                     As Worksheet\n    Dim str_value               As String\n    Dim result                  As Boolean\n    Dim header_name             As String\n    \nOn Error GoTo myerr:\n    displayOFF\n    Set sht = ThisWorkbook.ActiveSheet\n    '|13f||fffd||ad65||52a||fffd||fffd||fffd||fffd||fffd||fffd||427||fffd||fffd||fffd||fffd|\n    If Target.Row < delegate_start_row Then Exit Sub\n    '|461||fffd||fffd||1f5||fffd||fffd||fffd||fffd||fffd||52a||fffd||fffd||fffd||fffd||fffd||fffd|\n    If Target.count > 1 Then Exit Sub\n    '|fffd||436||fffd||fffd||fffd||427||fffd||fffd|\n    If Verify_Blank_Row(sht, Target.Row) = True Then Exit Sub\n    \n    header_name = Get_Header_Name(sht, Target.Column)\n    sht.Range(Target.Address).Interior.ColorIndex = 0\n'    str_mr = \"\"\n    str_fun_name = Get_In_Macro_Name(header_name)\n\n    If str_fun_name <> \"\" Then\n        str_value = Trim(sht.Range(Target.Address).Value)\n        result = Application.Run(str_fun_name, sht, Target, str_value)\n        If result = False Then\n            sht.Range(Target.Address).Interior.ColorIndex = 3\n        End If\n    End If\n\n    displayON\n    Exit Sub\nmyerr:\n    displayON\nEnd Sub\n\n\nPrivate Sub Worksheet_SelectionChange(ByVal Target As Range)\n    Dim header_name As String\n    Dim sht As Worksheet\n    Dim result As String\n\nOn Error GoTo myerr:\n    Set sht = ThisWorkbook.ActiveSheet\n    header_name = Get_Header_Name(sht, Target.Column)\n    \n    Set sht = ThisWorkbook.ActiveSheet\n    '|13f||fffd||ad65||52a||fffd||fffd||fffd||fffd||fffd||fffd||427||fffd||fffd||fffd||fffd|\n    If Target.Row < delegate_start_row Then Exit Sub\n    '|461||fffd||fffd||1f5||fffd||fffd||fffd||fffd||fffd||52a||fffd||fffd||fffd||fffd||fffd||fffd|\n    If Target.count > 1 Then Exit Sub\n    '|fffd||436||fffd||fffd||fffd||427||fffd||fffd|\n    If Verify_Blank_Row(sht, Target.Row) = True Then Exit Sub\n    \n\n    Target.Validation.Delete\n\n    '[|5a4||fffd||fffd||fffd||fffd||fffd||fffd|] |fffd||fffd||fffd||fffd||fffd||fffd||fffd||431||fffd|\n    If header_name = Get_in_CN_Header_Name(\"In_Certificate_Type\") Then\n        With Target.Validation\n            .Delete\n            .Add Type:=xlValidateList, Formula1:=Get_Drop_list(\"A\")\n        End With\n    End If\n\n    '[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|] |fffd||fffd||fffd||fffd||fffd||fffd||fffd||431||fffd|\n    If header_name = Get_in_CN_Header_Name(\"In_Bank_Type\") Then\n        With Target.Validation\n            .Delete\n            .Add Type:=xlValidateList, Formula1:=Get_Drop_list(\"B\")\n        End With\n    End If\n\n    '[|fffd||fffd||fffd||fffd||fffd||fffd|] |fffd||fffd||fffd||fffd||fffd||fffd||fffd||431||fffd|\n    If header_name = Get_in_CN_Header_Name(\"In_Working_System\") Then\n        With Target.Validation\n            .Delete\n            .Add Type:=xlValidateList, Formula1:=Get_Drop_list(\"C\")\n        End With\n    End If\n\n    '[|fffd||1f7||fffd||43d|] |fffd||fffd||fffd||fffd||fffd||fffd||fffd||431||fffd|\n    If header_name = Get_in_CN_Header_Name(\"In_Whether_to_Pay\") Then\n        With Target.Validation\n            .Delete\n            .Add Type:=xlValidateList, Formula1:=Get_Drop_list(\"D\")\n        End With\n    End If\n\n    '[|fffd||1f7||fffd||2f0|] |fffd||fffd||fffd||fffd||fffd||fffd||fffd||431||fffd|\n    If header_name = Get_in_CN_Header_Name(\"In_Whether_to_Tax\") Then\n        With Target.Validation\n            .Delete\n            .Add Type:=xlValidateList, Formula1:=Get_Drop_list(\"E\")\n        End With\n    End If\n\n    '[|fffd||fffd||3bb|] |fffd||fffd||fffd||fffd||fffd||fffd||fffd||431||fffd|\n    If header_name = Get_in_CN_Header_Name(\"In_Work_Position_Type\") Then\n        With Target.Validation\n            .Delete\n            .Add Type:=xlValidateList, Formula1:=Get_Drop_list(\"H\")\n        End With\n    End If\n\n     '[|fffd||1f7||fffd||fffd||fffd||fffd||fffd||16e|] |fffd||fffd||fffd||fffd||fffd||fffd||fffd||431||fffd|\n    If header_name = Get_in_CN_Header_Name(\"In_Whether_Children\") Then\n        With Target.Validation\n            .Delete\n            .Add Type:=xlValidateList, Formula1:=Get_Drop_list(\"I\")\n        End With\n    End If\n    \n    '[|fffd||fffd||fffd||fffd||fffd||fffd||fffd|] |fffd||fffd||fffd||fffd||fffd||fffd||fffd||431||fffd|\n    If header_name = Get_in_CN_Header_Name(\"In_Outsourcing_Type\") Then\n        With Target.Validation\n            .Delete\n            .Add Type:=xlValidateList, Formula1:=Get_Drop_list(\"G\")\n        End With\n    End If\n\n    '[|22b||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5fc|] |fffd||fffd||fffd||fffd||fffd||fffd||fffd||431||fffd|\n    If header_name = Get_in_CN_Header_Name(\"In_National_Welfare_Standards\") Then\n        Dim city_column As Long\n        Dim city_name As String\n\n        city_column = Get_Header_Column(sht, Get_in_CN_Header_Name(\"In_City_Name\"))\n        city_name = Trim(sht.Cells(Target.Row, city_column).Value)\n        result = Get_National_Welfare_Standards_Drop_list(city_name)\n        If result <> \"\" And city_name <> \"\" Then\n            With Target.Validation\n                .Delete\n                .Add Type:=xlValidateList, Formula1:=result\n            End With\n        End If\n    End If\n    \n    '[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|]\n    If header_name = Get_in_CN_Header_Name(\"In_Labor_Type\") Then\n        With Target.Validation\n            .Delete\n            .Add Type:=xlValidateList, Formula1:=Get_Drop_list(\"K\")\n        End With\n    End If\n    \n    \n    '[|fffd||2fb||fffd||fffd||fffd||fffd||fffd||fffd||fffd|]|fffd||fffd||fffd||fffd||fffd||fffd||fffd||431||fffd|\n    If header_name = Get_in_CN_Header_Name(\"In_Account_City_Name\") Then\n        Dim province_column As Long\n        Dim province_name As String\n\n        province_column = Get_Header_Column(sht, Get_in_CN_Header_Name(\"In_Account_Province_Name\"))\n        If province_column <> 0 Then\n            province_name = Trim(sht.Cells(Target.Row, province_column).Value)\n            result = Get_Province_City_List(province_name)\n            If result <> \"\" And province_name <> \"\" Then\n                With Target.Validation\n                    .Delete\n                    .Add Type:=xlValidateList, Formula1:=result\n                End With\n            End If\n        End If\n    End If\n    \n     '[|fffd||1f7||fffd||fffd||fffd||3f5||531||fffd||fffd|]|fffd||fffd||fffd||fffd||fffd||fffd||fffd||431||fffd|\n    If header_name = Get_in_CN_Header_Name(\"In_Whether_Employee\") Then\n        With Target.Validation\n            .Delete\n            .Add Type:=xlValidateList, Formula1:=Get_Drop_list(\"L\")\n        End With\n    End If\n    \n    '[|fffd||fffd||5b0||fffd||739||374||fffd||4b5||fffd||fffd||fffd||fffd|]|fffd||fffd||fffd||fffd||fffd||fffd||fffd||431||fffd|\n    If header_name = Get_in_CN_Header_Name(\"In_SGCY_Type\") Then\n        With Target.Validation\n            .Delete\n            .Add Type:=xlValidateList, Formula1:=Get_Drop_list(\"M\")\n        End With\n    End If\n    \n     '[|fffd||fffd||531||fffd||fffd||fffd||fffd|]|fffd||fffd||fffd||fffd||fffd||fffd||fffd||431||fffd|\n    If header_name = Get_in_CN_Header_Name(\"In_RY_Type\") Then\n        Dim type_column As Long\n        Dim type_name As String\n\n        type_column = Get_Header_Column(sht, Get_in_CN_Header_Name(\"In_SGCY_Type\"))\n        type_name = Trim(sht.Cells(Target.Row, type_column).Value)\n        If InStr(type_name, Get_CN_Value(\"emp_type_guyuan\")) > 0 Then\n            With Target.Validation\n                .Delete\n                .Add Type:=xlValidateList, Formula1:=Get_Drop_list(\"N\")\n            End With\n        End If\n        If InStr(type_name, Get_CN_Value(\"emp_type_feiguyuan\")) > 0 Then\n            With Target.Validation\n                .Delete\n                .Add Type:=xlValidateList, Formula1:=Get_Drop_list(\"O\")\n            End With\n        End If\n    End If\n\n    displayON\n    Exit Sub\nmyerr:\n    displayON\n    Call Protect_sht(sht)\nEnd Sub\n\n\n\nAttribute VB_Name = \"Sheet4\"\nAttribute VB_Base = \"0{00020820-0000-0000-C000-000000000046}\"\nAttribute VB_GlobalNameSpace = False\nAttribute VB_Creatable = False\nAttribute VB_PredeclaredId = True\nAttribute VB_Exposed = True\nAttribute VB_TemplateDerived = False\nAttribute VB_Customizable = True\nAttribute VB_Name = \"Sheet5\"\nAttribute VB_Base = \"0{00020820-0000-0000-C000-000000000046}\"\nAttribute VB_GlobalNameSpace = False\nAttribute VB_Creatable = False\nAttribute VB_PredeclaredId = True\nAttribute VB_Exposed = True\nAttribute VB_TemplateDerived = False\nAttribute VB_Customizable = True\nAttribute VB_Name = \"Sheet6\"\nAttribute VB_Base = \"0{00020820-0000-0000-C000-000000000046}\"\nAttribute VB_GlobalNameSpace = False\nAttribute VB_Creatable = False\nAttribute VB_PredeclaredId = True\nAttribute VB_Exposed = True\nAttribute VB_TemplateDerived = False\nAttribute VB_Customizable = True\nPrivate Sub Worksheet_Change(ByVal Target As Range)\n    Dim str_fun_name            As String\n    Dim sht                     As Worksheet\n    Dim str_value               As String\n    Dim result                  As Boolean\n    Dim header_name             As String\n    \nOn Error GoTo myerr:\n    displayOFF\n    Set sht = ThisWorkbook.ActiveSheet\n    \n    If Target.Row < out_start_row Then Exit Sub\n    If Target.count > 1 Then Exit Sub\n    If Verify_Blank_Row(sht, Target.Row) = True Then Exit Sub\n\n'    str_mr = \"\"\n    sht.Range(Target.Address).Interior.ColorIndex = 0\n    header_name = Get_Out_Header_Name(sht, Target.Column)\n    str_fun_name = Get_Out_Macro_Name(header_name)\n    If str_fun_name <> \"\" Then\n        str_value = Trim(sht.Range(Target.Address).Value)\n        result = Application.Run(str_fun_name, sht, Target, str_value)\n        If result = False Then\n            sht.Range(Target.Address).Interior.ColorIndex = 3\n        End If\n    End If\n        \n    displayON\n    Exit Sub\nmyerr:\n    displayON\nEnd Sub\n\n\nPrivate Sub Worksheet_SelectionChange(ByVal Target As Range)\n    Dim header_name As String\n    Dim sht As Worksheet\n\nOn Error GoTo myerr:\n    displayOFF\n    Set sht = ThisWorkbook.ActiveSheet\n    header_name = Get_Out_Header_Name(sht, Target.Column)\n\n    If Target.Row < out_start_row Then Exit Sub\n    If Target.count > 1 Then Exit Sub\n    If Verify_Blank_Row(sht, Target.Row) = True Then Exit Sub\n\n    Target.Validation.Delete\n    If header_name = Get_out_CN_Header_Name(\"Out_Leave_Reason\") Then\n        Dim city_column As Long\n        Dim city_name As String\n\n        city_column = Get_Header_Column(sht, Get_out_CN_Header_Name(\"Out_Welfare_Place\"))\n        city_name = Trim(sht.Cells(Target.Row, city_column).Value)\n\n        If city_name = Get_CN_Value(\"city_beijing\") Then '|fffd||fffd||fffd||fffd|\n            With Target.Validation\n                .Delete\n                .Add Type:=xlValidateList, Formula1:=Get_Drop_list(\"J\")\n            End With\n        Else   '|fffd||1f1||fffd||fffd||fffd|\n            With Target.Validation\n                .Delete\n                .Add Type:=xlValidateList, Formula1:=Get_Drop_list(\"F\")\n            End With\n        End If\n    End If\n\n    displayON\n    Exit Sub\nmyerr:\n    displayON\n    Call Protect_sht(sht)\n\nEnd Sub\n\nAttribute VB_Name = \"Sheet7\"\nAttribute VB_Base = \"0{00020820-0000-0000-C000-000000000046}\"\nAttribute VB_GlobalNameSpace = False\nAttribute VB_Creatable = False\nAttribute VB_PredeclaredId = True\nAttribute VB_Exposed = True\nAttribute VB_TemplateDerived = False\nAttribute VB_Customizable = True\nAttribute VB_Name = \"Sheet8\"\nAttribute VB_Base = \"0{00020820-0000-0000-C000-000000000046}\"\nAttribute VB_GlobalNameSpace = False\nAttribute VB_Creatable = False\nAttribute VB_PredeclaredId = True\nAttribute VB_Exposed = True\nAttribute VB_TemplateDerived = False\nAttribute VB_Customizable = True\nAttribute VB_Name = \"Sheet9\"\nAttribute VB_Base = \"0{00020820-0000-0000-C000-000000000046}\"\nAttribute VB_GlobalNameSpace = False\nAttribute VB_Creatable = False\nAttribute VB_PredeclaredId = True\nAttribute VB_Exposed = True\nAttribute VB_TemplateDerived = False\nAttribute VB_Customizable = True\nAttribute VB_Name = \"ThisWorkbook\"\nAttribute VB_Base = \"0{00020819-0000-0000-C000-000000000046}\"\nAttribute VB_GlobalNameSpace = False\nAttribute VB_Creatable = False\nAttribute VB_PredeclaredId = True\nAttribute VB_Exposed = True\nAttribute VB_TemplateDerived = False\nAttribute VB_Customizable = True\nPrivate Sub Workbook_BeforeSave(ByVal SaveAsUI As Boolean, Cancel As Boolean)\nOn Error GoTo myerr:\n    Dim result As Boolean\n    result = Validate_All_Data\n    If result = True Then\n        ThisWorkbook.Sheets(\"EN_CN_Mapping\").Range(\"D2\") = \"False\"\n    Else\n        ThisWorkbook.Sheets(\"EN_CN_Mapping\").Range(\"D2\") = \"True\"\n    End If\n    Exit Sub\nmyerr:\n    protect_workbook_structure\nEnd Sub\n\n\n\n\nAttribute VB_Name = \"VersonControl\"\n\nPublic Const verson_sheetname                   As String = \"Version_Control\"\nPublic Const str_verson                         As String = \"1\"\nPublic Const str_password                       As String = \"Password01\"\n\n\n\n\n\n'Function Get_Verson()\n'    Get_Verson = str_verson\n'End Function\n\n\n\n\nSub aaa()\nDim Msg, Style, Title, Help, Ctxt, Response, MyString\nMsg = \"Do you want to continue ?\"  '|fffd||fffd||fffd||fffd||fffd||fffd||3e2||fffd||131||fffd|\nStyle = vbYesNo + vbCritical + vbDefaultButton2    ' |fffd||fffd||fffd||5c34||165|\nTitle = \"MsgBox Demonstration\"    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||131||fffd|\nHelp = \"DEMO.HLP\"    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||13c||fffd|\nCtxt = 1000    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|\nResponse = MsgBox(Msg, Style, Title, Help, Ctxt)\nIf Response = vbYes Then    ' |fffd||fb||fffd||fffd||fffd||fffd||a1||fffd||fffd||1e1||fffd|\n    MyString = \"Yes\"    ' |fffd||fffd||fffd||133||fffd||fffd||fffd||fffd|\nElse    ' |fffd||fb||fffd||fffd||fffd||fffd||a1||fffd||fffd||fffd|\n    MyString = \"No\"    ' |fffd||fffd||fffd||133||fffd||fffd||fffd||fffd|\nEnd If\nEnd Sub\nAttribute VB_Name = \"util\"\nOption Explicit\nOption Base 1\n\n\n\nPublic str_mr As String\nPublic Dic_city As Object\nPublic Const cn_en_sheetname            As String = \"EN_CN_Mapping\"\nPublic Const macro_mapping_sheetname    As String = \"Macro_Mapping\"\nPublic Const drop_list_sheetname        As String = \"Drop_List\"\nPublic Const delegate_start_row         As Long = 4    '|fffd||fffd||5b0||fffd||fffd||2bc||fffd||fffd|\nPublic Const send_start_row             As Long = 4    '|fffd||fffd||5b0||fffd||fffd||2bc||fffd||fffd|\nPublic Const out_start_row              As Long = 2    '|fffd||fffd||5b0||fffd||fffd||2bc||fffd||fffd|\n\n'''''''''''''''''''''''''' System Utils '''''''''''''''''''''''''''\n\n'allow alerts window display and update screen\nFunction displayON()\n    'Application.DisplayAlerts = True\n    'Application.ScreenUpdating = True\nEnd Function\n\n\n'don't allow alerts window display, or update screen\nFunction displayOFF()\n    'Application.DisplayAlerts = False\n    'Application.ScreenUpdating = False\nEnd Function\n\nFunction unifiedFormat(in_str As String)\n    Dim str As String\n    str = in_str\n    str = UCase(str)\n    str = Replace(str, \" \", \"\")\n    str = Replace(str, Chr(10), \"\") 'remove change line\n    str = Replace(str, \"_\", \"\")\n    str = Replace(str, \"-\", \"\")\n    str = Replace(str, \"|fffd|C\", \"\")\n    str = Replace(str, \";\", \"\")\n    str = Replace(str, \"(\", \"\")\n    str = Replace(str, \")\", \"\")\n    str = Replace(str, \"%\", \"\")\n    str = Replace(str, \".\", \"\")\n    str = Replace(str, \"/\", \"\")\n    str = Replace(str, \"*\", \"\")\n    unifiedFormat = str\nEnd Function\n\n\n'''''''''''''''''''''''''' Date Utils '''''''''''''''''''''''''''\n\n'Format Date to String with format \"DD/MM/YYYY\",return empty or a String\nFunction formatDateToString(in_date) As String\n\n    formatDateToString = \"\"\n    \n    If IsDate(in_date) Then\n        formatDateToString = Format(in_date, \"YYYY/MM/DD\")\n    End If\n    \nEnd Function\n\n\n'Format String with format \"DD/MM/YYYY\" to Date,return empty or a date\nFunction formatStringToDate(in_str As String)\n    \n    formatStringToDate = \"\"\n    \n    If IsDate(in_str) Then\n        formatStringToDate = CDate(Format(in_str, \"YYYY/MM/DD\"))\n    End If\n    \nEnd Function\n\n'''''''''''''''''''''''''' Worksheet Utils ''''''''''''''''''''''''''\n\n'Get last row of Column N in a Worksheet\nFunction getLastValidRow(in_ws As Worksheet, in_col As String)\n    getLastValidRow = in_ws.Cells(in_ws.Rows.count, in_col).End(xlUp).Row\nEnd Function\n\n\n'Get last row of Row 2 in a Worksheet\nFunction getLastValidColumn(in_ws As Worksheet, in_row As Long)\n    getLastValidColumn = in_ws.Cells(in_row, in_ws.Columns.count).End(xlToLeft).Column\nEnd Function\n\n'Cancel Filter / Cancel Row Hidden / Cancel Column Hidden\nFunction CancelHiddenRowsandColumns(ByRef sht As Worksheet)\n    If sht.AutoFilterMode Then sht.AutoFilterMode = False\n    sht.Rows.EntireRow.Hidden = False\n    sht.Columns.EntireColumn.Hidden = False\nEnd Function\n\n\n'Whether the content of sheet is empty\nFunction isSheetBlank(sht As Worksheet) As Boolean\n\n    If Application.CountA(sht.UsedRange.Cells) = 0 Then\n        isSheetBlank = True\n    Else\n        isSheetBlank = False\n    End If\n    \nEnd Function\n\n\n'Whether a Sheet exist in a WorkBook\nFunction isSheetExist(in_wb As Workbook, in_ws_name As String)\n    Dim wb          As Workbook\n    Dim ws_name     As String\n    Dim i           As Long\n    \n    Set wb = in_wb\n    ws_name = in_ws_name\n    isSheetExist = False\n    \n    For i = 1 To wb.Worksheets.count\n        If unifiedFormat(wb.Worksheets(i).Name) = unifiedFormat(ws_name) Then\n            isSheetExist = True\n            Exit For\n        End If\n    Next i\nEnd Function\n\n\n'Get first non-blank Sheet name in a WorkBook\nFunction getNonBlankSheetName(wb As Workbook) As String\n    Dim sht As Worksheet\n    \n    For Each sht In wb.Sheets\n        If Application.CountA(sht.UsedRange.Cells) <> 0 Then\n            getNonBlankSheetName = sht.Name\n            Exit Function\n        End If\n    Next\n    \n    getNonBlankSheetName = \"All Sheets is blank\"\nEnd Function\n\n'get sheet.Column according to column number, e.g: 1->A  2->B ...\n\nFunction NumToCol(PureNum As Long) As String\n    If PureNum Mod 26 = 0 Then\n        NumToCol = VBA.IIf(PureNum \\ 26 = 1, \"\", VBA.Chr(PureNum \\ 26 + 63)) & \"Z\"\n    Else\n        NumToCol = VBA.IIf(PureNum \\ 26 = 0, \"\", Chr(PureNum \\ 26 + 64)) & Chr(PureNum Mod 26 + 64)\n    End If\nEnd Function\n\n\n'get column number according to sheet.Column, e.g: A->1  B->2 ...\n\nFunction GetColumnNum(ColumnName As String) As Integer\n    Dim result As Integer, First As Integer, Last As Integer\n    result = 1\n    If Trim(ColumnName) <> \"\" Then\n        If Len(ColumnName) = 1 Then\n            result = Asc(UCase(ColumnName)) - 64\n        ElseIf Len(ColumnName) = 2 Then\n            If UCase(ColumnName) > \"IV\" Then ColumnName = \"IV\"\n            First = Asc(UCase(Left(ColumnName, 1))) - 64\n            Last = Asc(UCase(Right(ColumnName, 1))) - 64\n            result = First * 26 + Last\n        End If\n    End If\n    GetColumnNum = result\nEnd Function\n\n\nFunction Alert_Msg(in_msg As String)\n    If str_mr <> \"mr\" Then\n        MsgBox (in_msg)\n    End If\nEnd Function\n\n\n\n'|fffd||fffd||5a4||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|\nFunction Date_validation(str As String) As Boolean\n    If InStr(str, Get_CN_Value(\"year\")) > 0 Or InStr(str, Get_CN_Value(\"month\")) > 0 Or InStr(str, Get_CN_Value(\"day\")) > 0 Then\n        Date_validation = False\n    Else\n        Date_validation = True\n    End If\nEnd Function\n\n'|fffd||fffd||5a4||fffd||fffd||fffd||43f||fffd||fffd||17a||fffd||fffd||fffd||427||fffd||fffd|\nFunction BankID_validation(str As String) As Boolean\n   \nEnd Function\n\n'|fffd||fffd||5a4||fffd||fffd||fffd||fffd||5a4||fffd||fffd||fffd||fffd||427||fffd||fffd|\nFunction ID_validation(str As String) As Boolean\n    Dim objRegEx As Object\n    Dim objMH\n    Set objRegEx = CreateObject(\"vbscript.regexp\")\n    objRegEx.Pattern = \"(^[1-9]\\d{5}(18|19|([23]\\d))\\d{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\\d{3}[0-9X]$)\"\n    Set objMH = objRegEx.Execute(str)\n    If objMH.count = 0 Then\n        ID_validation = False\n    Else\n        ID_validation = True\n    End If\nEnd Function\n\n\n'|fffd||fffd||5a4||fffd||2bc||fffd||fffd||fffd||5b7||fffd||fffd||427||fffd||fffd|\nFunction Mail_validation(str As String) As Boolean\n    Dim objRegEx As Object\n    Dim objMH\n    Set objRegEx = CreateObject(\"vbscript.regexp\")\n    objRegEx.Pattern = \"^\\w+([-.]\\w+)*@\\w+([-.]\\w+)*\\.\\w{2,6}$\"\n    Set objMH = objRegEx.Execute(str)\n    If objMH.count = 0 Then\n        Mail_validation = False\n    Else\n        Mail_validation = True\n    End If\nEnd Function\n\n'|fffd||fffd||5a4||fffd||7ef0||fffd||fffd||fffd||fffd||427||fffd||fffd|\nFunction Telephone_validation(str As String) As Boolean\n    Dim objRegEx As Object\n    Dim objMH\n    Set objRegEx = CreateObject(\"vbscript.regexp\")\n    objRegEx.Pattern = \"^\\d{3,4}\\-\\d{7,8}$\"\n    Set objMH = objRegEx.Execute(str)\n    If objMH.count = 0 Then\n        Telephone_validation = False\n    Else\n        Telephone_validation = True\n    End If\nEnd Function\n\n'|fffd||fffd||5a4||fffd||5bb||fffd||fffd||fffd||fffd||fffd||427||fffd||fffd|\nFunction Phone_validation(str As String) As Boolean\n    Dim objRegEx As Object\n    Dim objMH\n    Set objRegEx = CreateObject(\"vbscript.regexp\")\n    objRegEx.Pattern = \"((1[0-9]{10})$)\"\n    Set objMH = objRegEx.Execute(str)\n    If objMH.count = 0 Then\n        Phone_validation = False\n    Else\n        Phone_validation = True\n    End If\nEnd Function\n\n'|fffd||fffd||5a4||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||427||fffd||fffd|\nFunction Postal_Code_validation(str As String) As Boolean\n    Dim objRegEx As Object\n    Dim objMH\n    Set objRegEx = CreateObject(\"vbscript.regexp\")\n    objRegEx.Pattern = \"(^\\d{6}$)\"\n    Set objMH = objRegEx.Execute(str)\n    If objMH.count = 0 Then\n        Postal_Code_validation = False\n    Else\n        Postal_Code_validation = True\n    End If\nEnd Function\n\n'|fffd||fffd||5a4||fffd||fffd||fffd||fffd|\nFunction Chinese_validation(str As String) As Boolean\n    Dim objRegEx As Object\n    Dim objMH\n    Dim sub_str  As String\n    Dim index    As Long\n    \n    Set objRegEx = CreateObject(\"vbscript.regexp\")\n    objRegEx.Pattern = \"[\\u4e00-\\u9fa5]\"\n    \n\n    For index = 1 To Len(str)\n        sub_str = Mid(str, index, 1)\n        Set objMH = objRegEx.Execute(sub_str)\n        If objMH.count = 0 Then\n            Chinese_validation = False\n            Exit Function\n        End If\n    Next\n    Chinese_validation = True\nEnd Function\n\n\n'|fffd||fffd||221||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||43a||fffd|\nFunction Get_Header_Column(sht As Worksheet, header_name As String)\n    Dim index As Long\n    Dim count As Long\n    Dim max_col As Long\n    Dim col_num As Long\n    Dim str1_value As String\n    Dim str2_value As String\n    \n    Dim index_col As Long\n    Dim count_col As Long\n    Dim index_row As Long\n    Dim count_row As Long\n    \n    \n    max_col = 0\n    For index = 1 To delegate_start_row - 1\n        col_num = getLastValidColumn(sht, index)\n        If max_col < col_num Then\n            max_col = col_num\n        End If\n    Next\n    \n    For index_col = 1 To max_col\n        For index_row = delegate_start_row - 1 To 1 Step -1\n            str1_value = unifiedFormat(sht.Cells(index_row, index_col).Value)\n            If unifiedFormat(header_name) = str1_value Then\n                Get_Header_Column = index_col\n                Exit Function\n            End If\n            \n        Next\n    Next\n    \n    Get_Header_Column = 0\n    \nEnd Function\n\n\n'|fffd||fffd||fffd||fffd||fffd||43a||17b||fffd||221||fffd||fffd||fffd||fffd|\nFunction Get_Header_Name(sht As Worksheet, col_num As Long)\n    Dim index As Long\n    Dim count As Long\n\n    Dim str1_value As String\n    Dim str2_value As String\n\n    For index = delegate_start_row - 1 To 1 Step -1\n        str1_value = unifiedFormat(sht.Cells(index, col_num).Value)\n        If str1_value <> \"\" Then\n            Get_Header_Name = str1_value\n            Exit Function\n        End If\n    Next\n    \n    Get_Header_Name = \"\"\n    \nEnd Function\n\n'|fffd||fffd||fffd||fffd||fffd||43a||17b||fffd||221||fffd||fffd||fffd||fffd|\nFunction Get_Out_Header_Name(sht As Worksheet, col_num As Long)\n    Dim str_value As String\n    str_value = unifiedFormat(sht.Cells(out_start_row - 1, col_num).Value)\n    Get_Out_Header_Name = str_value\nEnd Function\n\n\n'|fffd||fffd||221||fffd||fffd||5b0||fffd||fffd||fffd||fffd||fffd||fffd||5a4||fffd||fffd||fffd||fffd||fffd||fffd|\nFunction Get_In_Macro_Name(header_name As String)\n    Dim sht As Worksheet\n    Dim index As Long\n    Dim count As Long\n    Dim str_value As String\n    \n    \n    Set sht = ThisWorkbook.Sheets(macro_mapping_sheetname)\n    count = getLastValidRow(sht, \"A\")\n    \n    For index = 3 To count\n        str_value = unifiedFormat(sht.Range(\"A\" & index).Value)\n        If str_value = unifiedFormat(header_name) Then\n            Get_In_Macro_Name = Trim(sht.Range(\"D\" & index).Value)\n            Exit Function\n        End If\n    Next\n    \n    Get_In_Macro_Name = \"\"\n    \nEnd Function\n\n\n'|fffd||fffd||221||fffd||fffd||5b0||fffd||fffd||fffd||fffd||fffd||fffd||5a4||fffd||fffd||fffd||fffd||fffd||fffd|\nFunction Get_Out_Macro_Name(header_name As String)\n    Dim sht As Worksheet\n    Dim index As Long\n    Dim count As Long\n    Dim str_value As String\n    \n    \n    Set sht = ThisWorkbook.Sheets(macro_mapping_sheetname)\n    count = getLastValidRow(sht, \"F\")\n    \n    For index = out_start_row To count\n        str_value = unifiedFormat(sht.Range(\"F\" & index).Value)\n        If str_value = unifiedFormat(header_name) Then\n            Get_Out_Macro_Name = Trim(sht.Range(\"G\" & index).Value)\n            Exit Function\n        End If\n    Next\n    \n    Get_Out_Macro_Name = \"\"\n    \nEnd Function\n\n'|fffd||436||3f8||fffd||fffd||fffd||fffd||fffd|\nFunction Get_Welfare_Place(str_value As String) As Boolean\n    Dim sht As Worksheet\n    Dim index_row As Long\n    Dim index_col As Long\n    Dim count_row As Long\n    Dim count_col As Long\n    Dim item\n    Dim Dic_city As Object\n    Dim str_city As String\n    \n    Set Dic_city = CreateObject(\"scripting.dictionary\")\n    Dic_city.RemoveAll\n    \n    Set sht = ThisWorkbook.Sheets(\"City_Mapping\")\n    \n    count_row = getLastValidRow(sht, \"B\")\n    \n    For index_row = 2 To count_row\n        count_col = getLastValidColumn(sht, index_row)\n        For index_col = 3 To count_col\n            str_city = Trim(sht.Cells(index_row, index_col))\n            If Dic_city.exists(str_city) = False Then\n                Dic_city.Add str_city, str_city\n            End If\n        Next\n    Next\n    \n    If Dic_city.exists(str_value + Get_CN_Value(\"city\")) Or Dic_city.exists(str_value + Get_CN_Value(\"meng\")) Or Dic_city.exists(str_value + Get_CN_Value(\"place\")) Or Dic_city.exists(str_value + Get_CN_Value(\"zizhi\")) Then\n        Get_Welfare_Place = True\n        Exit Function\n    End If\n    Get_Welfare_Place = False\n    \nEnd Function\n\n\n\n'|fffd||fffd||221||fffd||fffd||fffd||fffd||fffd||431||fffd|\nFunction Get_City_List(str_value As String) As Boolean\n    Dim sht As Worksheet\n    Dim index_row As Long\n    Dim index_col As Long\n    Dim count_row As Long\n    Dim count_col As Long\n    Dim item\n    \n    Set sht = ThisWorkbook.Sheets(\"City_Mapping\")\n    \n    count_row = getLastValidRow(sht, \"B\")\n    \n    For index_row = 2 To count_row\n        count_col = getLastValidColumn(sht, index_row)\n        For index_col = 3 To count_col\n            If sht.Cells(index_row, index_col) = str_value Then\n                Get_City_List = True\n                Exit Function\n            End If\n        Next\n    Next\n    \n    Get_City_List = False\n    \nEnd Function\n\n'|fffd||fffd||221||2a1||fffd||fffd||fffd||431||fffd|\nFunction Get_Province_List(str_value As String) As Boolean\n    Dim sht As Worksheet\n    Dim index_row As Long\n    Dim index_col As Long\n    Dim count_row As Long\n    Dim count_col As Long\n    Dim item\n    \n    Set sht = ThisWorkbook.Sheets(\"City_Mapping\")\n    \n    count_row = getLastValidRow(sht, \"B\")\n    \n    For index_row = 2 To count_row\n        If sht.Range(\"B\" & index_row) = str_value Then\n            Get_Province_List = True\n            Exit Function\n        End If\n    Next\n    \n    Get_Province_List = False\n    \nEnd Function\n\n'|fffd||fffd||fffd||fffd||fffd||fffd||4e2||fffd||136||fffd||4e6||fffd||fffd||3f5||fffd||fffd||fffd||fffd||221||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|\nFunction Get_CN_Value(str As String)\n    Dim sht As Worksheet\n    Dim index As Long\n    Dim count As Long\n    \n    Set sht = ThisWorkbook.Sheets(cn_en_sheetname)\n    \n    count = getLastValidRow(sht, \"A\")\n    \n    For index = 2 To count\n        If Trim(sht.Range(\"A\" & index)) = str Then\n            Get_CN_Value = Trim(sht.Range(\"B\" & index))\n            Exit Function\n        End If\n    Next\n    Get_CN_Value = \"\"\nEnd Function\n\n'|fffd||436||3ff||fffd||fffd||fffd|\nFunction Verify_Blank_Row(sht As Worksheet, in_row As Long)\n    Dim index As Long\n    Dim count As Long\n    \n    count = getLastValidColumn(sht, in_row)\n    Verify_Blank_Row = True\n    \n    For index = 1 To count\n        If Trim(sht.Cells(in_row, index)) <> \"\" Then\n            Verify_Blank_Row = False\n            Exit Function\n        End If\n    Next\n    \nEnd Function\n\n'|fffd||fffd||fffd||fffd||fffd||fffd||4e2||fffd||13b||fffd||221||fffd||fffd||5b0||fffd||fffd||fffd||131||fffd||fffd||fffd|\nFunction Get_in_CN_Header_Name(str As String)\n    Dim index As Long\n    Dim count As Long\n    Dim sht As Worksheet\n    \n    Set sht = ThisWorkbook.Sheets(macro_mapping_sheetname)\n    \n    count = getLastValidRow(sht, \"A\")\n    \n    For index = 3 To count\n        If str = Trim(sht.Range(\"D\" & index)) Then\n            Get_in_CN_Header_Name = Trim(sht.Range(\"A\" & index))\n            Exit Function\n        End If\n    Next\n    Get_in_CN_Header_Name = \"\"\nEnd Function\n\n'|fffd||fffd||fffd||fffd||fffd||fffd||4e2||fffd||13b||fffd||221||fffd||fffd||5b0||fffd||fffd||fffd||131||fffd||fffd||fffd|\nFunction Get_out_CN_Header_Name(str As String)\n    Dim index As Long\n    Dim count As Long\n    Dim sht As Worksheet\n    \n    Set sht = ThisWorkbook.Sheets(macro_mapping_sheetname)\n    \n    count = getLastValidRow(sht, \"G\")\n    \n    For index = 3 To count\n        If str = Trim(sht.Range(\"G\" & index)) Then\n            Get_out_CN_Header_Name = Trim(sht.Range(\"F\" & index))\n            Exit Function\n        End If\n    Next\n    Get_out_CN_Header_Name = \"\"\nEnd Function\n\n'|fffd||fffd||221||fffd||fffd||fffd||fffd||fffd||431||fffd|\nFunction Get_Drop_list(in_col As String)\n    Dim sht As Worksheet\n    Dim index As Long\n    Dim count As Long\n    Dim result As String\n    \n    result = \"\"\n    Set sht = ThisWorkbook.Sheets(drop_list_sheetname)\n    \n    count = getLastValidRow(sht, in_col)\n    \n    For index = 2 To count\n        If result = \"\" Then\n            result = Trim(sht.Range(in_col & index))\n        Else\n            result = result + \",\" + Trim(sht.Range(in_col & index))\n        End If\n    Next\n    Get_Drop_list = result\n    \nEnd Function\n\n'|fffd||fffd||221||22b||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5fc||fffd||fffd||fffd||fffd||fffd||431||fffd|\nFunction Get_National_Welfare_Standards_Drop_list(in_str As String)\n    Dim sht As Worksheet\n    Dim index As Long\n    Dim count As Long\n    Dim result As String\n    \n    result = \"\"\n    Set sht = ThisWorkbook.Sheets(Get_CN_Value(\"national_welfare_standards_sheetname\"))\n    \n    count = getLastValidRow(sht, \"A\")\n    \n    For index = 2 To count\n        If InStr(Trim(sht.Range(\"A\" & index)), in_str) > 0 Then\n            If result = \"\" Then\n                result = Trim(sht.Range(\"A\" & index))\n            Else\n                result = result + \",\" + Trim(sht.Range(\"A\" & index))\n            End If\n        End If\n    Next\n    Get_National_Welfare_Standards_Drop_list = result\n    \nEnd Function\n\n'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|\nFunction Protect_sht(sht As Worksheet)\n   \n    sht.EnableSelection = xlUnlockedCells\nEnd Function\n\n'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1e79|\nFunction protect_workbook_structure()\n\nEnd Function\n\n'|221||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1e79|\nFunction unprotect_workbook_structure()\n\nEnd Function\n\n\nFunction Get_Province_City_List(province_name As String)\n    Dim sht As Worksheet\n    Dim index_row As Long\n    Dim count_row As Long\n    Dim index_col As Long\n    Dim count_col As Long\n    \n    Set sht = ThisWorkbook.Sheets(\"City_Mapping\")\n    \n    count_row = getLastValidRow(sht, \"B\")\n    Get_Province_City_List = \"\"\n    For index_row = 2 To count_row\n        If Trim(sht.Range(\"B\" & index_row)) = province_name Then\n            count_col = getLastValidColumn(sht, index_row)\n            For index_col = 3 To count_col\n                If Get_Province_City_List = \"\" Then\n                    Get_Province_City_List = Trim(sht.Cells(index_row, index_col))\n                Else\n                    Get_Province_City_List = Get_Province_City_List + \",\" + Trim(sht.Cells(index_row, index_col))\n                End If\n            Next\n            Exit Function\n        End If\n    Next\n    \nEnd Function\n\n\nSub test()\n    Dim sht As Worksheet\n    Set sht = ThisWorkbook.Sheets(2)\n    MsgBox (Get_Header_Column(sht, \"|fffd||fffd||5b0||fffd||739||374||fffd||4b5||fffd||fffd||fffd||fffd|\"))\nEnd Sub\n\n\n\n' InQuest injected base64 decoded content below this line ------\n' ,jwB\n", "ext_context": null, "ext_metadata": "File Size                       : 173 kB\nFile Modification Date/Time     : 2021:07:15 12:45:47+00:00\nFile Access Date/Time           : 2021:07:15 12:45:49+00:00\nFile Inode Change Date/Time     : 2021:07:15 12:45:47+00:00\nFile Permissions                : rw-rwxr--\nFile Type                       : FPX\nFile Type Extension             : fpx\nMIME Type                       : image/vnd.fpx\n", "ext_ocr": null, "file_type": "OLE", "first_seen": "Thu, 15 Jul 2021 12:45:44 GMT", "image": false, "inquest_alerts": [], "inquest_dfi_size": 513830, "last_inquest_dfi": "Thu, 15 Jul 2021 12:45:53 GMT", "last_inquest_featext": "Thu, 15 Jul 2021 12:46:18 GMT", "last_updated": "Thu, 15 Jul 2021 12:46:19 GMT", "len_code": 164957, "len_context": 0, "len_metadata": 508, "len_ocr": 0, "malware_label": "asmacro", "md5": "1dfa312edfbee1d4e6541cb683127669", "mime_type": "application/cdfv2", "sha1": "474a5d281ed38abdff104ed1999876b7bd7a77fd", "sha256": "21715e51081764228757b839a729facf0e0fe5f038c3ebeefec06ea9fd6182ad", "sha512": "4b463e972bc5b3b3c45fcd714eccf74b77ad560d1b73c45ee4fa4d23237f84a83737a97c87667a27f820c853cb1ff2920114d2eda578b735b0493ada4c1a746b", "size": 177152, "string_features": ["0{00020P819-", "-02608C4 D0BB4", "0Sheet10", ") > 0 Th", "= 0 The", "-\")0 The", "> 0 TheH", "((1[0-9]{10})$)", "11@, \"\",", "|11|12))", "111-D799", "14\\MSO.D", "`-\"(^[1-9", "1->A 2", "(1aI]{10}", "1e`, str", "1n62e69a76", "1p62e69a76", ":=1QDrop_", "1r62e69a76", "1Sheet11", "?1 Ste8p -", "1 To wb.", "1u62e69a76", "1w62e69a76", "(\"1&\"))x Or", "1y62e69a76", "2062e69a76", "2262e69a76", "2beij`ing\")", "2F62e69c40", "452EE1-E", "-4A50-8A@D7-121", "4Const c", "4Mapp@/w", "-5BFA-10", "5ObjectcEid", "5 Tel ephon", "@5ue(\"emp", "6}#2.0#0", "6@= This", "+[7DaK!R_]", "8|19|([2", "8city0_col", "8InAu ValidBRG", ":9 AACD7", "@9.C ells(#J.R", "9.e<xdHf", "+ \",\" + A", "A->1 B->2", "ab.Color", "@Acco0unt_", "a ccord", "account_name_incorrect$", "account_number_incorrect$", "account_province_name_incorrect", "ace(_ g)a'", "ActiveSheet%N`", "_Address", "Address)", "Add Ty@pe:=xl", "AgetLXast", "aIn_Co mpany", "Alert_Ms", "Alert_Msg", "Alert_`Msg (", "Alert_Msg (Get_CN_Value(\"give_salary_start_date_blank\"))", "Alert_Msg (Get_CN_Value(\"salary_start_date_blank\"))", "alerts w", "AllDataValidation", "AllDataValidation@", "AllDataValidation=96, 96, 1419, 612,", "_All_In_", "allow alerts window display and update screen", "AllowDeletingColumns\"", "AllowDeletingRows0", "AllowFiltering", "AllowFormattingCellsh", "AllowFormattingColumns<", "AllowFormattingRows", "AllowInsertingColumns}", "AllowInsertingHyperlinks 9`", "AllowInsertingRowsHw`", "AllowSortingK_`", "AllowUsingPivotTablesf", "all Prot", "All Sheets is blank", "a@)LongCw", "alse Or", "<> \"\" An>d", "andards_", "\\AppData", "Applica", "arget As", "AsDWheth", "ase_inco", "As Stri", "As Work", "As Works", "ataValid", "atch_sta", "ateDeriv", "atio_of_", "AutoFilterMode", "Avucture(", "BankID_validation", "bank_name_incorrect", "@Bas e 1", "base_column", "base_value", "BenefLit", "blank\"))", "book.ActO@b", "B ooleaD", "Bool@ean", "Boole an", "botok$*_B", "@@=b+(\"s", "B,= Trim", "Bustomi6z", "Bustomliz", "(ByVal T", "Call `jt", "Call Pjt", "Call protect_workbook_structure", "'Call u nprot", "Call unprotect_workbook_structure", "'Cancel", "Cancel Filter / Cancel Row Hidden / Cancel Column Hidden", "CancelHiddenRowsandColumns", "cate_Num", "cation.R", ".Cel8ls(", ".Cells(A", "certificate_number_blank$", "certificate_number_incorrect$", "certificate_type_blank$", "ce(sht A", "ce = Tru", "Chinese_validation", "cial_Ins", "city_beijing$", "city_co", "city_column", "City_Lis", "City_Mapping", "City_Nam", "city_name", "city_name_incorrect", "city_name_not_blank", "city_name = str_city", "city_pname", "city_shanghai", "city_shenzhen", "city_suzhou", "client_name_blank", "CMG=\"6C6E7103718F758F758F758F75\"", "cn_en_sheetname,,`", "CN_Value", "_c|ol7'D", "ColorIndex", ".ColorInhdex", "ColumnName", "ColumnNamew", "Column(s", "Columnsp9`", "CommandButton1|", "CommandButton1, 1, 0, MSForms, CommandButton", "commercial_insurance_start_date_should1", "company_name_blank$", "con`tent `+", "Contents", "contract_end_date_incorrect", "_contrac t_sta", "contract_start_date_incorrect", "coplumn", "correct\"", "correctNb", "count =", "count0 > 1", "count0v`", "CountA38`", "count_col", "count_delegate", "count_mapping", "count_row", "C:\\PROGRA~2\\COMMON~1\\MICROS~1\\VBA\\VBA7\\VBE7.DLL", "CreateObject", "Critical", "C:\\Users\\ZHUBEN~1.FES\\AppData\\Local\\Temp\\Excel8.0\\MSForms.exd", "#C:\\Wind", "C:\\Windows\\SysWOW64\\FM20.DLL", "C:\\Windows\\SysWOW64\\stdole2.tlb", "^\\d{3,4}\\-\\d{7,8}$", "]\\d{5}(1", "(^\\d{6}$)", "DataVali", "Date = F", "''''''''''''''''''''''''' Date Utils '''''''''''''''''''''''''''", "Date_val", "Date_validation", "DatOo o o ?", "dCre atabl", "declaration_date_incorrect$", "delegate_start_row", "DEMO.HLP'", "der_name", "Dic_city", "Dic _cityq", "Dim city_name As String", "Dim@ index", "Dim pro vince", "Dim repsult", "Di m sht", "Dim str_", "Dim str_city As String", "dispatch$", "Dispatch", "dispatch_end_date_blank", "dispatch_end_date_incorrect", "dispatch_end_date_should_blank$", "dispatch_start_date_blank", "dispatch_start_date_incorrect", "dispatch_start_date_should_blank$", "displayOFF", "displayON", "dis@playON", "d\\OFFICE", "'d on't", "don't allow alerts window display, or update screen", "Do you want to continue ?", "DPB=\"F4F6E99BF922FA22FA22\"", "Dprovinc", "DrawingObjects", "_Drop_li", "Drop_lis'", "Drop_lisDt(", "Drop_List", "Drop_Listr", "drop_list_sheetname", "e = \"All", "e(ByVal", "eet, Tar", "egate_st", "e = \"InD", "eleg@e_st art_r", "elephone", "elfare_S", "ells(Tar", "emp_column", "emp\\Exce0l8.0@e", "emp_name", "emp_type_feiguyuan$", "emp_type_guyuan", "EN~1.FES", "EnableSelectionah`", "EN_CN_Mapping", "EN_CN_Ma`pping", "End Function", "End If", "enefit_s", "enefit_S", "Enterprise_columnD(`", "enterprise_ratio_of_housing_fund_base_blank", "enterprise_ratio_of_housing_fund_blank$", "enterprise_ratio_of_housing_fund_incorrect$", "Enterprise_value", "EntireColumn", "EntireRow", "e = \"Out", "e_Reason", "er, e.g:", "Error G", "error_msg", "ers\\ZHUB", "ese_`d:$", "e = \"She", "e = \"She@et1\"", "e = \"She@et2\"", "e = \"She@et3\"", "e = \"She@et4\"", "e = \"She@et5\"", "e = \"She@et6\"", "e = \"She@et7\"", "e = \"She@et8\"", "e = \"She@et9\"", "es\") Or", "es (x86)", "et_Heade", "e = \"\" T@hen", "e = \"Thi", "et.Row,", "et, Targ", "e = \"uti", "e VB_Nam", "e = \"Ver", "ExecuteY", "Exit Fun", "Exit Fu nctio", "Exit Function", "Exit Fun ction", "Exp licit", "= False", "= False0 Or", "fare_Pla", "fare_sta", "+FFb+Fa<ls", "Filter /", "fit_End_", "flag_col", "flag_col%", "(\"flag_y", "flag_yes$", "floor_le", "floor_level", "(\"form(al_", "formal_outsourcing$", "formal_salary_incorrect", "formatDateToString", "formatStringToDate", "formatStringToDateL(`", "Formula1", "f str_va", "ft Share", "_Fu0nd_B", "Functio", "Function Get_Verson()", "fund_col", "fvend_?v", "fy_Blank", "/ {/ - G", "gangwei_blank", "gate_sta", "GC=\"7C7E6113619A629A6265\"", "gcy_type", "Get_City_List", "Get_City_Lists;`", "(Get_CN", "(Get_CND_V", "Get_CN_V", "Get_CN_Value", "'ge t col", "GetColumnNum", "Get_Drop_list", "Get first non-blank Sheet name in a WorkBook", "Get_Header_Column", "Get_Header_Column1", "Get_Header_Name", "= Get_i@n_CN_H", "Get_in_CN_Header_Name", "Get_In_Macro_Name", "getLast", "Get last row of Column N in a Worksheet", "Get last row of Row 2 in a Worksheet", "getLastValidColumn", "getLastValidRow", "Get_Nat", "Get_National_Welfare_Standards_Drop_list", "getNonBlankSheetName", "getNonBlankSheetNameu", "Get_out_CN_Header_Name", "Get_Out_Header_Name", "Get_Out_Header_Namez", "Get_Out_Macro_Name", "Get_Out_Macro_NameVf`", "Get_Province_City_List", "Get_Province_City_List_", "Get_Province_List", "Get_Province_ListLf`", "get.Row,", "get sheet.Column according to column number, e.g: 1->A 2->B ...", "Get_Verson = str_verson", "Get_Welfare_Place", "Get_Welfare_Placea", "g_fund_b", "g (Get_C", "ghai\")_%", "give_salary_start_date_incorrect$", "give_salary_start_date_should1$", "|GlobaBl", "|Global!", "G_not_bl", "Go To my", "GoTo mye", "gram Fil", "g\").Rang", "gs Exten", "g_sheetn", "H9Verify", "h&Bank<ID", "_Header_", "\"He ader_", "header_c", "Header_C1B", "header_column|]`", "header_name", "heetname", "heet, Ta", "HelpFile=\"\"", "her_Bene", "hire_date_blank", "hire_date_incorrect", "HKtr_funv_", "(\"housin", "housing_", "housing_fund_base_incorrect", "housing_fund_base_less1000$", "housing_fund_benefit_start_date_incorrect", "housing_fund_benefit_start_date_should_day1", "housing_fund_column", "hSub Pas", "ID=\"{2DAA9428-B1FB-4D12-ABCE-1796BACED362}\"", "id_carxd\")", "idRow(sh@t, \"A\"", "ID_validation", "ID_validationgl`", "ient_Nam", "ifiedFor", "If outso", "If str_value <> \"\" Then", "im city_", "im macro", "In_Account_City_Name", "In_Account_City_Name<@`", "In_Account_City_Name$", "In_Account_City_Name = False", "In_Account_Name", "In_Account_Number", "In_Account_NumberT|`", "In_Account_Province_Name", "In_Account_Province_Name$", "In_Bank_Name", "In_Bank_Type", "In_Bank_Type$", "In_Certificate_Number", "In_Certificate_Type", "In_Certificate_Type=", "In_City_Name", "In_City_Name$", "In_Commercial_Insurance_Date", "In_Company_Name", "In_Company_Name%", "In_Contract_End_Date", "In_Contract_End_Date#", "In_Contract_Start_Date", "incorprectd", "incorrec", "InDataValidation", "InDataValidation=160, 160, 1503, 620,", "In_Declaration_Date", "in_delegate_sheetname", "index_col", "index_delegate{", "indexEPX", "index_mapping:1`", "index_row", "In_Dispatch_End_Date", "In_Dispatch_Start_Date", "Individual_columnV6`", "individual_ratio_of_housing_fund_base_blank", "individual_ratio_of_housing_fund_blank$", "individual_ratio_of_housing_fund_incorrect$", "Individual_value$", "In_Enterprise_Ratio_of_Housing_Fund", "In_Enterprise_Ratio_of_Housing_Funds", "In_Formal_Salary", "In_Gang_Wei", "ingCE Di|m", "In_Give_Salary_Start_Date", "In_Give_Salary_Start_Date = False", "In_Hire_Date", "In_Housing_Fund_Base", "In_Housing_Fund_Base$", "In_Housing_Fund_Basem.`", "In_Housing_Fund_Benefit_Start_Date", "In_Housing_Fund_Benefit_Start_Date$", "In_Housing_Fund_Benefit_Start_DateG", "In_Individual_Ratio_of_Housing_Fund", "In_Labor_Contract_End_Date", "In_Labor_Contract_Start_Date", "In_Labor_Contract_Start_Dateo", "In_Labor_Type", "In_Labor_TypeR", "In_Mail_Address", "In_Mail_Addressch`", "\\(\"In_Na", "In_National_Welfare_Standards", "In_National_Welfare_Standardsv", "In_Outsourcing_Type", "In_Phone_Number", "In_Phone_NumberY", "In_Postal_Code", "In_Probation_End_Date", "In_Probation_End_Date`", "In_Probation_Salary", "In_Probation_Start_Date", "In_RY_Type", "In_RY_Type$", "In_RY_TypehT`", "In_Salary_Start_Date", "In_Salary_Start_Date = False", "in_send_sheetname", "In_SGCY_Type", "In_SGCY_Type$", "in_sgcy_type_blank$", "in_sht.U", "In_Social_Insurance_Base", "In_Social_Insurance_Benefit_Start_Date", "In_Social_Insurance_Benefit_Start_DateC7`", "In_Supplementary_Enterprise_Ratio_of_Housing_Fund", "In_Supplementary_Enterprise_Ratio_of_Housing_FundG", "In_Supplementary_Housing_Fund_Base", "In_Supplementary_Housing_Fund_Base$", "In_Supplementary_Individual_Ratio_of_Housing_Fund", "_Insuran", "In_Telephone_Number", ").Interi", "Interior;", "inue ?\"", "in_wbtR`", "In_Wheth", "In_Whether_Children", "In_Whether_Employee", "In_Whether_to_Pay", "In_Whether_to_Payy\"`", "In_Whether_to_Tax", "In_Worker_Name", "In_Worker_Name$", "In_Working_System", "In_Working_System^", "In_Work_Place", "In_Work_Position", "In_Work_Position_Type", "In_Work_Position_TypewN`", "in_ws_name", "in_ws_name( `", "ional_We", "ion NumT", "i%?/&S~0\"0", "I@sDate(", "IsDate(s", "IsNumeri", "IsN@umeric", "IsNumeric$*`", "isSheetBlank", "isSheetBlankS", "isSheetExist", "isSheetExistl", "isWorkbo", "ity_colu", "ividual_", "J!`{th f\"Q \"", "k.Account", "kedCells", "k.Sheets", "ksheet, Targe", "kz= getL", "L2pE157BH", "Labor_A)N", "labor_contract_end_date_blank", "labor_contract_start_date_blank", "labor_contract_start_date_incorrect", "LastVali:d", "lateDeri", "lay and", "l Basic", "{ld_d8ay1", "LEnpd If", "lert_Msg", "lfare_Pl", "lfare_PlBa", "lfare_St", "lication .Run(", "lls(Targ", "\\Local\\T", "LO@Leave_", "lp, Ctxt", "l_Salary", "ls(Targe", "lt@$IzRun(]I", "lue As S@tring)", "lue <> \"`\" The", "lue = \"\"` Then", "lumn).Va", "lVersonControl", "Macro_Mapping", "macro_mapping_sheetname", "mail_address_incorrect$", "Mail_validation", "mandButt on1,", "_mapping", "MDim re0sult", "\\Microso", "_m= _m'", "mn As Lo", "mployeenZ)", "MSForms", "MSFo@rms>", "MSFormsC", "MsgBox Demonstration'", "Msg(in_m<sgA", "myerrlv`", "MyString", "N0{00020819-0000-0000-C000-000000000046}", "N0{00020820-0000-0000-C000-000000000046}", "n_Accoun", "nAllDataValidation", "Name=\"VBAProject\"", "national_welfare_standards_blank$", "national_welfare_standards_sheetname$", "Nbook.\"S", "nce_City", "ncorrect", "ndards_s", "ndividua", "ndNumberA", "n_en_she", "n Error", "nInDataValidation", "N_Mappin", "n N in aC", "nOutDataValidation", "nP^olumnq1", "n(sht As", "nterpris", "ntract_e", "NumToCol", "nvoke_Fu", "objRegEx", "oCol(Pur", "ode(sht", "of Colum", ".Offset(", "ol).Valu e)", "o_mappin", "onal_wel", "on Expli", "oolean, @Cancel", "or.Color6I", "oreSave(@ByVal", "or GoTo", "or index", "orksheet", "ormula1:", "ormulasA", "o sheet.", "other_benefit_end_date_incorrect$", "other_benefit_end_date_lastday$", "oTo myerDr:", "Out_Certificate_Number", "Out_Certificate_NumberT", "Out_Client_Name", "out_data_sheetname", "OutDataValidation", "OutDataValidation=32, 32, 1355, 548,", "OutDataValidation5y`", "Out_Declaration_Date", "Out_Housing_Fund_Charge_End_Date", "Out_Housing_Fund_Charge_End_Date$", "Out_Housing_Fund_Charge_End_Date = false", "out_housing_fund_charge_end_date_incorrect$", "out_housing_fund_charge_end_date_should_lastday", "Out_Leave_Date", "Out_Leave_Date4", "out_leave_date_blank$", "out_leave_date_incorrect$", "Out_Leave_Reason", "Out_Leave_Reason$", "out_leave_reason_blank$", "out_leave_sheetname", "Out_Other_Benefit_End_Date", "Out_Social_Insurance_Charge_End_Date", "Out_Social_Insurance_Charge_End_Date = false", "out_social_insurance_charge_end_date_incorrect$", "out_social_insurance_charge_end_date_should_lastday", "Outsourc", "outsourcing_type_blank$", "outsouring_type_column", "outsouring_type_value", "out_start_rowdv`", "Out_Welfare_Place", "Out_Welfare_Place4", "out_welfare_place_blank", "out_welfare_place_incorrect", "Out_Worker_Name", "out_worker_name_blank", "ows\\SysW OW64\\", "o you wa", "P 16 .0 Ob", "Password", "Password01", "PasteAsvalue", "PasteAsvalueHk`", "PasteSpecial", ".Pattern", "Patterni", "pe\")L4Wit", "pe_value", "phone_number_blank$", "phone_number_incorrect$", "Phone_validation", "Phone_validationJ", "plateDer", "Postal_C", "postal_code_incorrect", "Postal_Code_validation", "Pr@edecla", "Pre decla", "probation_salary_incorrect$", "probation_start_date_incorrect$", "protect_", "Protect_sht", "protect_workbook_structure", "protect_workbook_structure)", "province$", "province_column", "province_name", "P@ublic", "PureNumW", "qonContrZo", "Q,o utsou1", "*\\R1*#253", "*\\R1*#386", "Ran0ge,", "Range, s", "rcial_In", "r_Column", "RemoveAll", "remove change lineange", "Replacef", "Response", "result =", "result_flagq", "resultur`", "\",return@ empty", "$*\\Rffff*2562e69a85", "RIf InSt@r(Trim", "ror_msg !", "?.Row2,I4).", "Roway, \"A", ".Row < d", "Row < ou", "_row To", "rrect\"))", "rt_date_", "rtifq8e_T ype\")|4Wi|thEO", "rt_Msg (G", "rxlUnloc", "S1Prtov@", "salary_c", "salary_col", "salary_start_date_incorrect", "salary_start_date_should1", "salary_value", "SaveAsUI", "Scenariosk", "s_columna", "(\"scriDpt", "scripting.dictionary$", "sedRange", "SelectionZ", "send_start_row@,`", "sgBox (f", "SGCY_pType?[?[?[g", "sg (Get_", "Sheet10=0, 0, 913, 364,", "Sheet10 P`", "Sheet1=192, 192, 1577, 671,", "Sheet11=96, 96, 1394, 609,", "Sheet11!P`", "S@heet1G", "Sheet2=192, 192, 1535, 652,", "Sheet3=224, 224, 1483, 859,", "Sheet4=0, 0, 1362, 450,", "Sheet5=256, 256, 1515, 891,", "Sheet6=64, 64, 1387, 580,", "Sheet7=128, 128, 1451, 644,", "Sheet8=96, 96, 1362, 731,", "Sheet9=60, 60, 1245, 603,", "sheet_error", "sheet_error)D`", "sheet, T", "(sh t As", "(sht As", "sht_macro_mappingO", "sht.Tab.ColorIndex = 3", "sht.Tab.ColorIndex = 3ils k", "sht.Tab.ColorIndex = 3/MM/k", "sht.Tab.ColorIndex = xlNone", "sibility.", "s#'i&'c#'e", "sing_Fun", "sNo + vb", "sNumeric", "social_insurance_base_incorrect", "social_insurance_benefit_start_date_incorrect", "social_insurance_benefit_start_date_should_day1", "sonContr", "special_outsourcing", "_Stand0ards", "Standards_columnl", "str1_val", "str1_value", "str2_value", "str_city", "str_city = Get_CN_Value(\"city\")", "str_fun_name", "str_mr = \"\"", "< str_mr As S", "str_password", "str_province", "_struchtur", "Structure", ", str_va", "str_valDue", "str_valu", ", str_va(lue", "str_value", "str_value~", "str_verson", "Sub Work", "sUI As B", "_ s\"!uLeav", "supplementary_enterprise_ratio_of_housing_fund_base_blank", "supplementary_enterprise_ratio_of_housing_fund_blank$", "supplementary_enterprise_ratio_of_housing_fund_incorrect$", "supplementary_housing_fund_base_incorrect", "supplementary_individual_ratio_of_housing_fund_base_blank", "supplementary_individual_ratio_of_housing_fund_blank$", "supplementary_individual_ratio_of_housing_fund_incorrect$", "surance_8Bas", "sWorkboo", "s Worksh", "Sys tem U", "tandards", "T= Appli", "Target A", "tary_Hou", "t As Wor", "tax_blan", "tax_value", "t_CN_Val", "tDim.}co", "teAsvalu`e()", "te_blank", "telephone_number_incorrect$", "Telephone_validation", "TFMl20L'B", "t, Formu la1:=", "t Functi", "TGet_CN_", "= @\"\" The", "> \"\" The", "t_Header,_C", "ther_to_", "tifA8e_Ty", "tional_W", "tlb#OLE", "t_Msg (G", "To dele", "tract_FI", "= TriRb.C ells(", "tr_value", "tSalary_", "ts(\"EN_C", "t_start_\"r", "t(str_va", "type_column", "type_name", "u4e00-\\u", "[\\u4e00-\\u9fa5]", "ub test!", "ub Works", "ue(\"nati", "ue(\"oPut_w", "uld_day1", "umn numb", "unifiedFormat", "unifiedFormat[", "Unprotect", "unprotect_workbook_structure", "upplemen", "urance_B", "uring_ty", "UsedRange", "uSupplemq", "util=128, 128, 1471, 588, Z", "Validate", "Validate_All_Data", "Validate_All_In_Data", "Validate_All_Out_Data", "Validation", "ValidRowB(", "_value <", "VBAP.IIf", "VBAProje", "vbCritical+}`", "vbDefaultButton2", "vbscript", "vbscript.regexp", "vbYesa?`", "ve chang`e lind", "Verify_Blank_Row", "Version_Control", "VersonControl", "VersonControl=192, 192, 1458, 827,", "verson_sheetname", "VExit Fu@nction", "VOutsour~c", "VSpeciaBl", "\\.\\w{2,6", "Whether a Sheet exist in a WorkBook", "Whether the content of sheet is empty", "whether_to_pay_blank$", "whether_to_tax_blank$", "WIndipvidu`4.", "wn;`2dvMsg Box (", "worker_name_blank", "working_system_blank$", "work_place_blank$", "work_position_blank", "work_position_type_blank$", "Workshe", "[Workspace]", "^\\w+([-.]\\w+)*@\\w+([-.]\\w+)*\\.\\w{2,6}$", "X_/7$7Nume", "X=@ Get_O", "xit Func", "xlPasteFormulasAndNumberFormatst", "xlToLeftWY`", "xlUnlockedCells", "xlValidateList", "x_she(etn", "yle , Tit", "ype:=xlD", "YYYY/MM/DD$", "zixzhiQ", "ZnPon-bq, \"-", "Zs ).Int", "Zto_Tax\""], "subcategory": "macro_hunter", "subcategory_url": "https://github.com/InQuest/yara-rules/blob/master/labs.inquest.net/macro_hunter.rule", "virus_total": "https://www.virustotal.com/gui/file/21715e51081764228757b839a729facf0e0fe5f038c3ebeefec06ea9fd6182ad", "vt_positives": 3, "vt_weight": 1.899999976158142, "attributes": [{"attribute": "filename", "category": "ioc", "count": 1, "value": "FM20.DLL"}, {"attribute": "filename", "category": "ioc", "count": 1, "value": "MSO.DLL"}, {"attribute": "filename", "category": "ioc", "count": 1, "value": "VBE7.DLL"}, {"attribute": "filepath", "category": "ioc", "count": 1, "value": "C:\\PROGRA"}, {"attribute": "filepath", "category": "ioc", "count": 1, "value": "C:\\Program"}, {"attribute": "filepath", "category": "ioc", "count": 1, "value": "C:\\Users\\ZHUBEN"}, {"attribute": "filepath", "category": "ioc", "count": 1, "value": "C:\\Wind"}, {"attribute": "filepath", "category": "ioc", "count": 1, "value": "C:\\Windows\\SysWOW64\\FM20.DLL"}, {"attribute": "filepath", "category": "ioc", "count": 1, "value": "C:\\Windows\\SysWOW64\\stdole2.tlb"}]}